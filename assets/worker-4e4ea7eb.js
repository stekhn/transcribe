var dE=Object.defineProperty;var cE=(Ve,vr,jr)=>vr in Ve?dE(Ve,vr,{enumerable:!0,configurable:!0,writable:!0,value:jr}):Ve[vr]=jr;var B=(Ve,vr,jr)=>(cE(Ve,typeof vr!="symbol"?vr+"":vr,jr),jr);(function(){var u0;"use strict";var Ve={},vr=Object.freeze({__proto__:null,default:Ve});const jr="3.0.0-alpha.0",ti=typeof self<"u",U0=ti&&self.constructor.name==="DedicatedWorkerGlobalScope",Al=ti&&"caches"in self,W0=typeof navigator<"u"&&"gpu"in navigator,Il=typeof process<"u",V0=Il&&((u0=process==null?void 0:process.release)==null?void 0:u0.name)==="node",ri=!Pl(Ve),Ml=!Pl(Ve),wn=Object.freeze({IS_BROWSER_ENV:ti,IS_WEBWORKER_ENV:U0,IS_WEB_CACHE_AVAILABLE:Al,IS_WEBGPU_AVAILABLE:W0,IS_PROCESS_AVAILABLE:Il,IS_NODE_ENV:V0,IS_FS_AVAILABLE:ri,IS_PATH_AVAILABLE:Ml}),Ss=ri&&Ml,Ol=Ss?Ve.dirname(Ve.dirname(Ve.fileURLToPath(self.location.href))):"./",G0=Ss?Ve.join(Ol,"/.cache/"):null,zl="/models/",H0=Ss?Ve.join(Ol,zl):zl,kt={version:jr,backends:{onnx:{},tfjs:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!ti,localModelPath:H0,useFS:ri,useBrowserCache:Al,useFSCache:ri,cacheDir:G0,useCustomCache:!1,customCache:null};function Pl(t){return Object.keys(t).length===0}const vt=class{constructor(){let t=function(...e){return t._call(...e)};return Object.setPrototypeOf(t,new.target.prototype)}_call(...t){throw Error("Must implement _call method in subclass")}};function bn(t,e){t&&t(e)}function j0(t){return Object.fromEntries(Object.entries(t).map(([e,r])=>[r,e]))}function Rl(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function q0(t){return Number.isInteger(t)||typeof t=="bigint"}function Bl(t){const e=[];let r=t;for(;Array.isArray(r);)e.push(r.length),r=r[0];return e}function gt(...t){return Array.prototype.concat.apply([],t)}function K0(...t){return t.reduce((e,r)=>e.flatMap(n=>r.map(a=>[n,a])))}function ni(t,e){return Math.abs((t+e)%(2*e)-e)}function $r(t,e){return Object.assign({},...e.map(r=>{if(t[r]!==void 0)return{[r]:t[r]}}))}class ai{constructor(e){B(this,"_CONTENT_TYPE_MAP",{txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"});if(this.filePath=e,this.headers=new Headers,this.exists=Ve.existsSync(e),this.exists){this.status=200,this.statusText="OK";let r=Ve.statSync(e);this.headers.set("content-length",r.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(a){n.arrayBuffer().then(s=>{a.enqueue(new Uint8Array(s)),a.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new ai(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await Ve.promises.readFile(this.filePath)).buffer}async blob(){const e=await Ve.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await Ve.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function ks(t,e=null,r=null){let n;try{n=new URL(t)}catch{return!1}return!(e&&!e.includes(n.protocol)||r&&!r.includes(n.hostname))}async function ii(t){var e,r,n,a;if(kt.useFS&&!ks(t,["http:","https:","blob:"]))return new ai(t);if(typeof process<"u"&&((e=process==null?void 0:process.release)==null?void 0:e.name)==="node"){const s=!!((r=process.env)!=null&&r.TESTING_REMOTELY),i=kt.version,o=new Headers;if(o.set("User-Agent",`transformers.js/${i}; is_ci/${s};`),ks(t,["http:","https:"],["huggingface.co","hf.co"])){const u=((n=process.env)==null?void 0:n.HF_TOKEN)??((a=process.env)==null?void 0:a.HF_ACCESS_TOKEN);u&&o.set("Authorization",`Bearer ${u}`)}return fetch(t,{headers:o})}else return fetch(t)}const Y0={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function X0(t,e,r){if(!r)return null;const n=Y0[t]??`Error (${t}) occurred while trying to load file`;throw Error(`${n}: "${e}".`)}class Dl{constructor(e){this.path=e}async match(e){let r=Ve.join(this.path,e),n=new ai(r);if(n.exists)return n}async put(e,r){const n=Buffer.from(await r.arrayBuffer());let a=Ve.join(this.path,e);try{await Ve.promises.mkdir(Ve.dirname(a),{recursive:!0}),await Ve.promises.writeFile(a,n)}catch(s){console.warn("An error occurred while writing the file to cache:",s)}}}async function Q0(t,...e){for(let r of e)try{let n=await t.match(r);if(n)return n}catch{continue}}async function si(t,e,r=!0,n={}){if(!kt.allowLocalModels&&n.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");bn(n.progress_callback,{status:"initiate",name:t,file:e});let a;if(!a&&kt.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{a=await caches.open("transformers-cache")}catch(S){console.warn("An error occurred while opening the browser cache:",S)}}if(!a&&kt.useFSCache&&(a=new Dl(n.cache_dir??kt.cacheDir)),!a&&kt.useCustomCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");const s=n.revision??"main";let i=oi(t,e),o=oi(kt.localModelPath,i),l=oi(kt.remoteHost,kt.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(s)),e),u=s==="main"?i:oi(t,s,e),d,h=a instanceof Dl?u:l,f=!1,g;a&&(g=await Q0(a,o,h));const p=g!==void 0;if(g===void 0){if(kt.allowLocalModels)if(ks(i,["http:","https:"])){if(n.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${i}.`)}else try{g=await ii(o),d=o}catch($){console.warn(`Unable to load from local path "${o}": "${$}"`)}if(g===void 0||g.status===404){if(n.local_files_only||!kt.allowRemoteModels){if(r)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${o}".`);return null}if(g=await ii(l),g.status!==200)return X0(g.status,l,r);d=h}f=a&&typeof Response<"u"&&g instanceof Response&&g.status===200}bn(n.progress_callback,{status:"download",name:t,file:e});const w={status:"progress",name:t,file:e};let v;return n.progress_callback?p&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(v=new Uint8Array(await g.arrayBuffer()),bn(n.progress_callback,{...w,progress:100,loaded:v.length,total:v.length})):v=await Z0(g,S=>{bn(n.progress_callback,{...w,...S})}):v=new Uint8Array(await g.arrayBuffer()),f&&d&&await a.match(d)===void 0&&await a.put(d,new Response(v,{headers:g.headers})).catch(S=>{console.warn(`Unable to add response to browser cache: ${S}.`)}),bn(n.progress_callback,{status:"done",name:t,file:e}),v}async function Rr(t,e,r=!0,n={}){let a=await si(t,e,r,n);if(a===null)return{};let i=new TextDecoder("utf-8").decode(a);return JSON.parse(i)}async function Z0(t,e){const r=t.headers.get("Content-Length");r===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let n=parseInt(r??"0"),a=new Uint8Array(n),s=0;const i=t.body.getReader();async function o(){const{done:l,value:u}=await i.read();if(l)return;let d=s+u.length;if(d>n){n=d;let f=new Uint8Array(n);f.set(a),a=f}a.set(u,s),s=d;const h=s/n*100;return e({progress:h,loaded:s,total:n}),o()}return await o(),a}function oi(...t){return t=t.map((e,r)=>(r&&(e=e.replace(new RegExp("^/"),"")),r!==t.length-1&&(e=e.replace(new RegExp("/$"),"")),e)),t.join("/")}function J0(t,[e,r,n],[a,s],i="bilinear",o=!1){const l=s/n,u=a/r,d=new t.constructor(a*s*e),h=r*n,f=a*s;for(let g=0;g<a;++g)for(let p=0;p<s;++p){const w=g*s+p,v=(p+.5)/l-.5,S=(g+.5)/u-.5;let $=Math.floor(v),E=Math.floor(S);const T=Math.min($+1,n-1),A=Math.min(E+1,r-1);$=Math.max($,0),E=Math.max(E,0);const z=v-$,R=S-E,G=(1-z)*(1-R),j=z*(1-R),q=(1-z)*R,ue=z*R,re=E*n,ee=A*n,le=re+$,N=re+T,O=ee+$,V=ee+T;for(let K=0;K<e;++K){const de=K*h;d[K*f+w]=G*t[de+le]+j*t[de+N]+q*t[de+O]+ue*t[de+V]}}return d}function ey(t,e,r){const n=new Array(r.length),a=new Array(r.length);for(let o=r.length-1,l=1;o>=0;--o)a[o]=l,n[o]=e[r[o]],l*=n[o];const s=r.map((o,l)=>a[r.indexOf(l)]),i=new t.constructor(t.length);for(let o=0;o<t.length;++o){let l=0;for(let u=e.length-1,d=o;u>=0;--u)l+=d%e[u]*s[u],d=Math.floor(d/e[u]);i[l]=t[o]}return[i,n]}function _t(t){const e=Lt(t)[0],r=t.map(s=>Math.exp(s-e)),n=r.reduce((s,i)=>s+i,0);return r.map(s=>s/n)}function ty(t){return _t(t).map(n=>Math.log(n))}function Nl(t){if(t.length===0)throw Error("Array must not be empty");let e=t[0],r=0;for(let n=1;n<t.length;++n)t[n]<e&&(e=t[n],r=n);return[e,r]}function Lt(t){if(t.length===0)throw Error("Array must not be empty");let e=t[0],r=0;for(let n=1;n<t.length;++n)t[n]>e&&(e=t[n],r=n);return[Number(e),r]}function Fl(t){return t>0&&(t&t-1)===0}class Ll{constructor(e){if(this.size=e|0,this.size<=1||!Fl(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(this.size*2);for(let n=0;n<this.table.length;n+=2){const a=Math.PI*n/this.size;this.table[n]=Math.cos(a),this.table[n+1]=-Math.sin(a)}let r=0;for(let n=1;this.size>n;n<<=1)++r;this._width=r%2===0?r-1:r,this._bitrev=new Int32Array(1<<this._width);for(let n=0;n<this._bitrev.length;++n){this._bitrev[n]=0;for(let a=0;a<this._width;a+=2){const s=this._width-a-2;this._bitrev[n]|=(n>>>a&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,r){const n=r||new Array(e.length>>>1);for(let a=0;a<e.length;a+=2)n[a>>>1]=e[a];return n}toComplexArray(e,r){const n=r||this.createComplexArray();for(let a=0;a<n.length;a+=2)n[a]=e[a>>>1],n[a+1]=0;return n}transform(e,r){if(e===r)throw new Error("Input and output buffers must be different");this._transform4(e,r,1)}realTransform(e,r){if(e===r)throw new Error("Input and output buffers must be different");this._realTransform4(e,r,1)}inverseTransform(e,r){if(e===r)throw new Error("Input and output buffers must be different");this._transform4(e,r,-1);for(let n=0;n<e.length;++n)e[n]/=this.size}_transform4(e,r,n){const a=this._csize;let i=1<<this._width,o=a/i<<1,l,u;const d=this._bitrev;if(o===4)for(l=0,u=0;l<a;l+=o,++u){const f=d[u];this._singleTransform2(r,e,l,f,i)}else for(l=0,u=0;l<a;l+=o,++u){const f=d[u];this._singleTransform4(r,e,l,f,i,n)}const h=this.table;for(i>>=2;i>=2;i>>=2){o=a/i<<1;const f=o>>>2;for(l=0;l<a;l+=o){const g=l+f-1;for(let p=l,w=0;p<g;p+=2,w+=i){const v=p,S=v+f,$=S+f,E=$+f,T=e[v],A=e[v+1],z=e[S],R=e[S+1],G=e[$],j=e[$+1],q=e[E],ue=e[E+1],re=h[w],ee=n*h[w+1],le=z*re-R*ee,N=z*ee+R*re,O=h[2*w],V=n*h[2*w+1],K=G*O-j*V,de=G*V+j*O,ae=h[3*w],D=n*h[3*w+1],ie=q*ae-ue*D,he=q*D+ue*ae,Se=T+K,Te=A+de,Xe=T-K,ot=A-de,je=le+ie,ht=N+he,ut=n*(le-ie),bt=n*(N-he);e[v]=Se+je,e[v+1]=Te+ht,e[S]=Xe+bt,e[S+1]=ot-ut,e[$]=Se-je,e[$+1]=Te-ht,e[E]=Xe-bt,e[E+1]=ot+ut}}}}_singleTransform2(e,r,n,a,s){const i=e[a],o=e[a+1],l=e[a+s],u=e[a+s+1];r[n]=i+l,r[n+1]=o+u,r[n+2]=i-l,r[n+3]=o-u}_singleTransform4(e,r,n,a,s,i){const o=s*2,l=s*3,u=e[a],d=e[a+1],h=e[a+s],f=e[a+s+1],g=e[a+o],p=e[a+o+1],w=e[a+l],v=e[a+l+1],S=u+g,$=d+p,E=u-g,T=d-p,A=h+w,z=f+v,R=i*(h-w),G=i*(f-v);r[n]=S+A,r[n+1]=$+z,r[n+2]=E+G,r[n+3]=T-R,r[n+4]=S-A,r[n+5]=$-z,r[n+6]=E-G,r[n+7]=T+R}_realTransform4(e,r,n){const a=this._csize;let i=1<<this._width,o=a/i<<1,l,u;const d=this._bitrev;if(o===4)for(l=0,u=0;l<a;l+=o,++u){const g=d[u];this._singleRealTransform2(r,e,l,g>>>1,i>>>1)}else for(l=0,u=0;l<a;l+=o,++u){const g=d[u];this._singleRealTransform4(r,e,l,g>>>1,i>>>1,n)}const h=this.table;for(i>>=2;i>=2;i>>=2){o=a/i<<1;const g=o>>>1,p=g>>>1,w=p>>>1;for(l=0;l<a;l+=o)for(let v=0,S=0;v<=w;v+=2,S+=i){const $=l+v,E=$+p,T=E+p,A=T+p,z=e[$],R=e[$+1],G=e[E],j=e[E+1],q=e[T],ue=e[T+1],re=e[A],ee=e[A+1],le=z,N=R,O=h[S],V=n*h[S+1],K=G*O-j*V,de=G*V+j*O,ae=h[2*S],D=n*h[2*S+1],ie=q*ae-ue*D,he=q*D+ue*ae,Se=h[3*S],Te=n*h[3*S+1],Xe=re*Se-ee*Te,ot=re*Te+ee*Se,je=le+ie,ht=N+he,ut=le-ie,bt=N-he,We=K+Xe,Ze=de+ot,Rt=n*(K-Xe),dt=n*(de-ot);if(e[$]=je+We,e[$+1]=ht+Ze,e[E]=ut+dt,e[E+1]=bt-Rt,v===0){e[T]=je-We,e[T+1]=ht-Ze;continue}if(v===w)continue;const Ar=l+p-v,Ir=l+g-v;e[Ar]=ut-n*dt,e[Ar+1]=-bt-n*Rt,e[Ir]=je-n*We,e[Ir+1]=-ht+n*Ze}}const f=a>>>1;for(let g=2;g<f;g+=2)e[a-g]=e[g],e[a-g+1]=-e[g+1]}_singleRealTransform2(e,r,n,a,s){const i=e[a],o=e[a+s];r[n]=i+o,r[n+1]=0,r[n+2]=i-o,r[n+3]=0}_singleRealTransform4(e,r,n,a,s,i){const o=s*2,l=s*3,u=e[a],d=e[a+s],h=e[a+o],f=e[a+l],g=u+h,p=u-h,w=d+f,v=i*(d-f);r[n]=g+w,r[n+1]=0,r[n+2]=p,r[n+3]=-v,r[n+4]=g-w,r[n+5]=0,r[n+6]=p,r[n+7]=v}}class ry{constructor(e){const r=2*(e-1),n=2*(2*e-1),a=2**Math.ceil(Math.log2(n));this.bufferSize=a,this._a=r;const s=new Float64Array(n),i=new Float64Array(a);this._chirpBuffer=new Float64Array(a),this._buffer1=new Float64Array(a),this._buffer2=new Float64Array(a),this._outBuffer1=new Float64Array(a),this._outBuffer2=new Float64Array(a);const o=-2*Math.PI/e,l=Math.cos(o),u=Math.sin(o);for(let d=0;d<n>>1;++d){const h=(d+1-e)**2/2,f=Math.sqrt(l**2+u**2)**h,g=h*Math.atan2(u,l),p=2*d;s[p]=f*Math.cos(g),s[p+1]=f*Math.sin(g),i[p]=s[p],i[p+1]=-s[p+1]}this._slicedChirpBuffer=s.subarray(r,n),this._f=new Ll(a>>1),this._f.transform(this._chirpBuffer,i)}_transform(e,r,n){const a=this._buffer1,s=this._buffer2,i=this._outBuffer1,o=this._outBuffer2,l=this._chirpBuffer,u=this._slicedChirpBuffer,d=this._a;if(n)for(let h=0;h<u.length;h+=2){const f=h+1,g=h>>1,p=r[g];a[h]=p*u[h],a[f]=p*u[f]}else for(let h=0;h<u.length;h+=2){const f=h+1;a[h]=r[h]*u[h]-r[f]*u[f],a[f]=r[h]*u[f]+r[f]*u[h]}this._f.transform(i,a);for(let h=0;h<l.length;h+=2){const f=h+1;s[h]=i[h]*l[h]-i[f]*l[f],s[f]=i[h]*l[f]+i[f]*l[h]}this._f.inverseTransform(o,s);for(let h=0;h<o.length;h+=2){const f=o[h+d],g=o[h+d+1],p=u[h],w=u[h+1];e[h]=f*p-g*w,e[h+1]=f*w+g*p}}transform(e,r){this._transform(e,r,!1)}realTransform(e,r){this._transform(e,r,!0)}}class ny{constructor(e){this.fft_length=e,this.isPowerOfTwo=Fl(e),this.isPowerOfTwo?(this.fft=new Ll(e),this.outputBufferSize=2*e):(this.fft=new ry(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,r){this.fft.realTransform(e,r)}transform(e,r){this.fft.transform(e,r)}}function ay(t,e){if(e%2===0||e<=0)throw new Error("Window size must be a positive odd number");const r=new t.constructor(t.length),n=new t.constructor(e),a=Math.floor(e/2);for(let s=0;s<t.length;++s){let i=0;for(let o=-a;o<=a;++o){let l=s+o;l<0?l=Math.abs(l):l>=t.length&&(l=2*(t.length-1)-l),n[i++]=t[l]}n.sort(),r[s]=n[a]}return r}function Qn(t,e){const r=Math.pow(10,e);return Math.round(t*r)/r}function iy(t){const e=Math.round(t);return Math.abs(t)%1===.5?e%2===0?e:e-1:e}function sy(t){const e=t.length,r=t[0].length,n=[e+1,r+1],a=Array.from({length:n[0]},()=>Array(n[1]).fill(1/0));a[0][0]=0;const s=Array.from({length:n[0]},()=>Array(n[1]).fill(-1));for(let d=1;d<n[1];++d)for(let h=1;h<n[0];++h){const f=a[h-1][d-1],g=a[h-1][d],p=a[h][d-1];let w,v;f<g&&f<p?(w=f,v=0):g<f&&g<p?(w=g,v=1):(w=p,v=2),a[h][d]=t[h-1][d-1]+w,s[h][d]=v}for(let d=0;d<n[1];++d)s[0][d]=2;for(let d=0;d<n[0];++d)s[d][0]=1;let i=e,o=r,l=[],u=[];for(;i>0||o>0;)switch(l.push(i-1),u.push(o-1),s[i][o]){case 0:--i,--o;break;case 1:--i;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${i}, ${o}]. Please file a bug report.`)}return l.reverse(),u.reverse(),[l,u]}/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Es=Object.defineProperty,oy=Object.getOwnPropertyDescriptor,ly=Object.getOwnPropertyNames,uy=Object.prototype.hasOwnProperty,te=(t,e)=>()=>(t&&(e=t(t=0)),e),vn=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),$n=(t,e)=>{for(var r in e)Es(t,r,{get:e[r],enumerable:!0})},dy=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of ly(e))!uy.call(t,a)&&a!==r&&Es(t,a,{get:()=>e[a],enumerable:!(n=oy(e,a))||n.enumerable});return t},qr=t=>dy(Es({},"__esModule",{value:!0}),t),Zn,Br,Kr,Ul,Cs,Ts=te(()=>{Zn=new Map,Br=[],Kr=(t,e,r)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let n=Zn.get(t);if(n===void 0)Zn.set(t,{backend:e,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==e)throw new Error(`cannot register backend "${t}" using priority ${r}`)}if(r>=0){let a=Br.indexOf(t);a!==-1&&Br.splice(a,1);for(let s=0;s<Br.length;s++)if(Zn.get(Br[s]).priority<=r){Br.splice(s,0,t);return}Br.push(t)}return}throw new TypeError("not a valid backend")},Ul=async t=>{let e=Zn.get(t);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let r=!!e.initPromise;try{return r||(e.initPromise=e.backend.init(t)),await e.initPromise,e.initialized=!0,e.backend}catch(n){return r||(e.error=`${n}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},Cs=async t=>{let e=t.executionProviders||[],r=e.map(l=>typeof l=="string"?l:l.name),n=r.length===0?Br:r,a,s=[],i=new Set;for(let l of n){let u=await Ul(l);typeof u=="string"?s.push({name:l,err:u}):(a||(a=u),a===u&&i.add(l))}if(!a)throw new Error(`no available backend found. ERR: ${s.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:u}of s)r.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${u}`);let o=e.filter(l=>i.has(typeof l=="string"?l:l.name));return[a,new Proxy(t,{get:(l,u)=>u==="executionProviders"?o:Reflect.get(l,u)})]}}),cy=te(()=>{Ts()}),Wl,py=te(()=>{Wl="1.18.0"}),As,Yt,Vl=te(()=>{py(),As="warning",Yt={wasm:{},webgl:{},webgpu:{},versions:{common:Wl},set logLevel(t){if(t!==void 0){if(typeof t!="string"||["verbose","info","warning","error","fatal"].indexOf(t)===-1)throw new Error(`Unsupported logging level: ${t}`);As=t}},get logLevel(){return As}},Object.defineProperty(Yt,"logLevel",{enumerable:!0})}),Ue,hy=te(()=>{Vl(),Ue=Yt}),Gl,Hl,fy=te(()=>{Gl=(t,e)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=t.dims[3],r.height=t.dims[2];let n=r.getContext("2d");if(n!=null){let a,s;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[3]):(a=t.dims[3],s=t.dims[2]);let i=(e==null?void 0:e.format)!==void 0?e.format:"RGB",o=e==null?void 0:e.norm,l,u;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?u=[0,0,0,0]:typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(u[3]=o.bias[3]));let d=s*a,h=0,f=d,g=d*2,p=-1;i==="RGBA"?(h=0,f=d,g=d*2,p=d*3):i==="RGB"?(h=0,f=d,g=d*2):i==="RBG"&&(h=0,g=d,f=d*2);for(let w=0;w<s;w++)for(let v=0;v<a;v++){let S=(t.data[h++]-u[0])*l[0],$=(t.data[f++]-u[1])*l[1],E=(t.data[g++]-u[2])*l[2],T=p===-1?255:(t.data[p++]-u[3])*l[3];n.fillStyle="rgba("+S+","+$+","+E+","+T+")",n.fillRect(v,w,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Hl=(t,e)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let a,s,i;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[1],i=t.dims[3]):(a=t.dims[3],s=t.dims[2],i=t.dims[1]);let o=e!==void 0&&e.format!==void 0?e.format:"RGB",l=e==null?void 0:e.norm,u,d;l===void 0||l.mean===void 0?u=[255,255,255,255]:typeof l.mean=="number"?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(u[3]=l.mean[3])),l===void 0||l.bias===void 0?d=[0,0,0,0]:typeof l.bias=="number"?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(d[3]=l.bias[3]));let h=s*a;if(e!==void 0&&(e.format!==void 0&&i===4&&e.format!=="RGBA"||i===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let f=4,g=0,p=1,w=2,v=3,S=0,$=h,E=h*2,T=-1;o==="RGBA"?(S=0,$=h,E=h*2,T=h*3):o==="RGB"?(S=0,$=h,E=h*2):o==="RBG"&&(S=0,E=h,$=h*2),n=r.createImageData(a,s);for(let A=0;A<s*a;g+=f,p+=f,w+=f,v+=f,A++)n.data[g]=(t.data[S++]-d[0])*u[0],n.data[p]=(t.data[$++]-d[1])*u[1],n.data[w]=(t.data[E++]-d[2])*u[2],n.data[v]=T===-1?255:(t.data[T++]-d[3])*u[3]}else throw new Error("Can not access image data");return n}}),li,jl,ql,Kl,Yl,my=te(()=>{Ms(),li=(t,e)=>{if(t===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=e,a=e.norm??{mean:255,bias:0},s,i;typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:s=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?i=[a.bias,a.bias,a.bias,a.bias]:i=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=e.format!==void 0?e.format:"RGBA",l=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",u=r*n,d=l==="RGBA"?new Float32Array(u*4):new Float32Array(u*3),h=4,f=0,g=1,p=2,w=3,v=0,S=u,$=u*2,E=-1;o==="RGB"&&(h=3,f=0,g=1,p=2,w=-1),l==="RGBA"?E=u*3:l==="RBG"?(v=0,$=u,S=u*2):l==="BGR"&&($=0,S=u,v=u*2);for(let T=0;T<u;T++,f+=h,p+=h,g+=h,w+=h)d[v++]=(t[f]+i[0])/s[0],d[S++]=(t[g]+i[1])/s[1],d[$++]=(t[p]+i[2])/s[2],E!==-1&&w!==-1&&(d[E++]=(t[w]+i[3])/s[3]);return l==="RGBA"?new er("float32",d,[1,4,r,n]):new er("float32",d,[1,3,r,n])},jl=async(t,e)=>{let r=typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement,n=typeof ImageData<"u"&&t instanceof ImageData,a=typeof ImageBitmap<"u"&&t instanceof ImageBitmap,s=typeof t=="string",i,o=e??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(r){let d=l();d.width=t.width,d.height=t.height;let h=u(d);if(h!=null){let f=t.height,g=t.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(f=e.resizedHeight,g=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=f,o.width=g}else o.tensorFormat="RGBA",o.height=f,o.width=g;h.drawImage(t,0,0),i=h.getImageData(0,0,g,f).data}else throw new Error("Can not access image data")}else if(n){let d,h;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,h=e.resizedWidth):(d=t.height,h=t.width),e!==void 0&&(o=e),o.format="RGBA",o.height=d,o.width=h,e!==void 0){let f=l();f.width=h,f.height=d;let g=u(f);if(g!=null)g.putImageData(t,0,0),i=g.getImageData(0,0,h,d).data;else throw new Error("Can not access image data")}else i=t.data}else if(a){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=l();d.width=t.width,d.height=t.height;let h=u(d);if(h!=null){let f=t.height,g=t.width;return h.drawImage(t,0,0,g,f),i=h.getImageData(0,0,g,f).data,o.height=f,o.width=g,li(i,o)}else throw new Error("Can not access image data")}else{if(s)return new Promise((d,h)=>{let f=l(),g=u(f);if(!t||!g)return h();let p=new Image;p.crossOrigin="Anonymous",p.src=t,p.onload=()=>{f.width=p.width,f.height=p.height,g.drawImage(p,0,0,f.width,f.height);let w=g.getImageData(0,0,f.width,f.height);o.height=f.height,o.width=f.width,d(li(w.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return li(i,o);throw new Error("Input data provided is not supported - aborted tensor creation")},ql=(t,e)=>{let{width:r,height:n,download:a,dispose:s}=e,i=[1,n,r,4];return new er({location:"texture",type:"float32",texture:t,dims:i,download:a,dispose:s})},Kl=(t,e)=>{let{dataType:r,dims:n,download:a,dispose:s}=e;return new er({location:"gpu-buffer",type:r??"float32",gpuBuffer:t,dims:n,download:a,dispose:s})},Yl=(t,e,r)=>new er({location:"cpu-pinned",type:t,data:e,dims:r??[e.length]})}),Yr,Jn,Is,Xl,gy=te(()=>{Yr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Jn=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Is=!1,Xl=()=>{if(!Is){Is=!0;let t=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;t&&(Yr.set("int64",BigInt64Array),Jn.set(BigInt64Array,"int64")),e&&(Yr.set("uint64",BigUint64Array),Jn.set(BigUint64Array,"uint64")),r?(Yr.set("float16",Float16Array),Jn.set(Float16Array,"float16")):Yr.set("float16",Uint16Array)}}}),Ql,Zl,_y=te(()=>{Ms(),Ql=t=>{let e=1;for(let r=0;r<t.length;r++){let n=t[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);e*=n}return e},Zl=(t,e)=>{switch(t.location){case"cpu":return new er(t.type,t.data,e);case"cpu-pinned":return new er({location:"cpu-pinned",data:t.data,type:t.type,dims:e});case"texture":return new er({location:"texture",texture:t.texture,type:t.type,dims:e});case"gpu-buffer":return new er({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),er,Ms=te(()=>{fy(),my(),gy(),_y(),er=class{constructor(t,e,r){Xl();let n,a;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,n=t.type,a=t.dims,t.location){case"cpu-pinned":{let i=Yr.get(n);if(!i)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(t.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=t.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,o;if(typeof t=="string")if(n=t,o=r,t==="string"){if(!Array.isArray(e))throw new TypeError("A string tensor's data must be a string array.");i=e}else{let l=Yr.get(t);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(e)){if(t==="float16"&&l===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?i=l.from(e,BigInt):i=l.from(e)}else if(e instanceof l)i=e;else throw new TypeError(`A ${n} tensor's data must be type of ${l}`)}else if(o=e,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof t[0];if(l==="string")n="string",i=t;else if(l==="boolean")n="bool",i=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Jn.get(t.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);n=l,i=t}if(o===void 0)o=[i.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");a=o,this.cpuData=i,this.dataLocation="cpu"}let s=Ql(a);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=a,this.size=s}static async fromImage(t,e){return jl(t,e)}static fromTexture(t,e){return ql(t,e)}static fromGpuBuffer(t,e){return Kl(t,e)}static fromPinnedBuffer(t,e,r){return Yl(t,e,r)}toDataURL(t){return Gl(this,t)}toImageData(t){return Hl(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let e=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=e,t&&this.disposer&&(this.disposer(),this.disposer=void 0),e}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Zl(this,t)}}}),Et,Os=te(()=>{Ms(),Et=er}),ea,zs,tr,Xt,Jl=te(()=>{Vl(),ea=(t,e)=>{(typeof Yt.trace>"u"?!Yt.wasm.trace:!Yt.trace)||console.timeStamp(`${t}::ORT::${e}`)},zs=(t,e)=>{var a;let r=((a=new Error().stack)==null?void 0:a.split(/\r\n|\r|\n/g))||[],n=!1;for(let s=0;s<r.length;s++){if(n&&!r[s].includes("TRACE_FUNC")){let i=`FUNC_${t}::${r[s].trim().split(" ")[1]}`;e&&(i+=`::${e}`),ea("CPU",i);return}r[s].includes("TRACE_FUNC")&&(n=!0)}},tr=t=>{(typeof Yt.trace>"u"?!Yt.wasm.trace:!Yt.trace)||zs("BEGIN",t)},Xt=t=>{(typeof Yt.trace>"u"?!Yt.wasm.trace:!Yt.trace)||zs("END",t)}}),eu,yy=te(()=>{Ts(),Os(),Jl(),eu=class N0{constructor(e){this.handler=e}async run(e,r,n){tr();let a={},s={};if(typeof e!="object"||e===null||e instanceof Et||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Et)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let u of r){if(typeof u!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(u)===-1)throw new RangeError(`'fetches' contains invalid output name: ${u}.`);a[u]=null}if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let u=!1,d=Object.getOwnPropertyNames(r);for(let h of this.outputNames)if(d.indexOf(h)!==-1){let f=r[h];(f===null||f instanceof Et)&&(u=!0,i=!1,a[h]=f)}if(u){if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let u of this.inputNames)if(typeof e[u]>"u")throw new Error(`input '${u}' is missing in 'feeds'.`);if(i)for(let u of this.outputNames)a[u]=null;let o=await this.handler.run(e,a,s),l={};for(let u in o)if(Object.hasOwnProperty.call(o,u)){let d=o[u];d instanceof Et?l[u]=d:l[u]=new Et(d.type,d.data,d.dims)}return Xt(),l}async release(){return this.handler.dispose()}static async create(e,r,n,a){tr();let s,i={};if(typeof e=="string"){if(s=e,typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(s=e,typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let d=e,h=0,f=e.byteLength;if(typeof r=="object"&&r!==null)i=r;else if(typeof r=="number"){if(h=r,!Number.isSafeInteger(h))throw new RangeError("'byteOffset' must be an integer.");if(h<0||h>=d.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${d.byteLength}).`);if(f=e.byteLength-h,typeof n=="number"){if(f=n,!Number.isSafeInteger(f))throw new RangeError("'byteLength' must be an integer.");if(f<=0||h+f>d.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${d.byteLength-h}].`);if(typeof a=="object"&&a!==null)i=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(d,h,f)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,l]=await Cs(i),u=await o.createInferenceSessionHandler(s,l);return Xt(),new N0(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Ps,wy=te(()=>{yy(),Ps=eu}),by=te(()=>{}),vy=te(()=>{}),$y=te(()=>{}),xy=te(()=>{}),tu,ru,Sy=te(()=>{Ts(),Os(),tu="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",ru=class F0{constructor(e,r,n){this.handler=e,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,r){let n=e.evalModel||"",a=e.optimizerModel||"",s=r||{},[i,o]=await Cs(s);if(i.createTrainingSessionHandler){let l=await i.createTrainingSessionHandler(e.checkpointState,e.trainModel,n,a,o);return new F0(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(tu)}typeNarrowingForRunStep(e,r,n,a,s){let i={},o={};if(typeof n!="object"||n===null||n instanceof Et||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if(typeof a=="object"){if(a===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(a instanceof Et)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(a)){if(a.length===0)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(let u of a){if(typeof u!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(u)===-1)throw new RangeError(`'fetches' contains invalid output name: ${u}.`);i[u]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let u=!1,d=Object.getOwnPropertyNames(a);for(let h of r)if(d.indexOf(h)!==-1){let f=a[h];(f===null||f instanceof Et)&&(u=!0,l=!1,i[h]=f)}if(u){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=a}}else if(typeof a<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let u of e)if(typeof n[u]>"u")throw new Error(`input '${u}' is missing in 'feeds'.`);if(l)for(let u of r)i[u]=null;return[i,o]}convertHandlerReturnTypeToMapOfTensors(e){let r={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let a=e[n];a instanceof Et?r[n]=a:r[n]=new Et(a.type,a.data,a.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,r,n){let[a,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,r,n),i=await this.handler.runTrainStep(e,a,s);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,r,n){if(this.hasEvalModel){let[a,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,r,n),i=await this.handler.runEvalStep(e,a,s);return this.convertHandlerReturnTypeToMapOfTensors(i)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,r=!0){let n=await this.getParametersSize(r);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,r)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}}),Rs,ky=te(()=>{Sy(),Rs=ru}),nu={};$n(nu,{InferenceSession:()=>Ps,TRACE:()=>ea,TRACE_FUNC_BEGIN:()=>tr,TRACE_FUNC_END:()=>Xt,Tensor:()=>Et,TrainingSession:()=>Rs,env:()=>Ue,registerBackend:()=>Kr});var rr=te(()=>{cy(),hy(),wy(),Os(),by(),vy(),Jl(),$y(),xy(),ky()}),Bs={};$n(Bs,{createReadStream:()=>su,readFile:()=>au,readFileSync:()=>iu});var au,iu,su,ou=te(()=>{au=void 0,iu=void 0,su=void 0}),Ds={};$n(Ds,{join:()=>lu});var lu,uu=te(()=>{lu=void 0}),Ey=vn((t,e)=>{var r=(()=>{var a;var n=typeof document<"u"?(a=document.currentScript)==null?void 0:a.src:void 0;return typeof __filename<"u"&&(n||(n=__filename)),function(s={}){var i=s,o,l,u=new Promise((m,y)=>{o=m,l=y});i.mountExternalData=(m,y)=>{(i.eb||(i.eb=new Map)).set(m,y)},i.unmountExternalData=()=>{delete i.eb};let d=()=>{let m=(x,C,M)=>(...F)=>{let Y=Nt,ne=C==null?void 0:C();F=x(...F);let ce=C==null?void 0:C();return ne!==ce&&(x=ce,M(ne),C=M=null),Nt!=Y?us():F},y=x=>async(...C)=>{var M;try{if(i.cb)throw Error("Session already started");let F=i.cb={xb:C[0],errors:[]},Y=await x(...C);if(i.cb!==F)throw Error("Session mismatch");(M=i.kb)==null||M.flush();let ne=F.errors;if(0<ne.length){let ce=await Promise.all(ne);if(ce=ce.filter(se=>se),0<ce.length)throw Error(ce.join(`
`))}return Y}finally{i.cb=null}};i._OrtCreateSession=m(i._OrtCreateSession,()=>i._OrtCreateSession,x=>i._OrtCreateSession=x),i._OrtRun=y(m(i._OrtRun,()=>i._OrtRun,x=>i._OrtRun=x)),i._OrtRunWithBinding=y(m(i._OrtRunWithBinding,()=>i._OrtRunWithBinding,x=>i._OrtRunWithBinding=x)),i._OrtBindInput=m(i._OrtBindInput,()=>i._OrtBindInput,x=>i._OrtBindInput=x),d=void 0};i.jsepInit=(m,y)=>{if(d==null||d(),m==="webgpu"){[i.kb,i.pb,i.tb,i.lb,i.sb,i.Ra,i.ub,i.wb,i.qb,i.rb,i.vb]=y;let x=i.kb;i.jsepRegisterBuffer=(C,M,F,Y)=>x.registerBuffer(C,M,F,Y),i.jsepGetBuffer=C=>x.getBuffer(C),i.jsepCreateDownloader=(C,M,F)=>x.createDownloader(C,M,F),i.jsepOnReleaseSession=C=>{x.onReleaseSession(C)},i.jsepOnRunStart=C=>x.onRunStart(C)}};var h=Object.assign({},i),f="./this.program",g=(m,y)=>{throw y},p=typeof window=="object",w=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S="",$,E,T;if(v){var A=(ou(),qr(Bs)),z=(uu(),qr(Ds));S=w?z.dirname(S)+"/":__dirname+"/",$=(m,y)=>(m=ut(m)?new URL(m):z.normalize(m),A.readFileSync(m,y?void 0:"utf8")),T=m=>(m=$(m,!0),m.buffer||(m=new Uint8Array(m)),m),E=(m,y,x,C=!0)=>{m=ut(m)?new URL(m):z.normalize(m),A.readFile(m,C?void 0:"utf8",(M,F)=>{M?x(M):y(C?F.buffer:F)})},!i.thisProgram&&1<process.argv.length&&(f=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(m,y)=>{throw process.exitCode=m,y}}else(p||w)&&(w?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),n&&(S=n),S.startsWith("blob:")?S="":S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1),$=m=>{var y=new XMLHttpRequest;return y.open("GET",m,!1),y.send(null),y.responseText},w&&(T=m=>{var y=new XMLHttpRequest;return y.open("GET",m,!1),y.responseType="arraybuffer",y.send(null),new Uint8Array(y.response)}),E=(m,y,x)=>{var C=new XMLHttpRequest;C.open("GET",m,!0),C.responseType="arraybuffer",C.onload=()=>{C.status==200||C.status==0&&C.response?y(C.response):x()},C.onerror=x,C.send(null)});var R=console.log.bind(console),G=console.error.bind(console);Object.assign(i,h),h=null;var j,q=!1,ue,re,ee,le,N,O,V,K,de,ae,D;function ie(){var m=j.buffer;i.HEAP8=re=new Int8Array(m),i.HEAP16=le=new Int16Array(m),i.HEAPU8=ee=new Uint8Array(m),i.HEAPU16=N=new Uint16Array(m),i.HEAP32=O=new Int32Array(m),i.HEAPU32=V=new Uint32Array(m),i.HEAPF32=K=new Float32Array(m),i.HEAPF64=D=new Float64Array(m),i.HEAP64=de=new BigInt64Array(m),i.HEAPU64=ae=new BigUint64Array(m)}var he=[],Se=[],Te=[],Xe=0,ot=null;function je(m){throw m="Aborted("+m+")",G(m),q=!0,ue=1,m=new WebAssembly.RuntimeError(m+". Build with -sASSERTIONS for more info."),l(m),m}var ht=m=>m.startsWith("data:application/octet-stream;base64,"),ut=m=>m.startsWith("file://"),bt;if(bt="ort-wasm-simd.wasm",!ht(bt)){var We=bt;bt=i.locateFile?i.locateFile(We,S):S+We}function Ze(m){if(T)return T(m);throw"both async and sync fetching of the wasm failed"}function Rt(m){if(p||w){if(typeof fetch=="function"&&!ut(m))return fetch(m,{credentials:"same-origin"}).then(y=>{if(!y.ok)throw`failed to load wasm binary file at '${m}'`;return y.arrayBuffer()}).catch(()=>Ze(m));if(E)return new Promise((y,x)=>{E(m,C=>y(new Uint8Array(C)),x)})}return Promise.resolve().then(()=>Ze(m))}function dt(m,y,x){return Rt(m).then(C=>WebAssembly.instantiate(C,y)).then(x,C=>{G(`failed to asynchronously prepare wasm: ${C}`),je(C)})}function Ar(m,y){var x=bt;return typeof WebAssembly.instantiateStreaming!="function"||ht(x)||ut(x)||v||typeof fetch!="function"?dt(x,m,y):fetch(x,{credentials:"same-origin"}).then(C=>WebAssembly.instantiateStreaming(C,m).then(y,function(M){return G(`wasm streaming compile failed: ${M}`),G("falling back to ArrayBuffer instantiation"),dt(x,m,y)}))}var Ir={824920:(m,y,x,C)=>{if(typeof i>"u"||!i.eb)return 1;if(m=Je(m>>>0),m.startsWith("./")&&(m=m.substring(2)),m=i.eb.get(m),!m)return 2;if(y>>>=0,x>>>=0,y+x>m.byteLength)return 3;try{return ee.set(m.subarray(y,y+x),C>>>0>>>0),0}catch{return 4}},825421:()=>{i.qb()},825452:()=>{i.rb()},825481:()=>{i.vb()},825506:m=>i.pb(m),825539:m=>i.tb(m),825571:(m,y,x)=>{i.lb(m,y,x,!0)},825610:(m,y,x)=>{i.lb(m,y,x)},825643:m=>{i.Ra("Abs",m,void 0)},825694:m=>{i.Ra("Neg",m,void 0)},825745:m=>{i.Ra("Floor",m,void 0)},825798:m=>{i.Ra("Ceil",m,void 0)},825850:m=>{i.Ra("Reciprocal",m,void 0)},825908:m=>{i.Ra("Sqrt",m,void 0)},825960:m=>{i.Ra("Exp",m,void 0)},826011:m=>{i.Ra("Erf",m,void 0)},826062:m=>{i.Ra("Sigmoid",m,void 0)},826117:(m,y,x)=>{i.Ra("HardSigmoid",m,{alpha:y,beta:x})},826196:m=>{i.Ra("Log",m,void 0)},826247:m=>{i.Ra("Sin",m,void 0)},826298:m=>{i.Ra("Cos",m,void 0)},826349:m=>{i.Ra("Tan",m,void 0)},826400:m=>{i.Ra("Asin",m,void 0)},826452:m=>{i.Ra("Acos",m,void 0)},826504:m=>{i.Ra("Atan",m,void 0)},826556:m=>{i.Ra("Sinh",m,void 0)},826608:m=>{i.Ra("Cosh",m,void 0)},826660:m=>{i.Ra("Asinh",m,void 0)},826713:m=>{i.Ra("Acosh",m,void 0)},826766:m=>{i.Ra("Atanh",m,void 0)},826819:m=>{i.Ra("Tanh",m,void 0)},826871:m=>{i.Ra("Not",m,void 0)},826922:(m,y,x)=>{i.Ra("Clip",m,{min:y,max:x})},826991:m=>{i.Ra("Clip",m,void 0)},827043:(m,y)=>{i.Ra("Elu",m,{alpha:y})},827101:m=>{i.Ra("Relu",m,void 0)},827153:(m,y)=>{i.Ra("LeakyRelu",m,{alpha:y})},827217:(m,y)=>{i.Ra("ThresholdedRelu",m,{alpha:y})},827287:(m,y)=>{i.Ra("Cast",m,{to:y})},827345:m=>{i.Ra("Add",m,void 0)},827396:m=>{i.Ra("Sub",m,void 0)},827447:m=>{i.Ra("Mul",m,void 0)},827498:m=>{i.Ra("Div",m,void 0)},827549:m=>{i.Ra("Pow",m,void 0)},827600:m=>{i.Ra("Equal",m,void 0)},827653:m=>{i.Ra("Greater",m,void 0)},827708:m=>{i.Ra("GreaterOrEqual",m,void 0)},827770:m=>{i.Ra("Less",m,void 0)},827822:m=>{i.Ra("LessOrEqual",m,void 0)},827881:(m,y,x,C,M)=>{i.Ra("ReduceMean",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828040:(m,y,x,C,M)=>{i.Ra("ReduceMax",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828198:(m,y,x,C,M)=>{i.Ra("ReduceMin",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828356:(m,y,x,C,M)=>{i.Ra("ReduceProd",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828515:(m,y,x,C,M)=>{i.Ra("ReduceSum",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828673:(m,y,x,C,M)=>{i.Ra("ReduceL1",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828830:(m,y,x,C,M)=>{i.Ra("ReduceL2",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},828987:(m,y,x,C,M)=>{i.Ra("ReduceLogSum",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},829148:(m,y,x,C,M)=>{i.Ra("ReduceSumSquare",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},829312:(m,y,x,C,M)=>{i.Ra("ReduceLogSumExp",m,{keepDims:!!y,noopWithEmptyAxes:!!x,axes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},829476:m=>{i.Ra("Where",m,void 0)},829529:(m,y,x)=>{i.Ra("Transpose",m,{perm:y?Array.from(O.subarray(y>>>0,x>>>0)):[]})},829637:(m,y,x,C)=>{i.Ra("DepthToSpace",m,{blocksize:y,mode:Je(x),format:C?"NHWC":"NCHW"})},829770:(m,y,x,C)=>{i.Ra("DepthToSpace",m,{blocksize:y,mode:Je(x),format:C?"NHWC":"NCHW"})},829903:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee)=>{i.Ra("ConvTranspose",m,{format:ce?"NHWC":"NCHW",autoPad:y,dilations:[x],group:C,kernelShape:[M],pads:[F,Y],strides:[ne],wIsConst:()=>!!re[se>>>0],outputPadding:ge?Array.from(O.subarray(ge>>>0,Be>>>0)):[],outputShape:Fe?Array.from(O.subarray(Fe>>>0,L>>>0)):[],activation:Je(Ee)})},830304:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L)=>{i.Ra("ConvTranspose",m,{format:ne?"NHWC":"NCHW",autoPad:y,dilations:Array.from(O.subarray(x>>>0,(x>>>0)+2>>>0)),group:C,kernelShape:Array.from(O.subarray(M>>>0,(M>>>0)+2>>>0)),pads:Array.from(O.subarray(F>>>0,(F>>>0)+4>>>0)),strides:Array.from(O.subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!re[ce>>>0],outputPadding:se?Array.from(O.subarray(se>>>0,ge>>>0)):[],outputShape:Be?Array.from(O.subarray(Be>>>0,Fe>>>0)):[],activation:Je(L)})},830869:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee)=>{i.Ra("ConvTranspose",m,{format:ce?"NHWC":"NCHW",autoPad:y,dilations:[x],group:C,kernelShape:[M],pads:[F,Y],strides:[ne],wIsConst:()=>!!re[se>>>0],outputPadding:ge?Array.from(O.subarray(ge>>>0,Be>>>0)):[],outputShape:Fe?Array.from(O.subarray(Fe>>>0,L>>>0)):[],activation:Je(Ee)})},831270:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L)=>{i.Ra("ConvTranspose",m,{format:ne?"NHWC":"NCHW",autoPad:y,dilations:Array.from(O.subarray(x>>>0,(x>>>0)+2>>>0)),group:C,kernelShape:Array.from(O.subarray(M>>>0,(M>>>0)+2>>>0)),pads:Array.from(O.subarray(F>>>0,(F>>>0)+4>>>0)),strides:Array.from(O.subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!re[ce>>>0],outputPadding:se?Array.from(O.subarray(se>>>0,ge>>>0)):[],outputShape:Be?Array.from(O.subarray(Be>>>0,Fe>>>0)):[],activation:Je(L)})},831835:(m,y)=>{i.Ra("GlobalAveragePool",m,{format:y?"NHWC":"NCHW"})},831926:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee,Pe)=>{i.Ra("AveragePool",m,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:x,count_include_pad:C,storage_order:M,dilations:[F,Y],kernel_shape:[ne,ce],pads:[se,ge,Be,Fe],strides:[L,Ee]})},832210:(m,y)=>{i.Ra("GlobalAveragePool",m,{format:y?"NHWC":"NCHW"})},832301:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee,Pe)=>{i.Ra("AveragePool",m,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:x,count_include_pad:C,storage_order:M,dilations:[F,Y],kernel_shape:[ne,ce],pads:[se,ge,Be,Fe],strides:[L,Ee]})},832585:(m,y)=>{i.Ra("GlobalMaxPool",m,{format:y?"NHWC":"NCHW"})},832672:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee,Pe)=>{i.Ra("MaxPool",m,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:x,count_include_pad:C,storage_order:M,dilations:[F,Y],kernel_shape:[ne,ce],pads:[se,ge,Be,Fe],strides:[L,Ee]})},832952:(m,y)=>{i.Ra("GlobalMaxPool",m,{format:y?"NHWC":"NCHW"})},833039:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee,Pe)=>{i.Ra("MaxPool",m,{format:Pe?"NHWC":"NCHW",auto_pad:y,ceil_mode:x,count_include_pad:C,storage_order:M,dilations:[F,Y],kernel_shape:[ne,ce],pads:[se,ge,Be,Fe],strides:[L,Ee]})},833319:(m,y,x,C,M)=>{i.Ra("Gemm",m,{alpha:y,beta:x,transA:C,transB:M})},833423:m=>{i.Ra("MatMul",m,void 0)},833477:(m,y,x,C)=>{i.Ra("ArgMax",m,{keepDims:!!y,selectLastIndex:!!x,axis:C})},833585:(m,y,x,C)=>{i.Ra("ArgMin",m,{keepDims:!!y,selectLastIndex:!!x,axis:C})},833693:(m,y)=>{i.Ra("Softmax",m,{axis:y})},833756:(m,y)=>{i.Ra("Concat",m,{axis:y})},833816:(m,y,x,C,M)=>{i.Ra("Split",m,{axis:y,numOutputs:x,splitSizes:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},833956:m=>{i.Ra("Expand",m,void 0)},834010:(m,y)=>{i.Ra("Gather",m,{axis:Number(y)})},834081:(m,y)=>{i.Ra("GatherElements",m,{axis:Number(y)})},834160:(m,y,x,C,M,F,Y,ne,ce,se,ge)=>{i.Ra("Resize",m,{antialias:y,axes:x?Array.from(O.subarray(x>>>0,C>>>0)):[],coordinateTransformMode:Je(M),cubicCoeffA:F,excludeOutside:Y,extrapolationValue:ne,keepAspectRatioPolicy:Je(ce),mode:Je(se),nearestMode:Je(ge)})},834506:(m,y,x,C,M,F,Y)=>{i.Ra("Slice",m,{starts:y?Array.from(O.subarray(y>>>0,x>>>0)):[],ends:C?Array.from(O.subarray(C>>>0,M>>>0)):[],axes:F?Array.from(O.subarray(F>>>0,Y>>>0)):[]})},834722:m=>{i.Ra("Tile",m,void 0)},834774:(m,y,x,C)=>{i.Ra("LayerNormalization",m,{axis:y,epsilon:x,simplified:!!C})},834885:(m,y,x)=>{i.Ra("InstanceNormalization",m,{epsilon:y,format:x?"NHWC":"NCHW"})},834999:(m,y,x)=>{i.Ra("InstanceNormalization",m,{epsilon:y,format:x?"NHWC":"NCHW"})},835113:m=>{i.Ra("Range",m,void 0)},835166:(m,y)=>{i.Ra("Einsum",m,{equation:Je(y)})},835247:(m,y,x,C,M)=>{i.Ra("Pad",m,{mode:y,value:x,pads:C?Array.from(O.subarray(C>>>0,M>>>0)):[]})},835374:(m,y,x,C,M,F)=>{i.Ra("BatchNormalization",m,{epsilon:y,momentum:x,spatial:!!M,trainingMode:!!C,format:F?"NHWC":"NCHW"})},835543:(m,y,x,C,M,F)=>{i.Ra("BatchNormalization",m,{epsilon:y,momentum:x,spatial:!!M,trainingMode:!!C,format:F?"NHWC":"NCHW"})},835712:(m,y,x)=>{i.Ra("CumSum",m,{exclusive:Number(y),reverse:Number(x)})},835809:(m,y,x,C,M,F,Y,ne,ce)=>{i.Ra("Attention",m,{numHeads:y,isUnidirectional:x,maskFilterValue:C,scale:M,doRotary:F,qkvHiddenSizes:Y?Array.from(O.subarray(Number(ne)>>>0,Number(ne)+Y>>>0)):[],pastPresentShareBuffer:!!ce})},836081:m=>{i.Ra("BiasAdd",m,void 0)},836136:m=>{i.Ra("BiasSplitGelu",m,void 0)},836197:m=>{i.Ra("FastGelu",m,void 0)},836253:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe)=>{i.Ra("Conv",m,{format:ce?"NHWC":"NCHW",auto_pad:y,dilations:[x],group:C,kernel_shape:[M],pads:F?Array.from(O.subarray(F>>>0,Y>>>0)):[],strides:[ne],w_is_const:()=>!!re[se>>>0],activation:Je(ge),activation_params:Be?Array.from(K.subarray(Be>>>0,Fe>>>0)):[]})},836623:(m,y,x,C,M,F,Y,ne,ce,se,ge,Be,Fe,L,Ee,Pe)=>{i.Ra("Conv",m,{format:Be?"NHWC":"NCHW",auto_pad:y,dilations:[x,C],group:M,kernel_shape:[F,Y],pads:ne?Array.from(O.subarray(ne>>>0,ce>>>0)):[],strides:[se,ge],w_is_const:()=>!!re[Fe>>>0],activation:Je(L),activation_params:Ee?Array.from(K.subarray(Ee>>>0,Pe>>>0)):[]})},837014:m=>{i.Ra("Gelu",m,void 0)},837066:(m,y,x,C,M,F)=>{i.Ra("MatMulNBits",m,{k:y,n:x,accuracyLevel:C,bits:M,blockSize:F})},837193:(m,y,x,C,M,F)=>{i.Ra("MultiHeadAttention",m,{numHeads:y,isUnidirectional:x,maskFilterValue:C,scale:M,doRotary:F})},837352:(m,y,x,C,M)=>{i.Ra("RotaryEmbedding",m,{interleaved:!!y,numHeads:x,rotaryEmbeddingDim:C,scale:M})},837491:(m,y,x)=>{i.Ra("SkipLayerNormalization",m,{epsilon:y,simplified:!!x})},837593:(m,y,x)=>{i.Ra("SkipLayerNormalization",m,{epsilon:y,simplified:!!x})},837695:(m,y,x,C)=>{i.Ra("LayerNormalization",m,{axis:y,epsilon:x,simplified:!!C})},837806:m=>{i.ub(m)},837840:(m,y)=>i.wb(m,y,i.cb.xb,i.cb.errors)};function pn(m){this.name="ExitStatus",this.message=`Program terminated with exit(${m})`,this.status=m}class ml{constructor(y){this.hb=y-24}}var Mr=0,Vr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Na=(m,y,x)=>{y>>>=0;var C=y+x;for(x=y;m[x]&&!(x>=C);)++x;if(16<x-y&&m.buffer&&Vr)return Vr.decode(m.subarray(y,x));for(C="";y<x;){var M=m[y++];if(M&128){var F=m[y++]&63;if((M&224)==192)C+=String.fromCharCode((M&31)<<6|F);else{var Y=m[y++]&63;M=(M&240)==224?(M&15)<<12|F<<6|Y:(M&7)<<18|F<<12|Y<<6|m[y++]&63,65536>M?C+=String.fromCharCode(M):(M-=65536,C+=String.fromCharCode(55296|M>>10,56320|M&1023))}}else C+=String.fromCharCode(M)}return C},Je=(m,y)=>(m>>>=0)?Na(ee,m,y):"",Nn=m=>{for(var y=0,x=0;x<m.length;++x){var C=m.charCodeAt(x);127>=C?y++:2047>=C?y+=2:55296<=C&&57343>=C?(y+=4,++x):y+=3}return y},Jt=(m,y,x,C)=>{if(x>>>=0,!(0<C))return 0;var M=x;C=x+C-1;for(var F=0;F<m.length;++F){var Y=m.charCodeAt(F);if(55296<=Y&&57343>=Y){var ne=m.charCodeAt(++F);Y=65536+((Y&1023)<<10)|ne&1023}if(127>=Y){if(x>=C)break;y[x++>>>0]=Y}else{if(2047>=Y){if(x+1>=C)break;y[x++>>>0]=192|Y>>6}else{if(65535>=Y){if(x+2>=C)break;y[x++>>>0]=224|Y>>12}else{if(x+3>=C)break;y[x++>>>0]=240|Y>>18,y[x++>>>0]=128|Y>>12&63}y[x++>>>0]=128|Y>>6&63}y[x++>>>0]=128|Y&63}}return y[x>>>0]=0,x-M},Gr,Ht=m=>{for(var y="";ee[m>>>0];)y+=Gr[ee[m++>>>0]];return y},Fa={},Fn={},wr;function La(m,y,x={}){var C=y.name;if(!m)throw new wr(`type "${C}" must have a positive integer typeid pointer`);if(Fn.hasOwnProperty(m)){if(x.nb)return;throw new wr(`Cannot register type '${C}' twice`)}Fn[m]=y,Fa.hasOwnProperty(m)&&(y=Fa[m],delete Fa[m],y.forEach(M=>M()))}function Bt(m,y,x={}){if(!("argPackAdvance"in y))throw new TypeError("registerType registeredInstance requires argPackAdvance");return La(m,y,x)}var Ln=(m,y,x)=>{switch(y){case 1:return x?C=>re[C>>>0]:C=>ee[C>>>0];case 2:return x?C=>le[C>>>1>>>0]:C=>N[C>>>1>>>0];case 4:return x?C=>O[C>>>2>>>0]:C=>V[C>>>2>>>0];case 8:return x?C=>de[C>>>3]:C=>ae[C>>>3];default:throw new TypeError(`invalid integer width (${y}): ${m}`)}},Un=[],ft=[];function Ua(m){m>>>=0,9<m&&--ft[m+1]===0&&(ft[m]=void 0,Un.push(m))}var ze=m=>{if(!m)throw new wr("Cannot use deleted val. handle = "+m);return ft[m]},Dt=m=>{switch(m){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let y=Un.pop()||ft.length;return ft[y]=m,ft[y+1]=1,y}};function hn(m){return this.fromWireType(V[m>>>2>>>0])}var gl={name:"emscripten::val",fromWireType:m=>{var y=ze(m);return Ua(m),y},toWireType:(m,y)=>Dt(y),argPackAdvance:8,readValueFromPointer:hn,bb:null},ts=(m,y)=>{switch(y){case 4:return function(x){return this.fromWireType(K[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(D[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${y}): ${m}`)}},rs=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ve=(m,y)=>{for(var x=m>>1,C=x+y/2;!(x>=C)&&N[x>>>0];)++x;if(x<<=1,32<x-m&&rs)return rs.decode(ee.subarray(m>>>0,x>>>0));for(x="",C=0;!(C>=y/2);++C){var M=le[m+2*C>>>1>>>0];if(M==0)break;x+=String.fromCharCode(M)}return x},Wn=(m,y,x)=>{if(x??(x=2147483647),2>x)return 0;x-=2;var C=y;x=x<2*m.length?x/2:m.length;for(var M=0;M<x;++M)le[y>>>1>>>0]=m.charCodeAt(M),y+=2;return le[y>>>1>>>0]=0,y-C},ns=m=>2*m.length,_l=(m,y)=>{for(var x=0,C="";!(x>=y/4);){var M=O[m+4*x>>>2>>>0];if(M==0)break;++x,65536<=M?(M-=65536,C+=String.fromCharCode(55296|M>>10,56320|M&1023)):C+=String.fromCharCode(M)}return C},as=(m,y,x)=>{if(y>>>=0,x??(x=2147483647),4>x)return 0;var C=y;x=C+x-4;for(var M=0;M<m.length;++M){var F=m.charCodeAt(M);if(55296<=F&&57343>=F){var Y=m.charCodeAt(++M);F=65536+((F&1023)<<10)|Y&1023}if(O[y>>>2>>>0]=F,y+=4,y+4>x)break}return O[y>>>2>>>0]=0,y-C},is=m=>{for(var y=0,x=0;x<m.length;++x){var C=m.charCodeAt(x);55296<=C&&57343>=C&&++x,y+=4}return y},Vn=(m,y)=>{var x=Fn[m];if(x===void 0)throw m=Qa(m),x=Ht(m),Mt(m),new wr(`${y} has unknown type ${x}`);return x},Wa=(m,y,x)=>{var C=[];return m=m.toWireType(C,x),C.length&&(V[y>>>2>>>0]=Dt(C)),m},fn=m=>{try{m()}catch(y){je(y)}},lt=m=>{var y;if(!q)try{m();try{ue=ue=m=ue,(y=i.onExit)==null||y.call(i,m),q=!0,g(m,new pn(m))}catch(x){x instanceof pn||x=="unwind"||g(1,x)}}catch(x){x instanceof pn||x=="unwind"||g(1,x)}};function ss(){var m=be,y={};for(let[x,C]of Object.entries(m))y[x]=typeof C=="function"?(...M)=>{pr.push(x);try{return C(...M)}finally{q||(pr.pop(),Nt&&cr===1&&pr.length===0&&(cr=0,fn(gs),typeof Fibers<"u"&&Fibers.Db()))}}:C;return y}var cr=0,Nt=null,Va=0,pr=[],Ga={},Ha={},os=0,Gn=null,ls=[];function us(){return new Promise((m,y)=>{Gn={resolve:m,reject:y}})}function ds(){var m=Hr(65548),y=m+12;V[m>>>2>>>0]=y,V[m+4>>>2>>>0]=y+65536,y=pr[0];var x=Ga[y];return x===void 0&&(x=os++,Ga[y]=x,Ha[x]=y),O[m+8>>>2>>>0]=x,m}function cs(m){if(!q){if(cr===0){var y=!1,x=!1;m((C=0)=>{if(!q&&(Va=C,y=!0,x)){cr=2,fn(()=>fr(Nt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),C=!1;try{var M=(0,be[Ha[O[Nt+8>>>2>>>0]]])()}catch(ne){M=ne,C=!0}var F=!1;if(!Nt){var Y=Gn;Y&&(Gn=null,(C?Y.reject:Y.resolve)(M),F=!0)}if(C&&!F)throw M}}),x=!0,y||(cr=1,Nt=ds(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),fn(()=>_n(Nt)))}else cr===2?(cr=0,fn(Kt),Mt(Nt),Nt=null,ls.forEach(lt)):je(`invalid state: ${cr}`);return Va}}function ja(m){return cs(y=>{m().then(y)})}var mn=[],ps={},Hn=m=>{var y=ps[m];return y===void 0?Ht(m):y},jt=()=>typeof globalThis=="object"?globalThis:Function("return this")(),qa=m=>{var y=mn.length;return mn.push(m),y},Ka=(m,y)=>{for(var x=Array(m),C=0;C<m;++C)x[C]=Vn(V[y+4*C>>>2>>>0],"parameter "+C);return x},hr=(m,y)=>Object.defineProperty(y,"name",{value:m});function yl(m){var y=Function;if(!(y instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof y} which is not a function`);var x=hr(y.name||"unknownFunctionName",function(){});return x.prototype=y.prototype,x=new x,m=y.apply(x,m),m instanceof Object?m:x}var St=m=>m%4===0&&(m%100!==0||m%400===0),Ya=[0,31,60,91,121,152,182,213,244,274,305,335],jn=[0,31,59,90,120,151,181,212,243,273,304,334],qt=[],qn=(m,y)=>{qt.length=0;for(var x;x=ee[m++>>>0];){var C=x!=105;C&=x!=112,y+=C&&y%8?4:0,qt.push(x==112?V[y>>>2>>>0]:x==106?de[y>>>3]:x==105?O[y>>>2>>>0]:D[y>>>3>>>0]),y+=C?8:4}return qt},mt={},Ft=()=>{if(!gn){var m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:f||"./this.program"},y;for(y in mt)mt[y]===void 0?delete m[y]:m[y]=mt[y];var x=[];for(y in m)x.push(`${y}=${m[y]}`);gn=x}return gn},gn,wl=[null,[],[]],hs=[31,29,31,30,31,30,31,31,30,31,30,31],Xa=[31,28,31,30,31,30,31,31,30,31,30,31];function bl(m){var y=Array(Nn(m)+1);return Jt(m,y,0,y.length),y}function fs(m,y,x,C){function M(L,Ee,Pe){for(L=typeof L=="number"?L.toString():L||"";L.length<Ee;)L=Pe[0]+L;return L}function F(L,Ee){return M(L,Ee,"0")}function Y(L,Ee){function Pe(Pr){return 0>Pr?-1:0<Pr?1:0}var zr;return(zr=Pe(L.getFullYear()-Ee.getFullYear()))===0&&(zr=Pe(L.getMonth()-Ee.getMonth()))===0&&(zr=Pe(L.getDate()-Ee.getDate())),zr}function ne(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function ce(L){var Ee=L.$a;for(L=new Date(new Date(L.ab+1900,0,1).getTime());0<Ee;){var Pe=L.getMonth(),zr=(St(L.getFullYear())?hs:Xa)[Pe];if(Ee>zr-L.getDate())Ee-=zr-L.getDate()+1,L.setDate(1),11>Pe?L.setMonth(Pe+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+Ee);break}}return Pe=new Date(L.getFullYear()+1,0,4),Ee=ne(new Date(L.getFullYear(),0,4)),Pe=ne(Pe),0>=Y(Ee,L)?0>=Y(Pe,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}m>>>=0,y>>>=0,x>>>=0,C>>>=0;var se=V[C+40>>>2>>>0];C={Ab:O[C>>>2>>>0],zb:O[C+4>>>2>>>0],fb:O[C+8>>>2>>>0],jb:O[C+12>>>2>>>0],gb:O[C+16>>>2>>>0],ab:O[C+20>>>2>>>0],Va:O[C+24>>>2>>>0],$a:O[C+28>>>2>>>0],Cb:O[C+32>>>2>>>0],yb:O[C+36>>>2>>>0],Bb:se?Je(se):""},x=Je(x),se={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ge in se)x=x.replace(new RegExp(ge,"g"),se[ge]);var Be="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Fe="January February March April May June July August September October November December".split(" ");se={"%a":L=>Be[L.Va].substring(0,3),"%A":L=>Be[L.Va],"%b":L=>Fe[L.gb].substring(0,3),"%B":L=>Fe[L.gb],"%C":L=>F((L.ab+1900)/100|0,2),"%d":L=>F(L.jb,2),"%e":L=>M(L.jb,2," "),"%g":L=>ce(L).toString().substring(2),"%G":ce,"%H":L=>F(L.fb,2),"%I":L=>(L=L.fb,L==0?L=12:12<L&&(L-=12),F(L,2)),"%j":L=>{for(var Ee=0,Pe=0;Pe<=L.gb-1;Ee+=(St(L.ab+1900)?hs:Xa)[Pe++]);return F(L.jb+Ee,3)},"%m":L=>F(L.gb+1,2),"%M":L=>F(L.zb,2),"%n":()=>`
`,"%p":L=>0<=L.fb&&12>L.fb?"AM":"PM","%S":L=>F(L.Ab,2),"%t":()=>"	","%u":L=>L.Va||7,"%U":L=>F(Math.floor((L.$a+7-L.Va)/7),2),"%V":L=>{var Ee=Math.floor((L.$a+7-(L.Va+6)%7)/7);if(2>=(L.Va+371-L.$a-2)%7&&Ee++,Ee)Ee==53&&(Pe=(L.Va+371-L.$a)%7,Pe==4||Pe==3&&St(L.ab)||(Ee=1));else{Ee=52;var Pe=(L.Va+7-L.$a-1)%7;(Pe==4||Pe==5&&St(L.ab%400-1))&&Ee++}return F(Ee,2)},"%w":L=>L.Va,"%W":L=>F(Math.floor((L.$a+7-(L.Va+6)%7)/7),2),"%y":L=>(L.ab+1900).toString().substring(2),"%Y":L=>L.ab+1900,"%z":L=>{L=L.yb;var Ee=0<=L;return L=Math.abs(L)/60,(Ee?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.Bb,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(ge in se)x.includes(ge)&&(x=x.replace(new RegExp(ge,"g"),se[ge](C)));return x=x.replace(/\0\0/g,"%"),ge=bl(x),ge.length>y?0:(re.set(ge,m>>>0),ge.length-1)}for(var ms=Array(256),Kn=0;256>Kn;++Kn)ms[Kn]=String.fromCharCode(Kn);Gr=ms,wr=i.BindingError=class extends Error{constructor(m){super(m),this.name="BindingError"}},i.InternalError=class extends Error{constructor(m){super(m),this.name="InternalError"}},ft.push(0,1,void 0,1,null,1,!0,1,!1,1),i.count_emval_handles=()=>ft.length/2-5-Un.length;var vl={ia:function(m,y,x){return ja(async()=>{await i.sb(m,y,x)})},a:function(m,y,x){m>>>=0;var C=new ml(m);throw V[C.hb+16>>>2>>>0]=0,V[C.hb+4>>>2>>>0]=y>>>0,V[C.hb+8>>>2>>>0]=x>>>0,Mr=m,Mr},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(m,y,x){y=Ht(y>>>0),Bt(m>>>0,{name:y,fromWireType:C=>C,toWireType:function(C,M){if(typeof M!="bigint"&&typeof M!="number")throw M===null?M="null":(C=typeof M,M=C==="object"||C==="array"||C==="function"?M.toString():""+M),new TypeError(`Cannot convert "${M}" to ${this.name}`);return typeof M=="number"&&(M=BigInt(M)),M},argPackAdvance:8,readValueFromPointer:Ln(y,x>>>0,y.indexOf("u")==-1),bb:null})},K:function(m,y,x,C){y=Ht(y>>>0),Bt(m>>>0,{name:y,fromWireType:function(M){return!!M},toWireType:function(M,F){return F?x:C},argPackAdvance:8,readValueFromPointer:function(M){return this.fromWireType(ee[M>>>0])},bb:null})},J:function(m){return Bt(m>>>0,gl)},B:function(m,y,x){y=Ht(y>>>0),Bt(m>>>0,{name:y,fromWireType:C=>C,toWireType:(C,M)=>M,argPackAdvance:8,readValueFromPointer:ts(y,x>>>0),bb:null})},s:function(m,y,x,C,M){if(m>>>=0,x>>>=0,y=Ht(y>>>0),M===-1&&(M=4294967295),M=ne=>ne,C===0){var F=32-8*x;M=ne=>ne<<F>>>F}var Y=y.includes("unsigned")?function(ne,ce){return ce>>>0}:function(ne,ce){return ce};Bt(m,{name:y,fromWireType:M,toWireType:Y,argPackAdvance:8,readValueFromPointer:Ln(y,x,C!==0),bb:null})},o:function(m,y,x){function C(F){return new M(re.buffer,V[F+4>>>2>>>0],V[F>>>2>>>0])}var M=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][y];x=Ht(x>>>0),Bt(m>>>0,{name:x,fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{nb:!0})},D:function(m,y){y=Ht(y>>>0);var x=y==="std::string";Bt(m>>>0,{name:y,fromWireType:function(C){var M=V[C>>>2>>>0],F=C+4;if(x)for(var Y=F,ne=0;ne<=M;++ne){var ce=F+ne;if(ne==M||ee[ce>>>0]==0){if(Y=Je(Y,ce-Y),se===void 0)var se=Y;else se+=String.fromCharCode(0),se+=Y;Y=ce+1}}else{for(se=Array(M),ne=0;ne<M;++ne)se[ne]=String.fromCharCode(ee[F+ne>>>0]);se=se.join("")}return Mt(C),se},toWireType:function(C,M){M instanceof ArrayBuffer&&(M=new Uint8Array(M));var F=typeof M=="string";if(!(F||M instanceof Uint8Array||M instanceof Uint8ClampedArray||M instanceof Int8Array))throw new wr("Cannot pass non-string to std::string");var Y=x&&F?Nn(M):M.length,ne=Hr(4+Y+1),ce=ne+4;if(V[ne>>>2>>>0]=Y,x&&F)Jt(M,ee,ce,Y+1);else if(F)for(F=0;F<Y;++F){var se=M.charCodeAt(F);if(255<se)throw Mt(ce),new wr("String has UTF-16 code units that do not fit in 8 bits");ee[ce+F>>>0]=se}else for(F=0;F<Y;++F)ee[ce+F>>>0]=M[F];return C!==null&&C.push(Mt,ne),ne},argPackAdvance:8,readValueFromPointer:hn,bb(C){Mt(C)}})},x:function(m,y,x){if(y>>>=0,x>>>=0,x=Ht(x),y===2)var C=ve,M=Wn,F=ns,Y=ne=>N[ne>>>1>>>0];else y===4&&(C=_l,M=as,F=is,Y=ne=>V[ne>>>2>>>0]);Bt(m>>>0,{name:x,fromWireType:ne=>{for(var ce=V[ne>>>2>>>0],se,ge=ne+4,Be=0;Be<=ce;++Be){var Fe=ne+4+Be*y;(Be==ce||Y(Fe)==0)&&(ge=C(ge,Fe-ge),se===void 0?se=ge:(se+=String.fromCharCode(0),se+=ge),ge=Fe+y)}return Mt(ne),se},toWireType:(ne,ce)=>{if(typeof ce!="string")throw new wr(`Cannot pass non-string to C++ string type ${x}`);var se=F(ce),ge=Hr(4+se+y);return V[ge>>>2>>>0]=se/y,M(ce,ge+4,se+y),ne!==null&&ne.push(Mt,ge),ge},argPackAdvance:8,readValueFromPointer:hn,bb(ne){Mt(ne)}})},L:function(m,y){y=Ht(y>>>0),Bt(m>>>0,{ob:!0,name:y,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(m,y,x){return y>>>=0,x>>>=0,m=ze(m>>>0),y=Vn(y,"emval::as"),Wa(y,x,m)},w:function(m){return m>>>=0,ja(()=>(m=ze(m),m.then(Dt)))},n:function(m,y,x,C){return x>>>=0,C>>>=0,m=mn[m>>>0],y=ze(y>>>0),m(null,y,x,C)},j:function(m,y,x,C,M){return x>>>=0,C>>>=0,M>>>=0,m=mn[m>>>0],y=ze(y>>>0),x=Hn(x),m(y,y[x],C,M)},b:Ua,A:function(m,y){return y>>>=0,m=ze(m>>>0),y=ze(y),m==y},m:function(m){return m>>>=0,m===0?Dt(jt()):(m=Hn(m),Dt(jt()[m]))},i:function(m,y,x){y=Ka(m,y>>>0);var C=y.shift();m--;var M=`return function (obj, func, destructorsRef, args) {
`,F=0,Y=[];x===0&&Y.push("obj");for(var ne=["retType"],ce=[C],se=0;se<m;++se)Y.push("arg"+se),ne.push("argType"+se),ce.push(y[se]),M+=`  var arg${se} = argType${se}.readValueFromPointer(args${F?"+"+F:""});
`,F+=y[se].argPackAdvance;return M+=`  var rv = ${x===1?"new func":"func.call"}(${Y.join(", ")});
`,C.ob||(ne.push("emval_returnValue"),ce.push(Wa),M+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ne.push(M+`};
`),m=yl(ne)(...ce),x=`methodCaller<(${y.map(ge=>ge.name).join(", ")}) => ${C.name}>`,qa(hr(x,m))},r:function(m,y){return y>>>=0,m=ze(m>>>0),y=ze(y),Dt(m[y])},e:function(m){m>>>=0,9<m&&(ft[m+1]+=1)},t:function(){return Dt([])},l:function(m){m=ze(m>>>0);for(var y=Array(m.length),x=0;x<m.length;x++)y[x]=m[x];return Dt(y)},f:function(m){return Dt(Hn(m>>>0))},k:function(){return Dt({})},h:function(m){m>>>=0;for(var y=ze(m);y.length;){var x=y.pop();y.pop()(x)}Ua(m)},g:function(m,y,x){y>>>=0,x>>>=0,m=ze(m>>>0),y=ze(y),x=ze(x),m[y]=x},c:function(m,y){return y>>>=0,m=Vn(m>>>0,"_emval_take_value"),m=m.readValueFromPointer(y),Dt(m)},W:function(m,y){m=-9007199254740992>m||9007199254740992<m?NaN:Number(m),y>>>=0,m=new Date(1e3*m),O[y>>>2>>>0]=m.getUTCSeconds(),O[y+4>>>2>>>0]=m.getUTCMinutes(),O[y+8>>>2>>>0]=m.getUTCHours(),O[y+12>>>2>>>0]=m.getUTCDate(),O[y+16>>>2>>>0]=m.getUTCMonth(),O[y+20>>>2>>>0]=m.getUTCFullYear()-1900,O[y+24>>>2>>>0]=m.getUTCDay(),O[y+28>>>2>>>0]=(m.getTime()-Date.UTC(m.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(m,y){m=-9007199254740992>m||9007199254740992<m?NaN:Number(m),y>>>=0,m=new Date(1e3*m),O[y>>>2>>>0]=m.getSeconds(),O[y+4>>>2>>>0]=m.getMinutes(),O[y+8>>>2>>>0]=m.getHours(),O[y+12>>>2>>>0]=m.getDate(),O[y+16>>>2>>>0]=m.getMonth(),O[y+20>>>2>>>0]=m.getFullYear()-1900,O[y+24>>>2>>>0]=m.getDay(),O[y+28>>>2>>>0]=(St(m.getFullYear())?Ya:jn)[m.getMonth()]+m.getDate()-1|0,O[y+36>>>2>>>0]=-(60*m.getTimezoneOffset());var x=new Date(m.getFullYear(),6,1).getTimezoneOffset(),C=new Date(m.getFullYear(),0,1).getTimezoneOffset();O[y+32>>>2>>>0]=(x!=C&&m.getTimezoneOffset()==Math.min(C,x))|0},Y:function(m){m>>>=0;var y=new Date(O[m+20>>>2>>>0]+1900,O[m+16>>>2>>>0],O[m+12>>>2>>>0],O[m+8>>>2>>>0],O[m+4>>>2>>>0],O[m>>>2>>>0],0),x=O[m+32>>>2>>>0],C=y.getTimezoneOffset(),M=new Date(y.getFullYear(),6,1).getTimezoneOffset(),F=new Date(y.getFullYear(),0,1).getTimezoneOffset(),Y=Math.min(F,M);return 0>x?O[m+32>>>2>>>0]=+(M!=F&&Y==C):0<x!=(Y==C)&&(M=Math.max(F,M),y.setTime(y.getTime()+6e4*((0<x?Y:M)-C))),O[m+24>>>2>>>0]=y.getDay(),O[m+28>>>2>>>0]=(St(y.getFullYear())?Ya:jn)[y.getMonth()]+y.getDate()-1|0,O[m>>>2>>>0]=y.getSeconds(),O[m+4>>>2>>>0]=y.getMinutes(),O[m+8>>>2>>>0]=y.getHours(),O[m+12>>>2>>>0]=y.getDate(),O[m+16>>>2>>>0]=y.getMonth(),O[m+20>>>2>>>0]=y.getYear(),m=y.getTime(),BigInt(isNaN(m)?-1:m/1e3)},U:function(){return-52},V:function(){},N:function(m,y,x,C){x>>>=0,C>>>=0;var M=new Date().getFullYear(),F=new Date(M,0,1),Y=new Date(M,6,1);M=F.getTimezoneOffset();var ne=Y.getTimezoneOffset();V[m>>>0>>>2>>>0]=60*Math.max(M,ne),O[y>>>0>>>2>>>0]=+(M!=ne),m=ce=>ce.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],F=m(F),Y=m(Y),ne<M?(Jt(F,ee,x,17),Jt(Y,ee,C,17)):(Jt(F,ee,C,17),Jt(Y,ee,x,17))},v:()=>{je("")},d:function(m,y,x){return m>>>=0,y=qn(y>>>0,x>>>0),Ir[m](...y)},I:function(m,y,x){return m>>>=0,y=qn(y>>>0,x>>>0),Ir[m](...y)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(m){m>>>=0;var y=ee.length;if(4294901760<m)return!1;for(var x=1;4>=x;x*=2){var C=y*(1+.2/x);C=Math.min(C,m+100663296);var M=Math;C=Math.max(m,C);e:{M=(M.min.call(M,4294901760,C+(65536-C%65536)%65536)-j.buffer.byteLength+65535)/65536;try{j.grow(M),ie();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},$:function(m,y){m>>>=0,y>>>=0;var x=0;return Ft().forEach((C,M)=>{var F=y+x;for(M=V[m+4*M>>>2>>>0]=F,F=0;F<C.length;++F)re[M++>>>0]=C.charCodeAt(F);re[M>>>0]=0,x+=C.length+1}),0},aa:function(m,y){m>>>=0,y>>>=0;var x=Ft();V[m>>>2>>>0]=x.length;var C=0;return x.forEach(M=>C+=M.length+1),V[y>>>2>>>0]=C,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(m,y,x,C){y>>>=0,x>>>=0,C>>>=0;for(var M=0,F=0;F<x;F++){var Y=V[y>>>2>>>0],ne=V[y+4>>>2>>>0];y+=8;for(var ce=0;ce<ne;ce++){var se=ee[Y+ce>>>0],ge=wl[m];se===0||se===10?((m===1?R:G)(Na(ge,0)),ge.length=0):ge.push(se)}M+=ne}return V[C>>>2>>>0]=M,0},fa:fs,p:function(m,y,x,C){return fs(m>>>0,y>>>0,x>>>0,C>>>0)}},be=function(){function m(x){return be=x.exports,be=ss(),be=_s(),j=be.ja,ie(),Se.unshift(be.ka),Xe--,Xe==0&&ot&&(x=ot,ot=null,x()),be}var y={a:vl};if(Xe++,i.instantiateWasm)try{return i.instantiateWasm(y,m)}catch(x){G(`Module.instantiateWasm callback failed with error: ${x}`),l(x)}return Ar(y,function(x){m(x.instance)}).catch(l),{}}(),Qa=m=>(Qa=be.la)(m);i._OrtInit=(m,y)=>(i._OrtInit=be.ma)(m,y),i._OrtGetLastError=(m,y)=>(i._OrtGetLastError=be.na)(m,y),i._OrtCreateSessionOptions=(m,y,x,C,M,F,Y,ne,ce,se)=>(i._OrtCreateSessionOptions=be.oa)(m,y,x,C,M,F,Y,ne,ce,se),i._OrtAppendExecutionProvider=(m,y)=>(i._OrtAppendExecutionProvider=be.pa)(m,y),i._OrtAddFreeDimensionOverride=(m,y,x)=>(i._OrtAddFreeDimensionOverride=be.qa)(m,y,x),i._OrtAddSessionConfigEntry=(m,y,x)=>(i._OrtAddSessionConfigEntry=be.ra)(m,y,x),i._OrtReleaseSessionOptions=m=>(i._OrtReleaseSessionOptions=be.sa)(m),i._OrtCreateSession=(m,y,x)=>(i._OrtCreateSession=be.ta)(m,y,x),i._OrtReleaseSession=m=>(i._OrtReleaseSession=be.ua)(m),i._OrtGetInputOutputCount=(m,y,x)=>(i._OrtGetInputOutputCount=be.va)(m,y,x),i._OrtGetInputName=(m,y)=>(i._OrtGetInputName=be.wa)(m,y),i._OrtGetOutputName=(m,y)=>(i._OrtGetOutputName=be.xa)(m,y),i._OrtFree=m=>(i._OrtFree=be.ya)(m),i._OrtCreateTensor=(m,y,x,C,M,F)=>(i._OrtCreateTensor=be.za)(m,y,x,C,M,F),i._OrtGetTensorData=(m,y,x,C,M)=>(i._OrtGetTensorData=be.Aa)(m,y,x,C,M),i._OrtReleaseTensor=m=>(i._OrtReleaseTensor=be.Ba)(m),i._OrtCreateRunOptions=(m,y,x,C)=>(i._OrtCreateRunOptions=be.Ca)(m,y,x,C),i._OrtAddRunConfigEntry=(m,y,x)=>(i._OrtAddRunConfigEntry=be.Da)(m,y,x),i._OrtReleaseRunOptions=m=>(i._OrtReleaseRunOptions=be.Ea)(m),i._OrtCreateBinding=m=>(i._OrtCreateBinding=be.Fa)(m),i._OrtBindInput=(m,y,x)=>(i._OrtBindInput=be.Ga)(m,y,x),i._OrtBindOutput=(m,y,x,C)=>(i._OrtBindOutput=be.Ha)(m,y,x,C),i._OrtClearBoundOutputs=m=>(i._OrtClearBoundOutputs=be.Ia)(m),i._OrtReleaseBinding=m=>(i._OrtReleaseBinding=be.Ja)(m),i._OrtRunWithBinding=(m,y,x,C,M)=>(i._OrtRunWithBinding=be.Ka)(m,y,x,C,M),i._OrtRun=(m,y,x,C,M,F,Y,ne)=>(i._OrtRun=be.La)(m,y,x,C,M,F,Y,ne),i._OrtEndProfiling=m=>(i._OrtEndProfiling=be.Ma)(m),i._JsepOutput=(m,y,x)=>(i._JsepOutput=be.Na)(m,y,x),i._JsepGetNodeName=m=>(i._JsepGetNodeName=be.Oa)(m);var Hr=i._malloc=m=>(Hr=i._malloc=be.Pa)(m),Mt=i._free=m=>(Mt=i._free=be.Qa)(m),Yn=m=>(Yn=be.Sa)(m),Xn=m=>(Xn=be.Ta)(m),Za=()=>(Za=be.Ua)(),_n=m=>(_n=be.Wa)(m),gs=()=>(gs=be.Xa)(),fr=m=>(fr=be.Ya)(m),Kt=()=>(Kt=be.Za)();i.___start_em_js=837952,i.___stop_em_js=838113;function _s(){var m=be;m=Object.assign({},m);var y=x=>C=>x(C)>>>0;return m.la=y(m.la),m.Pa=y(m.Pa),m.Ta=y(m.Ta),m.Ua=(x=>()=>x()>>>0)(m.Ua),m}i.stackSave=()=>Za(),i.stackRestore=m=>Yn(m),i.stackAlloc=m=>Xn(m),i.UTF8ToString=Je,i.stringToUTF8=(m,y,x)=>Jt(m,ee,y,x),i.lengthBytesUTF8=Nn;var Or;ot=function m(){Or||Ja(),Or||(ot=m)};function Ja(){if(!(0<Xe)){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;){var m=i.preRun.shift();he.unshift(m)}for(;0<he.length;)he.shift()(i);if(!(0<Xe||Or||(Or=!0,i.calledRun=!0,q))){for(;0<Se.length;)Se.shift()(i);for(o(i);0<Te.length;)Te.shift()(i)}}}return Ja(),u}})();typeof t=="object"&&typeof e=="object"?e.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),Cy=vn(()=>{}),Ty=vn(()=>{}),du={};$n(du,{cpus:()=>cu});var cu,Ay=te(()=>{cu=void 0}),Iy=vn((t,e)=>{var r=(()=>{var a;var n=typeof document<"u"?(a=document.currentScript)==null?void 0:a.src:void 0;return typeof __filename<"u"&&(n||(n=__filename)),function(s={}){function i(){return D.buffer!=Te.buffer&&dt(),Te}function o(){return D.buffer!=Te.buffer&&dt(),Xe}function l(){return D.buffer!=Te.buffer&&dt(),ot}function u(){return D.buffer!=Te.buffer&&dt(),je}function d(){return D.buffer!=Te.buffer&&dt(),ht}function h(){return D.buffer!=Te.buffer&&dt(),ut}function f(){return D.buffer!=Te.buffer&&dt(),bt}function g(){return D.buffer!=Te.buffer&&dt(),Rt}var p=s,w,v,S=new Promise((c,_)=>{w=c,v=_});p.mountExternalData=(c,_)=>{(p.Db||(p.Db=new Map)).set(c,_)},p.unmountExternalData=()=>{delete p.Db};let $=()=>{let c=(b,k,I)=>(...P)=>{let H=Kt,J=k==null?void 0:k();P=b(...P);let fe=k==null?void 0:k();return J!==fe&&(b=fe,I(J),k=I=null),Kt!=H?M():P},_=b=>async(...k)=>{var I;try{if(p.Cb)throw Error("Session already started");let P=p.Cb={ec:k[0],errors:[]},H=await b(...k);if(p.Cb!==P)throw Error("Session mismatch");(I=p.Kb)==null||I.flush();let J=P.errors;if(0<J.length){let fe=await Promise.all(J);if(fe=fe.filter(oe=>oe),0<fe.length)throw Error(fe.join(`
`))}return H}finally{p.Cb=null}};p._OrtCreateSession=c(p._OrtCreateSession,()=>p._OrtCreateSession,b=>p._OrtCreateSession=b),p._OrtRun=_(c(p._OrtRun,()=>p._OrtRun,b=>p._OrtRun=b)),p._OrtRunWithBinding=_(c(p._OrtRunWithBinding,()=>p._OrtRunWithBinding,b=>p._OrtRunWithBinding=b)),p._OrtBindInput=c(p._OrtBindInput,()=>p._OrtBindInput,b=>p._OrtBindInput=b),$=void 0};p.jsepInit=(c,_)=>{if($==null||$(),c==="webgpu"){[p.Kb,p.Wb,p.$b,p.Lb,p.Zb,p.ob,p.ac,p.cc,p.Xb,p.Yb,p.bc]=_;let b=p.Kb;p.jsepRegisterBuffer=(k,I,P,H)=>b.registerBuffer(k,I,P,H),p.jsepGetBuffer=k=>b.getBuffer(k),p.jsepCreateDownloader=(k,I,P)=>b.createDownloader(k,I,P),p.jsepOnReleaseSession=k=>{b.onReleaseSession(k)},p.jsepOnRunStart=k=>b.onRunStart(k)}};var E=Object.assign({},p),T="./this.program",A=(c,_)=>{throw _},z=typeof window=="object",R=typeof importScripts=="function",G=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",j=p.ENVIRONMENT_IS_PTHREAD||!1,q="";function ue(c){return p.locateFile?p.locateFile(c,q):q+c}var re,ee,le;if(G){var N=(ou(),qr(Bs)),O=(uu(),qr(Ds));q=R?O.dirname(q)+"/":__dirname+"/",re=(c,_)=>(c=Jt(c)?new URL(c):O.normalize(c),N.readFileSync(c,_?void 0:"utf8")),le=c=>(c=re(c,!0),c.buffer||(c=new Uint8Array(c)),c),ee=(c,_,b,k=!0)=>{c=Jt(c)?new URL(c):O.normalize(c),N.readFile(c,k?void 0:"utf8",(I,P)=>{I?b(I):_(k?P.buffer:P)})},!p.thisProgram&&1<process.argv.length&&(T=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),A=(c,_)=>{throw process.exitCode=c,_},global.Worker=Cy().Worker}else(z||R)&&(R?q=self.location.href:typeof document<"u"&&document.currentScript&&(q=document.currentScript.src),typeof n<"u"&&n&&(q=n),q.startsWith("blob:")?q="":q=q.substr(0,q.replace(/[?#].*/,"").lastIndexOf("/")+1),G||(re=c=>{var _=new XMLHttpRequest;return _.open("GET",c,!1),_.send(null),_.responseText},R&&(le=c=>{var _=new XMLHttpRequest;return _.open("GET",c,!1),_.responseType="arraybuffer",_.send(null),new Uint8Array(_.response)}),ee=(c,_,b)=>{var k=new XMLHttpRequest;k.open("GET",c,!0),k.responseType="arraybuffer",k.onload=()=>{k.status==200||k.status==0&&k.response?_(k.response):b()},k.onerror=b,k.send(null)}));G&&typeof performance>"u"&&(global.performance=Ty().performance);var V=console.log.bind(console),K=console.error.bind(console);G&&(V=(...c)=>N.writeSync(1,c.join(" ")+`
`),K=(...c)=>N.writeSync(2,c.join(" ")+`
`));var de=V,ae=K;Object.assign(p,E),E=null;var D,ie,he=!1,Se,Te,Xe,ot,je,ht,ut,bt,We,Ze,Rt;function dt(){var c=D.buffer;p.HEAP8=Te=new Int8Array(c),p.HEAP16=ot=new Int16Array(c),p.HEAPU8=Xe=new Uint8Array(c),p.HEAPU16=je=new Uint16Array(c),p.HEAP32=ht=new Int32Array(c),p.HEAPU32=ut=new Uint32Array(c),p.HEAPF32=bt=new Float32Array(c),p.HEAPF64=Rt=new Float64Array(c),p.HEAP64=We=new BigInt64Array(c),p.HEAPU64=Ze=new BigUint64Array(c)}var Ar=16777216;if(j)D=p.wasmMemory;else if(p.wasmMemory)D=p.wasmMemory;else if(D=new WebAssembly.Memory({initial:Ar/65536,maximum:65536,shared:!0}),!(D.buffer instanceof SharedArrayBuffer))throw ae("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),G&&ae("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");dt(),Ar=D.buffer.byteLength;var Ir=[],pn=[],ml=[],Mr=0,Vr=null;function Na(){if(Mr--,Mr==0&&Vr){var c=Vr;Vr=null,c()}}function Je(c){throw c="Aborted("+c+")",ae(c),he=!0,Se=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),v(c),c}var Nn=c=>c.startsWith("data:application/octet-stream;base64,"),Jt=c=>c.startsWith("file://"),Gr;Gr="ort-wasm-simd-threaded.wasm",Nn(Gr)||(Gr=ue(Gr));function Ht(c){if(le)return le(c);throw"both async and sync fetching of the wasm failed"}function Fa(c){if(z||R){if(typeof fetch=="function"&&!Jt(c))return fetch(c,{credentials:"same-origin"}).then(_=>{if(!_.ok)throw`failed to load wasm binary file at '${c}'`;return _.arrayBuffer()}).catch(()=>Ht(c));if(ee)return new Promise((_,b)=>{ee(c,k=>_(new Uint8Array(k)),b)})}return Promise.resolve().then(()=>Ht(c))}function Fn(c,_,b){return Fa(c).then(k=>WebAssembly.instantiate(k,_)).then(b,k=>{ae(`failed to asynchronously prepare wasm: ${k}`),Je(k)})}function wr(c,_){var b=Gr;return typeof WebAssembly.instantiateStreaming!="function"||Nn(b)||Jt(b)||G||typeof fetch!="function"?Fn(b,c,_):fetch(b,{credentials:"same-origin"}).then(k=>WebAssembly.instantiateStreaming(k,c).then(_,function(I){return ae(`wasm streaming compile failed: ${I}`),ae("falling back to ArrayBuffer instantiation"),Fn(b,c,_)}))}var La={826468:(c,_,b,k)=>{if(typeof p>"u"||!p.Db)return 1;if(c=lt(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=p.Db.get(c),!c)return 2;if(_>>>=0,b>>>=0,k>>>=0,_+b>c.byteLength)return 3;try{return o().set(c.subarray(_,_+b),k>>>0),0}catch{return 4}},826969:()=>{p.Xb()},827e3:()=>{p.Yb()},827029:()=>{p.bc()},827054:c=>p.Wb(c),827087:c=>p.$b(c),827119:(c,_,b)=>{p.Lb(c,_,b,!0)},827158:(c,_,b)=>{p.Lb(c,_,b)},827191:c=>{p.ob("Abs",c,void 0)},827242:c=>{p.ob("Neg",c,void 0)},827293:c=>{p.ob("Floor",c,void 0)},827346:c=>{p.ob("Ceil",c,void 0)},827398:c=>{p.ob("Reciprocal",c,void 0)},827456:c=>{p.ob("Sqrt",c,void 0)},827508:c=>{p.ob("Exp",c,void 0)},827559:c=>{p.ob("Erf",c,void 0)},827610:c=>{p.ob("Sigmoid",c,void 0)},827665:(c,_,b)=>{p.ob("HardSigmoid",c,{alpha:_,beta:b})},827744:c=>{p.ob("Log",c,void 0)},827795:c=>{p.ob("Sin",c,void 0)},827846:c=>{p.ob("Cos",c,void 0)},827897:c=>{p.ob("Tan",c,void 0)},827948:c=>{p.ob("Asin",c,void 0)},828e3:c=>{p.ob("Acos",c,void 0)},828052:c=>{p.ob("Atan",c,void 0)},828104:c=>{p.ob("Sinh",c,void 0)},828156:c=>{p.ob("Cosh",c,void 0)},828208:c=>{p.ob("Asinh",c,void 0)},828261:c=>{p.ob("Acosh",c,void 0)},828314:c=>{p.ob("Atanh",c,void 0)},828367:c=>{p.ob("Tanh",c,void 0)},828419:c=>{p.ob("Not",c,void 0)},828470:(c,_,b)=>{p.ob("Clip",c,{min:_,max:b})},828539:c=>{p.ob("Clip",c,void 0)},828591:(c,_)=>{p.ob("Elu",c,{alpha:_})},828649:c=>{p.ob("Relu",c,void 0)},828701:(c,_)=>{p.ob("LeakyRelu",c,{alpha:_})},828765:(c,_)=>{p.ob("ThresholdedRelu",c,{alpha:_})},828835:(c,_)=>{p.ob("Cast",c,{to:_})},828893:c=>{p.ob("Add",c,void 0)},828944:c=>{p.ob("Sub",c,void 0)},828995:c=>{p.ob("Mul",c,void 0)},829046:c=>{p.ob("Div",c,void 0)},829097:c=>{p.ob("Pow",c,void 0)},829148:c=>{p.ob("Equal",c,void 0)},829201:c=>{p.ob("Greater",c,void 0)},829256:c=>{p.ob("GreaterOrEqual",c,void 0)},829318:c=>{p.ob("Less",c,void 0)},829370:c=>{p.ob("LessOrEqual",c,void 0)},829429:(c,_,b,k,I)=>{p.ob("ReduceMean",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},829588:(c,_,b,k,I)=>{p.ob("ReduceMax",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},829746:(c,_,b,k,I)=>{p.ob("ReduceMin",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},829904:(c,_,b,k,I)=>{p.ob("ReduceProd",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},830063:(c,_,b,k,I)=>{p.ob("ReduceSum",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},830221:(c,_,b,k,I)=>{p.ob("ReduceL1",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},830378:(c,_,b,k,I)=>{p.ob("ReduceL2",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},830535:(c,_,b,k,I)=>{p.ob("ReduceLogSum",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},830696:(c,_,b,k,I)=>{p.ob("ReduceSumSquare",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},830860:(c,_,b,k,I)=>{p.ob("ReduceLogSumExp",c,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},831024:c=>{p.ob("Where",c,void 0)},831077:(c,_,b)=>{p.ob("Transpose",c,{perm:_?Array.from(d().subarray(_>>>0,b>>>0)):[]})},831185:(c,_,b,k)=>{p.ob("DepthToSpace",c,{blocksize:_,mode:lt(b),format:k?"NHWC":"NCHW"})},831318:(c,_,b,k)=>{p.ob("DepthToSpace",c,{blocksize:_,mode:lt(b),format:k?"NHWC":"NCHW"})},831451:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae)=>{p.ob("ConvTranspose",c,{format:fe?"NHWC":"NCHW",autoPad:_,dilations:[b],group:k,kernelShape:[I],pads:[P,H],strides:[J],wIsConst:()=>!!i()[oe>>>0],outputPadding:ye?Array.from(d().subarray(ye>>>0,Le>>>0)):[],outputShape:He?Array.from(d().subarray(He>>>0,W>>>0)):[],activation:lt(Ae)})},831852:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W)=>{p.ob("ConvTranspose",c,{format:J?"NHWC":"NCHW",autoPad:_,dilations:Array.from(d().subarray(b>>>0,(b>>>0)+2>>>0)),group:k,kernelShape:Array.from(d().subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(d().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(d().subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!i()[fe>>>0],outputPadding:oe?Array.from(d().subarray(oe>>>0,ye>>>0)):[],outputShape:Le?Array.from(d().subarray(Le>>>0,He>>>0)):[],activation:lt(W)})},832417:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae)=>{p.ob("ConvTranspose",c,{format:fe?"NHWC":"NCHW",autoPad:_,dilations:[b],group:k,kernelShape:[I],pads:[P,H],strides:[J],wIsConst:()=>!!i()[oe>>>0],outputPadding:ye?Array.from(d().subarray(ye>>>0,Le>>>0)):[],outputShape:He?Array.from(d().subarray(He>>>0,W>>>0)):[],activation:lt(Ae)})},832818:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W)=>{p.ob("ConvTranspose",c,{format:J?"NHWC":"NCHW",autoPad:_,dilations:Array.from(d().subarray(b>>>0,(b>>>0)+2>>>0)),group:k,kernelShape:Array.from(d().subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(d().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(d().subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!i()[fe>>>0],outputPadding:oe?Array.from(d().subarray(oe>>>0,ye>>>0)):[],outputShape:Le?Array.from(d().subarray(Le>>>0,He>>>0)):[],activation:lt(W)})},833383:(c,_)=>{p.ob("GlobalAveragePool",c,{format:_?"NHWC":"NCHW"})},833474:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae,Ne)=>{p.ob("AveragePool",c,{format:Ne?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:I,dilations:[P,H],kernel_shape:[J,fe],pads:[oe,ye,Le,He],strides:[W,Ae]})},833758:(c,_)=>{p.ob("GlobalAveragePool",c,{format:_?"NHWC":"NCHW"})},833849:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae,Ne)=>{p.ob("AveragePool",c,{format:Ne?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:I,dilations:[P,H],kernel_shape:[J,fe],pads:[oe,ye,Le,He],strides:[W,Ae]})},834133:(c,_)=>{p.ob("GlobalMaxPool",c,{format:_?"NHWC":"NCHW"})},834220:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae,Ne)=>{p.ob("MaxPool",c,{format:Ne?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:I,dilations:[P,H],kernel_shape:[J,fe],pads:[oe,ye,Le,He],strides:[W,Ae]})},834500:(c,_)=>{p.ob("GlobalMaxPool",c,{format:_?"NHWC":"NCHW"})},834587:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae,Ne)=>{p.ob("MaxPool",c,{format:Ne?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:I,dilations:[P,H],kernel_shape:[J,fe],pads:[oe,ye,Le,He],strides:[W,Ae]})},834867:(c,_,b,k,I)=>{p.ob("Gemm",c,{alpha:_,beta:b,transA:k,transB:I})},834971:c=>{p.ob("MatMul",c,void 0)},835025:(c,_,b,k)=>{p.ob("ArgMax",c,{keepDims:!!_,selectLastIndex:!!b,axis:k})},835133:(c,_,b,k)=>{p.ob("ArgMin",c,{keepDims:!!_,selectLastIndex:!!b,axis:k})},835241:(c,_)=>{p.ob("Softmax",c,{axis:_})},835304:(c,_)=>{p.ob("Concat",c,{axis:_})},835364:(c,_,b,k,I)=>{p.ob("Split",c,{axis:_,numOutputs:b,splitSizes:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},835504:c=>{p.ob("Expand",c,void 0)},835558:(c,_)=>{p.ob("Gather",c,{axis:Number(_)})},835629:(c,_)=>{p.ob("GatherElements",c,{axis:Number(_)})},835708:(c,_,b,k,I,P,H,J,fe,oe,ye)=>{p.ob("Resize",c,{antialias:_,axes:b?Array.from(d().subarray(b>>>0,k>>>0)):[],coordinateTransformMode:lt(I),cubicCoeffA:P,excludeOutside:H,extrapolationValue:J,keepAspectRatioPolicy:lt(fe),mode:lt(oe),nearestMode:lt(ye)})},836054:(c,_,b,k,I,P,H)=>{p.ob("Slice",c,{starts:_?Array.from(d().subarray(_>>>0,b>>>0)):[],ends:k?Array.from(d().subarray(k>>>0,I>>>0)):[],axes:P?Array.from(d().subarray(P>>>0,H>>>0)):[]})},836270:c=>{p.ob("Tile",c,void 0)},836322:(c,_,b,k)=>{p.ob("LayerNormalization",c,{axis:_,epsilon:b,simplified:!!k})},836433:(c,_,b)=>{p.ob("InstanceNormalization",c,{epsilon:_,format:b?"NHWC":"NCHW"})},836547:(c,_,b)=>{p.ob("InstanceNormalization",c,{epsilon:_,format:b?"NHWC":"NCHW"})},836661:c=>{p.ob("Range",c,void 0)},836714:(c,_)=>{p.ob("Einsum",c,{equation:lt(_)})},836795:(c,_,b,k,I)=>{p.ob("Pad",c,{mode:_,value:b,pads:k?Array.from(d().subarray(k>>>0,I>>>0)):[]})},836922:(c,_,b,k,I,P)=>{p.ob("BatchNormalization",c,{epsilon:_,momentum:b,spatial:!!I,trainingMode:!!k,format:P?"NHWC":"NCHW"})},837091:(c,_,b,k,I,P)=>{p.ob("BatchNormalization",c,{epsilon:_,momentum:b,spatial:!!I,trainingMode:!!k,format:P?"NHWC":"NCHW"})},837260:(c,_,b)=>{p.ob("CumSum",c,{exclusive:Number(_),reverse:Number(b)})},837357:(c,_,b,k,I,P,H,J,fe)=>{p.ob("Attention",c,{numHeads:_,isUnidirectional:b,maskFilterValue:k,scale:I,doRotary:P,qkvHiddenSizes:H?Array.from(d().subarray(Number(J)>>>0,Number(J)+H>>>0)):[],pastPresentShareBuffer:!!fe})},837629:c=>{p.ob("BiasAdd",c,void 0)},837684:c=>{p.ob("BiasSplitGelu",c,void 0)},837745:c=>{p.ob("FastGelu",c,void 0)},837801:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He)=>{p.ob("Conv",c,{format:fe?"NHWC":"NCHW",auto_pad:_,dilations:[b],group:k,kernel_shape:[I],pads:P?Array.from(d().subarray(P>>>0,H>>>0)):[],strides:[J],w_is_const:()=>!!i()[oe>>>0],activation:lt(ye),activation_params:Le?Array.from(f().subarray(Le>>>0,He>>>0)):[]})},838171:(c,_,b,k,I,P,H,J,fe,oe,ye,Le,He,W,Ae,Ne)=>{p.ob("Conv",c,{format:Le?"NHWC":"NCHW",auto_pad:_,dilations:[b,k],group:I,kernel_shape:[P,H],pads:J?Array.from(d().subarray(J>>>0,fe>>>0)):[],strides:[oe,ye],w_is_const:()=>!!i()[He>>>0],activation:lt(W),activation_params:Ae?Array.from(f().subarray(Ae>>>0,Ne>>>0)):[]})},838562:c=>{p.ob("Gelu",c,void 0)},838614:(c,_,b,k,I,P)=>{p.ob("MatMulNBits",c,{k:_,n:b,accuracyLevel:k,bits:I,blockSize:P})},838741:(c,_,b,k,I,P)=>{p.ob("MultiHeadAttention",c,{numHeads:_,isUnidirectional:b,maskFilterValue:k,scale:I,doRotary:P})},838900:(c,_,b,k,I)=>{p.ob("RotaryEmbedding",c,{interleaved:!!_,numHeads:b,rotaryEmbeddingDim:k,scale:I})},839039:(c,_,b)=>{p.ob("SkipLayerNormalization",c,{epsilon:_,simplified:!!b})},839141:(c,_,b)=>{p.ob("SkipLayerNormalization",c,{epsilon:_,simplified:!!b})},839243:(c,_,b,k)=>{p.ob("LayerNormalization",c,{axis:_,epsilon:b,simplified:!!k})},839354:c=>{p.ac(c)},839388:(c,_)=>p.cc(c,_,p.Cb.ec,p.Cb.errors)};function Bt(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}var Ln=c=>{c.terminate(),c.onmessage=()=>{}},Un=c=>{ve.xb.length==0&&(ts(),ve.Mb(ve.xb[0]));var _=ve.xb.pop();if(!_)return 6;ve.yb.push(_),ve.ub[c.wb]=_,_.wb=c.wb;var b={cmd:"run",start_routine:c.fc,arg:c.Rb,pthread_ptr:c.wb};return G&&_.unref(),_.postMessage(b,c.mc),0},ft=0,Ua=c=>{var _=Tl();return c=c(),vs(_),c},ze=(c,_,...b)=>Ua(()=>{for(var k=2*b.length,I=Cl(8*k),P=I>>>3,H=0;H<b.length;H++){var J=b[H];typeof J=="bigint"?(We[P+2*H]=1n,We[P+2*H+1]=J):(We[P+2*H]=0n,g()[P+2*H+1>>>0]=J)}return T0(c,0,k,I,_)});function Dt(c){var _;if(j)return ze(0,1,c);Se=c,0<ft||(ve.hc(),(_=p.onExit)==null||_.call(p,c),he=!0),A(c,new Bt(c))}var hn=c=>{if(Se=c,j)throw ns(c),"unwind";Dt(c)};function gl(){for(var c=p.numThreads;c--;)ts();Ir.unshift(()=>{Mr++,rs(()=>Na())})}function ts(){var c=ue("ort-wasm-simd-threaded.worker.js");c=new Worker(c),ve.xb.push(c)}function rs(c){j?c():Promise.all(ve.xb.map(ve.Mb)).then(c)}var ve={xb:[],yb:[],Qb:[],ub:{},Gb(){j?(ve.receiveObjectTransfer=ve.dc,ve.threadInitTLS=ve.Pb,ve.setExitStatus=ve.Ob):gl()},Ob:c=>Se=c,pc:["$terminateWorker"],hc:()=>{for(var c of ve.yb)Ln(c);for(c of ve.xb)Ln(c);ve.xb=[],ve.yb=[],ve.ub=[]},Nb:c=>{var _=c.wb;delete ve.ub[_],ve.xb.push(c),ve.yb.splice(ve.yb.indexOf(c),1),c.wb=0,kl(_)},dc(){},Pb(){ve.Qb.forEach(c=>c())},Mb:c=>new Promise(_=>{c.onmessage=P=>{P=P.data;var H=P.cmd;if(P.targetThread&&P.targetThread!=ws()){var J=ve.ub[P.targetThread];J?J.postMessage(P,P.transferList):ae(`Internal error! Worker sent a message "${H}" to target pthread ${P.targetThread}, but that thread no longer exists!`)}else H==="checkMailbox"?Mt():H==="spawnThread"?Un(P):H==="cleanupThread"?ve.Nb(ve.ub[P.thread]):H==="killThread"?(P=P.thread,H=ve.ub[P],delete ve.ub[P],Ln(H),kl(P),ve.yb.splice(ve.yb.indexOf(H),1),H.wb=0):H==="cancelThread"?ve.ub[P.thread].postMessage({cmd:"cancel"}):H==="loaded"?(c.loaded=!0,G&&!c.wb&&c.unref(),_(c)):H==="alert"?alert(`Thread ${P.threadId}: ${P.text}`):P.target==="setimmediate"?c.postMessage(P):H==="callHandler"?p[P.handler](...P.args):H&&ae(`worker sent an unknown command ${H}`)},c.onerror=P=>{throw ae(`worker sent an error! ${P.filename}:${P.lineno}: ${P.message}`),P},G&&(c.on("message",P=>c.onmessage({data:P})),c.on("error",P=>c.onerror(P)));var b=[],k=["onExit"],I;for(I of k)p.hasOwnProperty(I)&&b.push(I);c.postMessage({cmd:"load",handlers:b,urlOrBlob:p.mainScriptUrlOrBlob||n,wasmMemory:D,wasmModule:ie})})};p.PThread=ve;var Wn=c=>{for(;0<c.length;)c.shift()(p)};p.establishStackSpace=()=>{var c=ws(),_=h()[c+52>>>2>>>0];c=h()[c+56>>>2>>>0],I0(_,_-c),vs(_)};function ns(c){if(j)return ze(1,0,c);hn(c)}p.invokeEntryPoint=(c,_)=>{ft=0,c=M0(c,_),0<ft?ve.Ob(c):El(c)};class _l{constructor(_){this.Ib=_-24}Gb(_,b){h()[this.Ib+16>>>2>>>0]=0,h()[this.Ib+4>>>2>>>0]=_,h()[this.Ib+8>>>2>>>0]=b}}var as=0;function is(c,_,b,k){return j?ze(2,1,c,_,b,k):Vn(c,_,b,k)}function Vn(c,_,b,k){if(c>>>=0,_>>>=0,b>>>=0,k>>>=0,typeof SharedArrayBuffer>"u")return ae("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var I=[];return j&&I.length===0?is(c,_,b,k):(c={fc:b,wb:c,Rb:k,mc:I},j?(c.oc="spawnThread",postMessage(c,I),0):Un(c))}var Wa=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,fn=(c,_,b)=>{_>>>=0;var k=_+b;for(b=_;c[b]&&!(b>=k);)++b;if(16<b-_&&c.buffer&&Wa)return Wa.decode(c.buffer instanceof SharedArrayBuffer?c.slice(_,b):c.subarray(_,b));for(k="";_<b;){var I=c[_++];if(I&128){var P=c[_++]&63;if((I&224)==192)k+=String.fromCharCode((I&31)<<6|P);else{var H=c[_++]&63;I=(I&240)==224?(I&15)<<12|P<<6|H:(I&7)<<18|P<<12|H<<6|c[_++]&63,65536>I?k+=String.fromCharCode(I):(I-=65536,k+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else k+=String.fromCharCode(I)}return k},lt=(c,_)=>(c>>>=0)?fn(o(),c,_):"";function ss(c,_,b){return j?ze(3,1,c,_,b):0}function cr(c,_){if(j)return ze(4,1,c,_)}var Nt=c=>{for(var _=0,b=0;b<c.length;++b){var k=c.charCodeAt(b);127>=k?_++:2047>=k?_+=2:55296<=k&&57343>=k?(_+=4,++b):_+=3}return _},Va=(c,_,b,k)=>{if(b>>>=0,!(0<k))return 0;var I=b;k=b+k-1;for(var P=0;P<c.length;++P){var H=c.charCodeAt(P);if(55296<=H&&57343>=H){var J=c.charCodeAt(++P);H=65536+((H&1023)<<10)|J&1023}if(127>=H){if(b>=k)break;_[b++>>>0]=H}else{if(2047>=H){if(b+1>=k)break;_[b++>>>0]=192|H>>6}else{if(65535>=H){if(b+2>=k)break;_[b++>>>0]=224|H>>12}else{if(b+3>=k)break;_[b++>>>0]=240|H>>18,_[b++>>>0]=128|H>>12&63}_[b++>>>0]=128|H>>6&63}_[b++>>>0]=128|H&63}}return _[b>>>0]=0,b-I},pr=(c,_,b)=>Va(c,o(),_,b);function Ga(c,_){if(j)return ze(5,1,c,_)}function Ha(c,_,b){if(j)return ze(6,1,c,_,b)}function os(c,_,b){return j?ze(7,1,c,_,b):0}function Gn(c,_){if(j)return ze(8,1,c,_)}function ls(c,_,b){if(j)return ze(9,1,c,_,b)}function us(c,_,b,k){if(j)return ze(10,1,c,_,b,k)}function ds(c,_,b,k){if(j)return ze(11,1,c,_,b,k)}function cs(c,_,b,k){if(j)return ze(12,1,c,_,b,k)}function ja(c){if(j)return ze(13,1,c)}function mn(c,_){if(j)return ze(14,1,c,_)}function ps(c,_,b){if(j)return ze(15,1,c,_,b)}var Hn,jt=c=>{for(var _="";o()[c>>>0];)_+=Hn[o()[c++>>>0]];return _},qa={},Ka={},hr;function yl(c,_,b={}){var k=_.name;if(!c)throw new hr(`type "${k}" must have a positive integer typeid pointer`);if(Ka.hasOwnProperty(c)){if(b.Ub)return;throw new hr(`Cannot register type '${k}' twice`)}Ka[c]=_,qa.hasOwnProperty(c)&&(_=qa[c],delete qa[c],_.forEach(I=>I()))}function St(c,_,b={}){if(!("argPackAdvance"in _))throw new TypeError("registerType registeredInstance requires argPackAdvance");return yl(c,_,b)}var Ya=(c,_,b)=>{switch(_){case 1:return b?k=>i()[k>>>0]:k=>o()[k>>>0];case 2:return b?k=>l()[k>>>1>>>0]:k=>u()[k>>>1>>>0];case 4:return b?k=>d()[k>>>2>>>0]:k=>h()[k>>>2>>>0];case 8:return b?k=>We[k>>>3]:k=>Ze[k>>>3];default:throw new TypeError(`invalid integer width (${_}): ${c}`)}},jn=[],qt=[];function qn(c){c>>>=0,9<c&&--qt[c+1]===0&&(qt[c]=void 0,jn.push(c))}var mt=c=>{if(!c)throw new hr("Cannot use deleted val. handle = "+c);return qt[c]},Ft=c=>{switch(c){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let _=jn.pop()||qt.length;return qt[_]=c,qt[_+1]=1,_}};function gn(c){return this.fromWireType(h()[c>>>2>>>0])}var wl={name:"emscripten::val",fromWireType:c=>{var _=mt(c);return qn(c),_},toWireType:(c,_)=>Ft(_),argPackAdvance:8,readValueFromPointer:gn,Bb:null},hs=(c,_)=>{switch(_){case 4:return function(b){return this.fromWireType(f()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(g()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${_}): ${c}`)}},Xa=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,bl=(c,_)=>{for(var b=c>>1,k=b+_/2;!(b>=k)&&u()[b>>>0];)++b;if(b<<=1,32<b-c&&Xa)return Xa.decode(o().slice(c,b));for(b="",k=0;!(k>=_/2);++k){var I=l()[c+2*k>>>1>>>0];if(I==0)break;b+=String.fromCharCode(I)}return b},fs=(c,_,b)=>{if(b??(b=2147483647),2>b)return 0;b-=2;var k=_;b=b<2*c.length?b/2:c.length;for(var I=0;I<b;++I){var P=c.charCodeAt(I);l()[_>>>1>>>0]=P,_+=2}return l()[_>>>1>>>0]=0,_-k},ms=c=>2*c.length,Kn=(c,_)=>{for(var b=0,k="";!(b>=_/4);){var I=d()[c+4*b>>>2>>>0];if(I==0)break;++b,65536<=I?(I-=65536,k+=String.fromCharCode(55296|I>>10,56320|I&1023)):k+=String.fromCharCode(I)}return k},vl=(c,_,b)=>{if(_>>>=0,b??(b=2147483647),4>b)return 0;var k=_;b=k+b-4;for(var I=0;I<c.length;++I){var P=c.charCodeAt(I);if(55296<=P&&57343>=P){var H=c.charCodeAt(++I);P=65536+((P&1023)<<10)|H&1023}if(d()[_>>>2>>>0]=P,_+=4,_+4>b)break}return d()[_>>>2>>>0]=0,_-k},be=c=>{for(var _=0,b=0;b<c.length;++b){var k=c.charCodeAt(b);55296<=k&&57343>=k&&++b,_+=4}return _},Qa=c=>{if(!he)try{if(c(),!(0<ft))try{j?El(Se):hn(Se)}catch(_){_ instanceof Bt||_=="unwind"||A(1,_)}}catch(_){_ instanceof Bt||_=="unwind"||A(1,_)}};function Hr(c){c>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(d(),c>>>2,c).value.then(Mt),c+=128,Atomics.store(d(),c>>>2,1))}p.__emscripten_thread_mailbox_await=Hr;var Mt=()=>{var c=ws();c&&(Hr(c),Qa(A0))};p.checkMailbox=Mt;var Yn=[],Xn=(c,_)=>{var b=Ka[c];if(b===void 0)throw c=E0(c),b=jt(c),br(c),new hr(`${_} has unknown type ${b}`);return b},Za=(c,_,b)=>{var k=[];return c=c.toWireType(k,b),k.length&&(h()[_>>>2>>>0]=Ft(k)),c},_n=c=>{try{c()}catch(_){Je(_)}};function gs(){var c=me,_={};for(let[b,k]of Object.entries(c))_[b]=typeof k=="function"?(...I)=>{Or.push(b);try{return k(...I)}finally{he||(Or.pop(),Kt&&fr===1&&Or.length===0&&(fr=0,ft+=1,_n(z0),typeof Fibers<"u"&&Fibers.rc()))}}:k;return _}var fr=0,Kt=null,_s=0,Or=[],Ja={},m={},y=0,x=null,C=[];function M(){return new Promise((c,_)=>{x={resolve:c,reject:_}})}function F(){var c=bs(65548),_=c+12;h()[c>>>2>>>0]=_,h()[c+4>>>2>>>0]=_+65536,_=Or[0];var b=Ja[_];return b===void 0&&(b=y++,Ja[_]=b,m[b]=_),_=b,d()[c+8>>>2>>>0]=_,c}function Y(){var c=d()[Kt+8>>>2>>>0];return c=me[m[c]],--ft,c()}function ne(c){if(!he){if(fr===0){var _=!1,b=!1;c((k=0)=>{if(!he&&(_s=k,_=!0,b)){fr=2,_n(()=>P0(Kt)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),k=!1;try{var I=Y()}catch(J){I=J,k=!0}var P=!1;if(!Kt){var H=x;H&&(x=null,(k?H.reject:H.resolve)(I),P=!0)}if(k&&!P)throw I}}),b=!0,_||(fr=1,Kt=F(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),_n(()=>O0(Kt)))}else fr===2?(fr=0,_n(R0),br(Kt),Kt=null,C.forEach(Qa)):Je(`invalid state: ${fr}`);return _s}}function ce(c){return ne(_=>{c().then(_)})}var se=[],ge={},Be=c=>{var _=ge[c];return _===void 0?jt(c):_},Fe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),L=c=>{var _=se.length;return se.push(c),_},Ee=(c,_)=>{for(var b=Array(c),k=0;k<c;++k)b[k]=Xn(h()[_+4*k>>>2>>>0],"parameter "+k);return b},Pe=(c,_)=>Object.defineProperty(_,"name",{value:c});function zr(c){var _=Function;if(!(_ instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof _} which is not a function`);var b=Pe(_.name||"unknownFunctionName",function(){});return b.prototype=_.prototype,b=new b,c=_.apply(b,c),c instanceof Object?c:b}var Pr=c=>c%4===0&&(c%100!==0||c%400===0),d0=[0,31,60,91,121,152,182,213,244,274,305,335],c0=[0,31,59,90,120,151,181,212,243,273,304,334];function p0(c,_,b,k,I,P,H){return j?ze(16,1,c,_,b,k,I,P,H):-52}function h0(c,_,b,k,I,P){if(j)return ze(17,1,c,_,b,k,I,P)}var $l=[],f0=(c,_)=>{$l.length=0;for(var b;b=o()[c++>>>0];){var k=b!=105;k&=b!=112,_+=k&&_%8?4:0,$l.push(b==112?h()[_>>>2>>>0]:b==106?We[_>>>3]:b==105?d()[_>>>2>>>0]:g()[_>>>3>>>0]),_+=k?8:4}return $l},xl={},m0=()=>{if(!Sl){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:T||"./this.program"},_;for(_ in xl)xl[_]===void 0?delete c[_]:c[_]=xl[_];var b=[];for(_ in c)b.push(`${_}=${c[_]}`);Sl=b}return Sl},Sl;function g0(c,_){if(j)return ze(18,1,c,_);c>>>=0,_>>>=0;var b=0;return m0().forEach((k,I)=>{var P=_+b;for(I=h()[c+4*I>>>2>>>0]=P,P=0;P<k.length;++P)i()[I++>>>0]=k.charCodeAt(P);i()[I>>>0]=0,b+=k.length+1}),0}function _0(c,_){if(j)return ze(19,1,c,_);c>>>=0,_>>>=0;var b=m0();h()[c>>>2>>>0]=b.length;var k=0;return b.forEach(I=>k+=I.length+1),h()[_>>>2>>>0]=k,0}function y0(c){return j?ze(20,1,c):52}function w0(c,_,b,k){return j?ze(21,1,c,_,b,k):52}function b0(c,_,b,k){return j?ze(22,1,c,_,b,k):70}var aE=[null,[],[]];function v0(c,_,b,k){if(j)return ze(23,1,c,_,b,k);_>>>=0,b>>>=0,k>>>=0;for(var I=0,P=0;P<b;P++){var H=h()[_>>>2>>>0],J=h()[_+4>>>2>>>0];_+=8;for(var fe=0;fe<J;fe++){var oe=o()[H+fe>>>0],ye=aE[c];oe===0||oe===10?((c===1?de:ae)(fn(ye,0)),ye.length=0):ye.push(oe)}I+=J}return h()[k>>>2>>>0]=I,0}var $0=[31,29,31,30,31,30,31,31,30,31,30,31],x0=[31,28,31,30,31,30,31,31,30,31,30,31];function iE(c){var _=Array(Nt(c)+1);return Va(c,_,0,_.length),_}var sE=(c,_)=>{i().set(c,_>>>0)};function S0(c,_,b,k){function I(W,Ae,Ne){for(W=typeof W=="number"?W.toString():W||"";W.length<Ae;)W=Ne[0]+W;return W}function P(W,Ae){return I(W,Ae,"0")}function H(W,Ae){function Ne(D0){return 0>D0?-1:0<D0?1:0}var yn;return(yn=Ne(W.getFullYear()-Ae.getFullYear()))===0&&(yn=Ne(W.getMonth()-Ae.getMonth()))===0&&(yn=Ne(W.getDate()-Ae.getDate())),yn}function J(W){switch(W.getDay()){case 0:return new Date(W.getFullYear()-1,11,29);case 1:return W;case 2:return new Date(W.getFullYear(),0,3);case 3:return new Date(W.getFullYear(),0,2);case 4:return new Date(W.getFullYear(),0,1);case 5:return new Date(W.getFullYear()-1,11,31);case 6:return new Date(W.getFullYear()-1,11,30)}}function fe(W){var Ae=W.zb;for(W=new Date(new Date(W.Ab+1900,0,1).getTime());0<Ae;){var Ne=W.getMonth(),yn=(Pr(W.getFullYear())?$0:x0)[Ne];if(Ae>yn-W.getDate())Ae-=yn-W.getDate()+1,W.setDate(1),11>Ne?W.setMonth(Ne+1):(W.setMonth(0),W.setFullYear(W.getFullYear()+1));else{W.setDate(W.getDate()+Ae);break}}return Ne=new Date(W.getFullYear()+1,0,4),Ae=J(new Date(W.getFullYear(),0,4)),Ne=J(Ne),0>=H(Ae,W)?0>=H(Ne,W)?W.getFullYear()+1:W.getFullYear():W.getFullYear()-1}c>>>=0,_>>>=0,b>>>=0,k>>>=0;var oe=h()[k+40>>>2>>>0];k={kc:d()[k>>>2>>>0],jc:d()[k+4>>>2>>>0],Eb:d()[k+8>>>2>>>0],Jb:d()[k+12>>>2>>>0],Fb:d()[k+16>>>2>>>0],Ab:d()[k+20>>>2>>>0],vb:d()[k+24>>>2>>>0],zb:d()[k+28>>>2>>>0],qc:d()[k+32>>>2>>>0],ic:d()[k+36>>>2>>>0],lc:oe?lt(oe):""},b=lt(b),oe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ye in oe)b=b.replace(new RegExp(ye,"g"),oe[ye]);var Le="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),He="January February March April May June July August September October November December".split(" ");oe={"%a":W=>Le[W.vb].substring(0,3),"%A":W=>Le[W.vb],"%b":W=>He[W.Fb].substring(0,3),"%B":W=>He[W.Fb],"%C":W=>P((W.Ab+1900)/100|0,2),"%d":W=>P(W.Jb,2),"%e":W=>I(W.Jb,2," "),"%g":W=>fe(W).toString().substring(2),"%G":fe,"%H":W=>P(W.Eb,2),"%I":W=>(W=W.Eb,W==0?W=12:12<W&&(W-=12),P(W,2)),"%j":W=>{for(var Ae=0,Ne=0;Ne<=W.Fb-1;Ae+=(Pr(W.Ab+1900)?$0:x0)[Ne++]);return P(W.Jb+Ae,3)},"%m":W=>P(W.Fb+1,2),"%M":W=>P(W.jc,2),"%n":()=>`
`,"%p":W=>0<=W.Eb&&12>W.Eb?"AM":"PM","%S":W=>P(W.kc,2),"%t":()=>"	","%u":W=>W.vb||7,"%U":W=>P(Math.floor((W.zb+7-W.vb)/7),2),"%V":W=>{var Ae=Math.floor((W.zb+7-(W.vb+6)%7)/7);if(2>=(W.vb+371-W.zb-2)%7&&Ae++,Ae)Ae==53&&(Ne=(W.vb+371-W.zb)%7,Ne==4||Ne==3&&Pr(W.Ab)||(Ae=1));else{Ae=52;var Ne=(W.vb+7-W.zb-1)%7;(Ne==4||Ne==5&&Pr(W.Ab%400-1))&&Ae++}return P(Ae,2)},"%w":W=>W.vb,"%W":W=>P(Math.floor((W.zb+7-(W.vb+6)%7)/7),2),"%y":W=>(W.Ab+1900).toString().substring(2),"%Y":W=>W.Ab+1900,"%z":W=>{W=W.ic;var Ae=0<=W;return W=Math.abs(W)/60,(Ae?"+":"-")+("0000"+(W/60*100+W%60)).slice(-4)},"%Z":W=>W.lc,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0");for(ye in oe)b.includes(ye)&&(b=b.replace(new RegExp(ye,"g"),oe[ye](k)));return b=b.replace(/\0\0/g,"%"),ye=iE(b),ye.length>_?0:(sE(ye,c),ye.length-1)}ve.Gb();for(var k0=Array(256),ys=0;256>ys;++ys)k0[ys]=String.fromCharCode(ys);Hn=k0,hr=p.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},p.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},qt.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>qt.length/2-5-jn.length;var oE=[Dt,ns,is,ss,cr,Ga,Ha,os,Gn,ls,us,ds,cs,ja,mn,ps,p0,h0,g0,_0,y0,w0,b0,v0],lE={ua:function(c,_,b){return ce(async()=>{await p.Zb(c,_,b)})},b:function(c,_,b){throw c>>>=0,new _l(c).Gb(_>>>0,b>>>0),as=c,as},ia:function(c){C0(c>>>0,!R,1,!z,131072,!1),ve.Pb()},G:function(c){c>>>=0,j?postMessage({cmd:"cleanupThread",thread:c}):ve.Nb(ve.ub[c])},_:Vn,A:ss,pa:cr,W:Ga,Y:Ha,qa:os,na:Gn,fa:ls,ma:us,K:ds,X:cs,U:ja,oa:mn,V:ps,E:function(c,_,b){c>>>=0,b>>>=0,_=jt(_>>>0),St(c,{name:_,fromWireType:k=>k,toWireType:function(k,I){if(typeof I!="bigint"&&typeof I!="number")throw I===null?I="null":(k=typeof I,I=k==="object"||k==="array"||k==="function"?I.toString():""+I),new TypeError(`Cannot convert "${I}" to ${this.name}`);return typeof I=="number"&&(I=BigInt(I)),I},argPackAdvance:8,readValueFromPointer:Ya(_,b,_.indexOf("u")==-1),Bb:null})},O:function(c,_,b,k){c>>>=0,_=jt(_>>>0),St(c,{name:_,fromWireType:function(I){return!!I},toWireType:function(I,P){return P?b:k},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(o()[I>>>0])},Bb:null})},N:function(c){return St(c>>>0,wl)},D:function(c,_,b){c>>>=0,b>>>=0,_=jt(_>>>0),St(c,{name:_,fromWireType:k=>k,toWireType:(k,I)=>I,argPackAdvance:8,readValueFromPointer:hs(_,b),Bb:null})},t:function(c,_,b,k,I){if(c>>>=0,b>>>=0,_=jt(_>>>0),I===-1&&(I=4294967295),I=J=>J,k===0){var P=32-8*b;I=J=>J<<P>>>P}var H=_.includes("unsigned")?function(J,fe){return fe>>>0}:function(J,fe){return fe};St(c,{name:_,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:Ya(_,b,k!==0),Bb:null})},p:function(c,_,b){function k(P){var H=h()[P>>>2>>>0];return P=h()[P+4>>>2>>>0],new I(i().buffer,P,H)}c>>>=0;var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][_];b=jt(b>>>0),St(c,{name:b,fromWireType:k,argPackAdvance:8,readValueFromPointer:k},{Ub:!0})},F:function(c,_){c>>>=0,_=jt(_>>>0);var b=_==="std::string";St(c,{name:_,fromWireType:function(k){var I=h()[k>>>2>>>0],P=k+4;if(b)for(var H=P,J=0;J<=I;++J){var fe=P+J;if(J==I||o()[fe>>>0]==0){if(H=lt(H,fe-H),oe===void 0)var oe=H;else oe+=String.fromCharCode(0),oe+=H;H=fe+1}}else{for(oe=Array(I),J=0;J<I;++J)oe[J]=String.fromCharCode(o()[P+J>>>0]);oe=oe.join("")}return br(k),oe},toWireType:function(k,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var P=typeof I=="string";if(!(P||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new hr("Cannot pass non-string to std::string");var H=b&&P?Nt(I):I.length,J=bs(4+H+1),fe=J+4;if(h()[J>>>2>>>0]=H,b&&P)pr(I,fe,H+1);else if(P)for(P=0;P<H;++P){var oe=I.charCodeAt(P);if(255<oe)throw br(fe),new hr("String has UTF-16 code units that do not fit in 8 bits");o()[fe+P>>>0]=oe}else for(P=0;P<H;++P)o()[fe+P>>>0]=I[P];return k!==null&&k.push(br,J),J},argPackAdvance:8,readValueFromPointer:gn,Bb(k){br(k)}})},z:function(c,_,b){if(c>>>=0,_>>>=0,b>>>=0,b=jt(b),_===2)var k=bl,I=fs,P=ms,H=J=>u()[J>>>1>>>0];else _===4&&(k=Kn,I=vl,P=be,H=J=>h()[J>>>2>>>0]);St(c,{name:b,fromWireType:J=>{for(var fe=h()[J>>>2>>>0],oe,ye=J+4,Le=0;Le<=fe;++Le){var He=J+4+Le*_;(Le==fe||H(He)==0)&&(ye=k(ye,He-ye),oe===void 0?oe=ye:(oe+=String.fromCharCode(0),oe+=ye),ye=He+_)}return br(J),oe},toWireType:(J,fe)=>{if(typeof fe!="string")throw new hr(`Cannot pass non-string to C++ string type ${b}`);var oe=P(fe),ye=bs(4+oe+_);return h()[ye>>>2>>>0]=oe/_,I(fe,ye+4,oe+_),J!==null&&J.push(br,ye),ye},argPackAdvance:8,readValueFromPointer:gn,Bb(J){br(J)}})},P:function(c,_){c>>>=0,_=jt(_>>>0),St(c,{Vb:!0,name:_,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(c,_){c>>>=0,c==_>>>0?setTimeout(Mt):j?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=ve.ub[c])&&c.postMessage({cmd:"checkMailbox"})},$:function(c,_,b,k,I){_>>>=0,b>>>=0,k/=2,Yn.length=k,I=I>>>0>>>3;for(var P=0;P<k;P++)Yn[P]=We[I+2*P]?We[I+2*P+1]:g()[I+2*P+1>>>0];return c=_?La[_]:oE[c],ve.Sb=b,b=c(...Yn),ve.Sb=0,b},ha:Hr,sa:function(c){G&&ve.ub[c>>>0].ref()},w:function(c,_,b){return _>>>=0,b>>>=0,c=mt(c>>>0),_=Xn(_,"emval::as"),Za(_,b,c)},y:function(c){return c>>>=0,ce(()=>(c=mt(c),c.then(Ft)))},o:function(c,_,b,k){return b>>>=0,k>>>=0,c=se[c>>>0],_=mt(_>>>0),c(null,_,b,k)},k:function(c,_,b,k,I){return b>>>=0,k>>>=0,I>>>=0,c=se[c>>>0],_=mt(_>>>0),b=Be(b),c(_,_[b],k,I)},c:qn,C:function(c,_){return _>>>=0,c=mt(c>>>0),_=mt(_),c==_},n:function(c){return c>>>=0,c===0?Ft(Fe()):(c=Be(c),Ft(Fe()[c]))},j:function(c,_,b){_=Ee(c,_>>>0);var k=_.shift();c--;var I=`return function (obj, func, destructorsRef, args) {
`,P=0,H=[];b===0&&H.push("obj");for(var J=["retType"],fe=[k],oe=0;oe<c;++oe)H.push("arg"+oe),J.push("argType"+oe),fe.push(_[oe]),I+=`  var arg${oe} = argType${oe}.readValueFromPointer(args${P?"+"+P:""});
`,P+=_[oe].argPackAdvance;return I+=`  var rv = ${b===1?"new func":"func.call"}(${H.join(", ")});
`,k.Vb||(J.push("emval_returnValue"),fe.push(Za),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),J.push(I+`};
`),c=zr(J)(...fe),b=`methodCaller<(${_.map(ye=>ye.name).join(", ")}) => ${k.name}>`,L(Pe(b,c))},s:function(c,_){return _>>>=0,c=mt(c>>>0),_=mt(_),Ft(c[_])},d:function(c){c>>>=0,9<c&&(qt[c+1]+=1)},v:function(){return Ft([])},m:function(c){c=mt(c>>>0);for(var _=Array(c.length),b=0;b<c.length;b++)_[b]=c[b];return Ft(_)},g:function(c){return Ft(Be(c>>>0))},l:function(){return Ft({})},i:function(c){c>>>=0;for(var _=mt(c);_.length;){var b=_.pop();_.pop()(b)}qn(c)},h:function(c,_,b){_>>>=0,b>>>=0,c=mt(c>>>0),_=mt(_),b=mt(b),c[_]=b},e:function(c,_){return _>>>=0,c=Xn(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(_),Ft(c)},ca:function(c,_){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),_>>>=0,c=new Date(1e3*c),d()[_>>>2>>>0]=c.getUTCSeconds(),d()[_+4>>>2>>>0]=c.getUTCMinutes(),d()[_+8>>>2>>>0]=c.getUTCHours(),d()[_+12>>>2>>>0]=c.getUTCDate(),d()[_+16>>>2>>>0]=c.getUTCMonth(),d()[_+20>>>2>>>0]=c.getUTCFullYear()-1900,d()[_+24>>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[_+28>>>2>>>0]=c},da:function(c,_){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),_>>>=0,c=new Date(1e3*c),d()[_>>>2>>>0]=c.getSeconds(),d()[_+4>>>2>>>0]=c.getMinutes(),d()[_+8>>>2>>>0]=c.getHours(),d()[_+12>>>2>>>0]=c.getDate(),d()[_+16>>>2>>>0]=c.getMonth(),d()[_+20>>>2>>>0]=c.getFullYear()-1900,d()[_+24>>>2>>>0]=c.getDay();var b=(Pr(c.getFullYear())?d0:c0)[c.getMonth()]+c.getDate()-1|0;d()[_+28>>>2>>>0]=b,d()[_+36>>>2>>>0]=-(60*c.getTimezoneOffset()),b=new Date(c.getFullYear(),6,1).getTimezoneOffset();var k=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(b!=k&&c.getTimezoneOffset()==Math.min(k,b))|0,d()[_+32>>>2>>>0]=c},ea:function(c){c>>>=0;var _=new Date(d()[c+20>>>2>>>0]+1900,d()[c+16>>>2>>>0],d()[c+12>>>2>>>0],d()[c+8>>>2>>>0],d()[c+4>>>2>>>0],d()[c>>>2>>>0],0),b=d()[c+32>>>2>>>0],k=_.getTimezoneOffset(),I=new Date(_.getFullYear(),6,1).getTimezoneOffset(),P=new Date(_.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(P,I);return 0>b?d()[c+32>>>2>>>0]=+(I!=P&&H==k):0<b!=(H==k)&&(I=Math.max(P,I),_.setTime(_.getTime()+6e4*((0<b?H:I)-k))),d()[c+24>>>2>>>0]=_.getDay(),b=(Pr(_.getFullYear())?d0:c0)[_.getMonth()]+_.getDate()-1|0,d()[c+28>>>2>>>0]=b,d()[c>>>2>>>0]=_.getSeconds(),d()[c+4>>>2>>>0]=_.getMinutes(),d()[c+8>>>2>>>0]=_.getHours(),d()[c+12>>>2>>>0]=_.getDate(),d()[c+16>>>2>>>0]=_.getMonth(),d()[c+20>>>2>>>0]=_.getYear(),c=_.getTime(),BigInt(isNaN(c)?-1:c/1e3)},aa:p0,ba:h0,R:function(c,_,b,k){c>>>=0,_>>>=0,b>>>=0,k>>>=0;var I=new Date().getFullYear(),P=new Date(I,0,1),H=new Date(I,6,1);I=P.getTimezoneOffset();var J=H.getTimezoneOffset(),fe=Math.max(I,J);h()[c>>>2>>>0]=60*fe,d()[_>>>2>>>0]=+(I!=J),c=oe=>oe.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],P=c(P),H=c(H),J<I?(pr(P,b,17),pr(H,k,17)):(pr(P,k,17),pr(H,b,17))},q:()=>{Je("")},f:function(c,_,b){return c>>>=0,_=f0(_>>>0,b>>>0),La[c](..._)},M:function(c,_,b){return c>>>=0,_=f0(_>>>0,b>>>0),La[c](..._)},H:()=>{},L:()=>Date.now(),ra:()=>{throw ft+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>G?(Ay(),qr(du)).cpus().length:navigator.hardwareConcurrency,Q:function(c){c>>>=0;var _=o().length;if(c<=_||4294901760<c)return!1;for(var b=1;4>=b;b*=2){var k=_*(1+.2/b);k=Math.min(k,c+100663296);var I=Math;k=Math.max(c,k);e:{I=(I.min.call(I,4294901760,k+(65536-k%65536)%65536)-D.buffer.byteLength+65535)/65536;try{D.grow(I),dt();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},ja:g0,la:_0,Z:hn,B:y0,J:w0,ga:b0,I:v0,a:D||p.wasmMemory,ka:S0,r:function(c,_,b,k){return S0(c>>>0,_>>>0,b>>>0,k>>>0)}},me=function(){function c(b,k){return me=b.exports,me=gs(),me=uE(),ve.Qb.push(me.cb),pn.unshift(me.va),ie=k,Na(),me}var _={a:lE};if(Mr++,p.instantiateWasm)try{return p.instantiateWasm(_,c)}catch(b){ae(`Module.instantiateWasm callback failed with error: ${b}`),v(b)}return wr(_,function(b){c(b.instance,b.module)}).catch(v),{}}(),E0=c=>(E0=me.wa)(c);p.__embind_initialize_bindings=()=>(p.__embind_initialize_bindings=me.xa)(),p._OrtInit=(c,_)=>(p._OrtInit=me.ya)(c,_),p._OrtGetLastError=(c,_)=>(p._OrtGetLastError=me.za)(c,_),p._OrtCreateSessionOptions=(c,_,b,k,I,P,H,J,fe,oe)=>(p._OrtCreateSessionOptions=me.Aa)(c,_,b,k,I,P,H,J,fe,oe),p._OrtAppendExecutionProvider=(c,_)=>(p._OrtAppendExecutionProvider=me.Ba)(c,_),p._OrtAddFreeDimensionOverride=(c,_,b)=>(p._OrtAddFreeDimensionOverride=me.Ca)(c,_,b),p._OrtAddSessionConfigEntry=(c,_,b)=>(p._OrtAddSessionConfigEntry=me.Da)(c,_,b),p._OrtReleaseSessionOptions=c=>(p._OrtReleaseSessionOptions=me.Ea)(c),p._OrtCreateSession=(c,_,b)=>(p._OrtCreateSession=me.Fa)(c,_,b),p._OrtReleaseSession=c=>(p._OrtReleaseSession=me.Ga)(c),p._OrtGetInputOutputCount=(c,_,b)=>(p._OrtGetInputOutputCount=me.Ha)(c,_,b),p._OrtGetInputName=(c,_)=>(p._OrtGetInputName=me.Ia)(c,_),p._OrtGetOutputName=(c,_)=>(p._OrtGetOutputName=me.Ja)(c,_),p._OrtFree=c=>(p._OrtFree=me.Ka)(c),p._OrtCreateTensor=(c,_,b,k,I,P)=>(p._OrtCreateTensor=me.La)(c,_,b,k,I,P),p._OrtGetTensorData=(c,_,b,k,I)=>(p._OrtGetTensorData=me.Ma)(c,_,b,k,I),p._OrtReleaseTensor=c=>(p._OrtReleaseTensor=me.Na)(c),p._OrtCreateRunOptions=(c,_,b,k)=>(p._OrtCreateRunOptions=me.Oa)(c,_,b,k),p._OrtAddRunConfigEntry=(c,_,b)=>(p._OrtAddRunConfigEntry=me.Pa)(c,_,b),p._OrtReleaseRunOptions=c=>(p._OrtReleaseRunOptions=me.Qa)(c),p._OrtCreateBinding=c=>(p._OrtCreateBinding=me.Ra)(c),p._OrtBindInput=(c,_,b)=>(p._OrtBindInput=me.Sa)(c,_,b),p._OrtBindOutput=(c,_,b,k)=>(p._OrtBindOutput=me.Ta)(c,_,b,k),p._OrtClearBoundOutputs=c=>(p._OrtClearBoundOutputs=me.Ua)(c),p._OrtReleaseBinding=c=>(p._OrtReleaseBinding=me.Va)(c),p._OrtRunWithBinding=(c,_,b,k,I)=>(p._OrtRunWithBinding=me.Wa)(c,_,b,k,I),p._OrtRun=(c,_,b,k,I,P,H,J)=>(p._OrtRun=me.Xa)(c,_,b,k,I,P,H,J),p._OrtEndProfiling=c=>(p._OrtEndProfiling=me.Ya)(c),p._JsepOutput=(c,_,b)=>(p._JsepOutput=me.Za)(c,_,b),p._JsepGetNodeName=c=>(p._JsepGetNodeName=me._a)(c);var ws=p._pthread_self=()=>(ws=p._pthread_self=me.$a)(),bs=p._malloc=c=>(bs=p._malloc=me.ab)(c),br=p._free=c=>(br=p._free=me.bb)(c);p.__emscripten_tls_init=()=>(p.__emscripten_tls_init=me.cb)();var C0=p.__emscripten_thread_init=(c,_,b,k,I,P)=>(C0=p.__emscripten_thread_init=me.eb)(c,_,b,k,I,P);p.__emscripten_thread_crashed=()=>(p.__emscripten_thread_crashed=me.fb)();var T0=(c,_,b,k,I)=>(T0=me.gb)(c,_,b,k,I),kl=c=>(kl=me.hb)(c),El=p.__emscripten_thread_exit=c=>(El=p.__emscripten_thread_exit=me.ib)(c),A0=()=>(A0=me.jb)(),I0=(c,_)=>(I0=me.kb)(c,_),vs=c=>(vs=me.lb)(c),Cl=c=>(Cl=me.mb)(c),Tl=()=>(Tl=me.nb)(),M0=p.dynCall_ii=(c,_)=>(M0=p.dynCall_ii=me.pb)(c,_),O0=c=>(O0=me.qb)(c),z0=()=>(z0=me.rb)(),P0=c=>(P0=me.sb)(c),R0=()=>(R0=me.tb)();p.___start_em_js=839500,p.___stop_em_js=839661;function uE(){var c=me;c=Object.assign({},c);var _=k=>I=>k(I)>>>0,b=k=>()=>k()>>>0;return c.wa=_(c.wa),c.$a=b(c.$a),c.ab=_(c.ab),c.emscripten_main_runtime_thread_id=b(c.emscripten_main_runtime_thread_id),c.mb=_(c.mb),c.nb=b(c.nb),c}p.wasmMemory=D,p.stackSave=()=>Tl(),p.stackRestore=c=>vs(c),p.stackAlloc=c=>Cl(c),p.keepRuntimeAlive=()=>0<ft,p.UTF8ToString=lt,p.stringToUTF8=pr,p.lengthBytesUTF8=Nt,p.ExitStatus=Bt,p.PThread=ve;var $s;Vr=function c(){$s||B0(),$s||(Vr=c)};function B0(){if(!(0<Mr))if(j)w(p),j||Wn(pn),startWorker(p);else{if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)Ir.unshift(p.preRun.shift());Wn(Ir),0<Mr||$s||($s=!0,p.calledRun=!0,he||(j||Wn(pn),w(p),j||Wn(ml)))}}return B0(),S}})();typeof t=="object"&&typeof e=="object"?e.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),My=vn((t,e)=>{e.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\n'}),pu,hu,Ns,ui,ta,Fs,fu,mu,gu,_u,it,ra=te(()=>{pu=Ey(),hu=Iy(),ui=!1,ta=!1,Fs=!1,fu=t=>{if(t===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+t+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},mu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},gu=(t,e)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",_u=async t=>{if(ui)return Promise.resolve();if(ta)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Fs)throw new Error("previous call to 'initializeWebAssembly()' failed.");ta=!0;let e=t.initTimeout,r=t.numThreads,n=t.simd,a=fu(r),s=n&&mu(),i=t.wasmPaths,o=typeof i=="string"?i:void 0,l=gu(s,a),u=typeof i=="object"?i[l]:void 0,d=!1,h=[];if(e>0&&h.push(new Promise(f=>{setTimeout(()=>{d=!0,f()},e)})),h.push(new Promise((f,g)=>{let p=a?hu:pu,w={locateFile:(v,S)=>{if(a&&v.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([My()],{type:"text/javascript"}));if(v.endsWith(".wasm")){if(u)return u;let $=o??S;return l==="ort-wasm-simd.wasm"?$+"ort-wasm-simd.jsep.wasm":l==="ort-wasm-simd-threaded.wasm"?$+"ort-wasm-simd-threaded.jsep.wasm":$+l}return S+v}};if(a)if(w.numThreads=r,typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let v=`var ortWasmThreaded=${p.toString()};`;w.mainScriptUrlOrBlob=new Blob([v],{type:"text/javascript"})}p(w).then(v=>{ta=!1,ui=!0,Ns=v,f()},v=>{ta=!1,Fs=!0,g(v)})})),await Promise.race(h),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},it=()=>{if(ui&&Ns)return Ns;throw new Error("WebAssembly is not initialized yet.")}}),rt,di,qe,Ls=te(()=>{ra(),rt=(t,e)=>{let r=it(),n=r.lengthBytesUTF8(t)+1,a=r._malloc(n);return r.stringToUTF8(t,a,n),e.push(a),a},di=(t,e,r,n)=>{if(typeof t=="object"&&t!==null){if(r.has(t))throw new Error("Circular reference in options");r.add(t)}Object.entries(t).forEach(([a,s])=>{let i=e?e+a:a;if(typeof s=="object")di(s,i+".",r,n);else if(typeof s=="string"||typeof s=="number")n(i,s.toString());else if(typeof s=="boolean")n(i,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},qe=t=>{let e=it(),r=e.stackSave();try{let n=e.stackAlloc(8);e._OrtGetLastError(n,n+4);let a=e.HEAP32[n/4],s=e.HEAPU32[n/4+1],i=s?e.UTF8ToString(s):"";throw new Error(`${t} ERROR_CODE: ${a}, ERROR_MESSAGE: ${i}`)}finally{e.stackRestore(r)}}}),yu,Oy=te(()=>{ra(),Ls(),yu=t=>{let e=it(),r=0,n=[],a=t||{};try{if((t==null?void 0:t.logSeverityLevel)===void 0)a.logSeverityLevel=2;else if(typeof t.logSeverityLevel!="number"||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if((t==null?void 0:t.logVerbosityLevel)===void 0)a.logVerbosityLevel=0;else if(typeof t.logVerbosityLevel!="number"||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);(t==null?void 0:t.terminate)===void 0&&(a.terminate=!1);let s=0;return(t==null?void 0:t.tag)!==void 0&&(s=rt(t.tag,n)),r=e._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,s),r===0&&qe("Can't create run options."),(t==null?void 0:t.extra)!==void 0&&di(t.extra,"",new WeakSet,(i,o)=>{let l=rt(i,n),u=rt(o,n);e._OrtAddRunConfigEntry(r,l,u)!==0&&qe(`Can't set a run config entry: ${i} - ${o}.`)}),[r,n]}catch(s){throw r!==0&&e._OrtReleaseRunOptions(r),n.forEach(i=>e._free(i)),s}}}),wu,bu,vu,$u,xu,zy=te(()=>{ra(),Ls(),wu=t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}},bu=t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}},vu=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),t.executionProviders&&t.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(t.enableMemPattern=!1)},$u=(t,e,r)=>{for(let n of e){let a=typeof n=="string"?n:n.name;switch(a){case"webnn":if(a="WEBNN",typeof n!="string"){let i=n;if(i!=null&&i.deviceType){let o=rt("deviceType",r),l=rt(i.deviceType,r);it()._OrtAddSessionConfigEntry(t,o,l)!==0&&qe(`Can't set a session config entry: 'deviceType' - ${i.deviceType}.`)}if(i!=null&&i.numThreads){let o=i.numThreads;(typeof o!="number"||!Number.isInteger(o)||o<0)&&(o=0);let l=rt("numThreads",r),u=rt(o.toString(),r);it()._OrtAddSessionConfigEntry(t,l,u)!==0&&qe(`Can't set a session config entry: 'numThreads' - ${i.numThreads}.`)}if(i!=null&&i.powerPreference){let o=rt("powerPreference",r),l=rt(i.powerPreference,r);it()._OrtAddSessionConfigEntry(t,o,l)!==0&&qe(`Can't set a session config entry: 'powerPreference' - ${i.powerPreference}.`)}}break;case"webgpu":if(a="JS",typeof n!="string"){let i=n;if(i!=null&&i.preferredLayout){if(i.preferredLayout!=="NCHW"&&i.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let o=rt("preferredLayout",r),l=rt(i.preferredLayout,r);it()._OrtAddSessionConfigEntry(t,o,l)!==0&&qe(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${a}`)}let s=rt(a,r);it()._OrtAppendExecutionProvider(t,s)!==0&&qe(`Can't append execution provider: ${a}.`)}},xu=t=>{let e=it(),r=0,n=[],a=t||{};vu(a);try{let s=wu(a.graphOptimizationLevel??"all"),i=bu(a.executionMode??"sequential"),o=typeof a.logId=="string"?rt(a.logId,n):0,l=a.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let u=a.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log verbosity level is not valid: ${u}`);let d=typeof a.optimizedModelFilePath=="string"?rt(a.optimizedModelFilePath,n):0;if(r=e._OrtCreateSessionOptions(s,!!a.enableCpuMemArena,!!a.enableMemPattern,i,!!a.enableProfiling,0,o,l,u,d),r===0&&qe("Can't create session options."),a.executionProviders&&$u(r,a.executionProviders,n),a.enableGraphCapture!==void 0){if(typeof a.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);let h=rt("enableGraphCapture",n),f=rt(a.enableGraphCapture.toString(),n);e._OrtAddSessionConfigEntry(r,h,f)!==0&&qe(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(let[h,f]of Object.entries(a.freeDimensionOverrides)){if(typeof h!="string")throw new Error(`free dimension override name must be a string: ${h}`);if(typeof f!="number"||!Number.isInteger(f)||f<0)throw new Error(`free dimension override value must be a non-negative integer: ${f}`);let g=rt(h,n);e._OrtAddFreeDimensionOverride(r,g,f)!==0&&qe(`Can't set a free dimension override: ${h} - ${f}.`)}return a.extra!==void 0&&di(a.extra,"",new WeakSet,(h,f)=>{let g=rt(h,n),p=rt(f,n);e._OrtAddSessionConfigEntry(r,g,p)!==0&&qe(`Can't set a session config entry: ${h} - ${f}.`)}),[r,n]}catch(s){throw r!==0&&e._OrtReleaseSessionOptions(r),n.forEach(i=>e._free(i)),s}}}),Us,Xr,na,Ws,ci,Vs,Gs,xe=te(()=>{Us=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${t}`)}},Xr=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${t}`)}},na=t=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t],Ws=t=>{switch(t){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}},ci=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${t}`)}},Vs=t=>t==="float32"||t==="float16"||t==="int32"||t==="int64"||t==="uint32"||t==="uint8"||t==="bool",Gs=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${t}`)}}}),pi,Su=te(()=>{pi=async t=>{if(typeof t=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(t))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(t),n=[];for await(let a of r)n.push(a);return new Uint8Array(Buffer.concat(n))}throw e}else{let e=await fetch(t);if(!e.ok)throw new Error(`failed to load external data file: ${t}`);let r=e.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${t}, no response body.`);let a=e.body.getReader(),s;try{s=new ArrayBuffer(n)}catch(o){if(o instanceof RangeError){let l=Math.ceil(n/65536);s=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw o}let i=0;for(;;){let{done:o,value:l}=await a.read();if(o)break;let u=l.byteLength;new Uint8Array(s,i,u).set(l),i+=u}return new Uint8Array(s,0,n)}}else return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t)}}),ku,Eu,Cu,Tu,Au,Iu,nt,Qr=te(()=>{xe(),ku=["V","I","W","E","F"],Eu=(t,e)=>{console.log(`[${ku[t]},${new Date().toISOString()}]${e}`)},Au=(t,e)=>{Cu=t,Tu=e},Iu=(t,e)=>{let r=ci(t),n=ci(Cu);r>=n&&Eu(r,typeof e=="function"?e():e)},nt=(...t)=>{Tu&&Iu(...t)}}),Mu,Py=te(()=>{xe(),Mu=(t,e)=>new(Ws(e))(t)}),Hs=te(()=>{}),js,hi,fi,Ou,zu,qs,Ks,Pu,Ru,Ry=te(()=>{Qr(),Hs(),js=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),hi=[],fi=t=>Math.ceil(t/16)*16,Ou=t=>{for(let e=0;e<hi.length;e++){let r=hi[e];if(t<=r)return r}return Math.ceil(t/16)*16},zu=1,qs=()=>zu++,Ks=async(t,e,r,n)=>{let a=fi(r),s=t.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=t.getCommandEncoder();t.endComputePass(),i.copyBufferToBuffer(e,0,s,0,a),t.flush(),await s.mapAsync(GPUMapMode.READ);let o=s.getMappedRange();if(n){let l=n();return l.set(new Uint8Array(o,0,r)),l}else return new Uint8Array(o.slice(0,r))}finally{s.destroy()}},Pu=class{constructor(t){this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[e]of js)hi.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[])}upload(t,e){let r=e.buffer,n=e.byteOffset,a=e.byteLength,s=fi(a),i=this.storageCache.get(t);if(!i)throw new Error("gpu data for uploading does not exist");if(i.originalSize!==a)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${a}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(r,n,a)),o.unmap();let u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o,0,i.gpuData.buffer,0,s),nt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(o)}memcpy(t,e){let r=this.storageCache.get(t);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(e);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let a=fi(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,a)}registerExternalBuffer(t,e,r){let n;if(r){if(n=this.externalBuffers.get(r),n===void 0)throw new Error("previous buffer is not registered");if(t===r)return nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(r)}else n=qs();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:e}),this.externalBuffers.set(t,n),nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let e=this.externalBuffers.get(t);e!==void 0&&(this.storageCache.delete(e),this.externalBuffers.delete(t),nt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(t,e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=Ou(t),n,a=(e&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(e&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||s){let o=(a?this.freeBuffers:this.freeUniformBuffers).get(r);o?o.length>0?n=o.pop():n=this.backend.device.createBuffer({size:r,usage:e}):n=this.backend.device.createBuffer({size:r,usage:e})}else n=this.backend.device.createBuffer({size:r,usage:e});let i={id:qs(),type:0,buffer:n};return this.storageCache.set(i.id,{gpuData:i,originalSize:t}),nt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${i.id}`),i}get(t){var e;return(e=this.storageCache.get(t))==null?void 0:e.gpuData}release(t){let e=this.storageCache.get(t);if(!e)throw new Error("releasing data does not exist");return nt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${e.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(e.gpuData.buffer),e.originalSize}async download(t,e){let r=this.storageCache.get(t);if(!r)throw new Error("data does not exist");await Ks(this.backend,r.gpuData.buffer,r.originalSize,e)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let e=js.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(t.size)||[];e===void 0||r.length>=e?t.destroy():r.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(t.size)||[];e===void 0||r.length>=e?t.destroy():r.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let e of this.buffersPending)t.push(e);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let e=this.capturedPendingBuffers.get(t);e&&(e.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(t))}},Ru=(...t)=>new Pu(...t)}),Bu,Ke,ct=te(()=>{Bu=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Ke=t=>new Bu(t)}),Du,xn,X,mi,Nu,Ys,Xs,Oe=te(()=>{Du=class{static calcMatMulShape(t,e){return t[1]!==e[0]?void 0:[t[0],e[1]]}},xn=class{static calcShape(t,e,r=!1){let n=t.length,a=e.length;if(n===0)return e;if(a===0)return t;let s=Math.max(t.length,e.length),i=new Array(s);if(r){if(n<2||a<2)return;let o=Du.calcMatMulShape([t[n-2],t[n-1]],[e[a-2],e[a-1]]);if(o===void 0)return;[i[s-2],i[s-1]]=o}for(let o=r?3:1;o<=s;o++){let l=n-o<0?1:t[n-o],u=a-o<0?1:e[a-o];if(l!==u&&l>1&&u>1)return;let d=Math.max(l,u);if(l&&u)i[s-o]=Math.max(l,u);else{if(d>1)return;i[s-o]=0}}return i}static isValidBroadcast(t,e){let r=t.length,n=e.length;if(r>n)return!1;for(let a=1;a<=r;a++)if(t[r-a]!==1&&t[r-a]!==e[n-a])return!1;return!0}},X=class xs{static size(e){return xs.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,r=4){let n=e.length;if(n===0)return[];let a=new Array(n),s=n-1;for(;s>=0;){if(e[s]%r===0){a[s]=e[s]/r;break}if(r%e[s]!==0)throw new Error("cannot convert shape");a[s]=1,r/=e[s],s--}for(s--;s>=0;s--)a[s]=e[s];return a}static sizeFromDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return xs.getSizeFromDimensionRange(e,r,e.length)}static sizeToDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${e.length} dimensions.`);return xs.getSizeFromDimensionRange(e,0,r)}static getSizeFromDimensionRange(e,r,n){let a=1;for(let s=r;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");a*=e[s]}return a}static computeStrides(e){let r=e.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=e[r-1];for(let a=r-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}static normalizeAxis(e,r){if(e<-r&&e>=r)throw new Error("unsupported axis for this operation.");return e<0?e+r:e}static normalizeAxes(e,r){return e.map(n=>this.normalizeAxis(n,r??e.length))}static sortBasedOnPerm(e,r){return r?r.map(n=>e[n]):e.slice().reverse()}static padShape(e,r){let n=e.length;return e.map((a,s)=>a+r[s]+r[s+n])}static areEqual(e,r){return e.length!==r.length?!1:e.every((n,a)=>n===r[a])}},mi=class ei{static adjustPoolAttributes(e,r,n,a,s,i){if(!e&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let o=0;o<r.length-2;o++)o>=n.length?n.push(r[o+2]):n[o]=r[o+2];for(let o=0;o<n.length;o++)if(o<a.length){if(a[o]<0)throw new Error("strides should be greater than or equal to 1")}else a.push(1);for(let o=0;o<n.length;o++)if(o<s.length){if(s[o]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let o=0;o<n.length*2;o++)if(o<i.length){if(i[o]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let o=0;o<n.length;o++){if(n[o]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[o]>=n[o]||i[o+n.length]>=n[o])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,r,n,a,s,i,o){if(o){if(s.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(a.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<e.length-2;l++)ei.adjustPadAndReturnShape(e[l+(i?1:2)],r[l],n[l],a[l],s,l,l+e.length-2,o)}}static computePoolOutputShape(e,r,n,a,s,i,o){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let l=[r[0],r[1]];return ei.computeShapeHelper(e,r,l,n,a,s,i,o),l}static computeConvOutputShape(e,r,n,a,s,i,o){if(e.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[e[0],r[0]];return ei.computeShapeHelper(!1,e,l,n,a,s,i,o),l}static computeShapeHelper(e,r,n,a,s,i,o,l){if(e)for(let u=0;u<r.length-2;u++)n.push(1);else for(let u=0;u<r.length-2;u++)n.push(ei.adjustPadAndReturnShape(r[u+2],a[u],s[u],i[u],o,u,u+r.length-2,l))}static adjustPadAndReturnShape(e,r,n,a,s,i,o,l){let u=n*(a-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return s[i]=0,s[o]=0,Math.floor((e-u)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let d=((e+r-1)/r-1)*r+a-e;return s[i]=Math.floor(l==="SAME_LOWER"?(d+1)/2:d/2),s[o]=d-s[i],Math.floor((e+d-a)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+s[i]+s[o]-u)/r+1)}},Nu=class{static getShapeOfGemmResult(t,e,r,n,a){if(t.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,i,o;e?(s=t[1],i=t[0]):(s=t[0],i=t[1]);let l=-1;if(n?(o=r[0],l=1):(o=r[1],l=0),r[l]!==i)throw new Error("dimension mismatch");if(s<=0||o<=0||i<=0)throw new Error("invalid shape specified");if(a&&!xn.isValidBroadcast(a,[s,o]))throw new Error("gemm: invalid bias shape for broadcast");return[s,o,i]}},Ys=-34028234663852886e22,Xs=34028234663852886e22}),Sn,gi,yt,Ot,we,st,xr,kn,Dr,ke,_i,Z,_e,Qs,Fu,Lu,aa,Ie=te(()=>{xe(),Oe(),Sn=64,gi=(t,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(t){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${t}`)}},yt=(t,e=1)=>{let r=gi(t,e);return typeof r=="string"?r:r[0]},Ot=(t,e=1)=>{let r=gi(t,e);return typeof r=="string"?r:r[1]},we=(...t)=>{let e=[];return t.forEach(r=>{r.length!==0&&e.push({type:12,data:r},{type:12,data:X.computeStrides(r)})}),e},st=t=>t%4===0?4:t%2===0?2:1,xr=(t="f32",e,r="0")=>!e||e===1?`${t}(${r})`:`vec${e}<${t}>(${r})`,kn=(t,e,r)=>t==="f32"?r:e===1?`f32(${r})`:`vec${e}<f32>(${r})`,Dr=(t,e)=>e===4?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:e===2?`(${t}.x + ${t}.y)`:e===3?`(${t}.x + ${t}.y + ${t}.z)`:t,ke=(t,e,r,n)=>t.startsWith("uniforms.")&&r>4?typeof e=="string"?n==="f16"?`${t}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${t}[(${e}) / 4][(${e}) % 4]`:n==="f16"?`${t}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${t}[${Math.floor(e/4)}][${e%4}]`:r>1?`${t}[${e}]`:t,_i=(t,e,r,n,a)=>{let s=typeof r=="number",i=s?r:r.length,o=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,u=gi(e,a),d=typeof u=="string"?u:u[1],h=typeof u=="string"?u:u[0],f={indices:l,value:d,storage:h,tensor:e},g=D=>typeof D=="string"?D:`${D}u`,p={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=s?"uniforms.":"",v=`${w}${t}_shape`,S=`${w}${t}_strides`,$="";for(let D=0;D<i-1;D++)$+=`
    let dim${D} = current / ${ke(S,D,i)};
    let rest${D} = current % ${ke(S,D,i)};
    indices[${D}] = dim${D};
    current = rest${D};
    `;$+=`indices[${i-1}] = current;`;let E=i<2?"":`
  fn o2i_${t}(offset: u32) -> ${f.indices} {
    var indices: ${f.indices};
    var current = offset;
    ${$}
    return indices;
  }`,T=D=>(p.offsetToIndices=!0,i<2?D:`o2i_${t}(${D})`),A=[];if(i>=2)for(let D=i-1;D>=0;D--)A.push(`${ke(S,D,i)} * (indices[${D}])`);let z=i<2?"":`
  fn i2o_${t}(indices: ${f.indices}) -> u32 {
    return ${A.join("+")};
  }`,R=D=>(p.indicesToOffset=!0,i<2?D:`i2o_${t}(${D})`),G=(...D)=>i===0?"0u":`${f.indices}(${D.map(g).join(",")})`,j=(D,ie)=>i<2?`${D}`:`${ke(D,ie,i)}`,q=(D,ie,he)=>i<2?`${D}=${he};`:`${ke(D,ie,i)}=${he};`,ue={},re=(D,ie)=>{p.broadcastedIndicesToOffset=!0;let he=`${ie.name}broadcastedIndicesTo${t}Offset`;if(he in ue)return`${he}(${D})`;let Se=[];for(let Te=i-1;Te>=0;Te--){let Xe=ie.indicesGet("outputIndices",Te+ie.rank-i);Se.push(`${j(S,Te)} * (${Xe} % ${j(v,Te)})`)}return ue[he]=`fn ${he}(outputIndices: ${ie.type.indices}) -> u32 {
             return ${Se.length>0?Se.join("+"):"0u"};
           }`,`${he}(${D})`},ee=(D,ie)=>(()=>{if(f.storage===f.value)return`${t}[${D}]=${ie};`;if(f.storage==="vec2<u32>"&&f.value==="i32")return`${t}[${D}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(f.storage==="vec2<u32>"&&f.value==="u32")return`${t}[${D}]=vec2<u32>(u32(${ie}), 0u);`;if(f.storage==="u32"&&f.value==="vec4<bool>")return`${t}[${D}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${f.storage} and value type ${f.value} yet`)})(),le=D=>(()=>{if(f.storage===f.value)return`${t}[${D}]`;if(f.storage==="vec2<u32>"&&f.value==="i32")return`i32(${t}[${D}].x)`;if(f.storage==="vec2<u32>"&&f.value==="u32")return`u32(${t}[${D}].x)`;if(f.storage==="u32"&&f.value==="vec4<bool>")return`vec4<bool>(bool(${t}[${D}] & 0xFFu), bool(${t}[${D}] & 0xFF00u), bool(${t}[${D}] & 0xFF0000u), bool(${t}[${D}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${f.storage} and value type ${f.value} yet`)})(),N=i<2?"":`
  fn get_${t}ByIndices(indices: ${f.indices}) -> ${d} {
    return ${le(`i2o_${t}(indices)`)};
  }`,O=i<2?"":(()=>{let D=o.map(he=>`d${he}: u32`).join(", "),ie=o.map(he=>`d${he}`).join(", ");return`
  fn get_${t}(${D}) -> ${d} {
    return get_${t}ByIndices(${G(ie)});
  }`})(),V=(...D)=>{if(D.length!==i)throw new Error(`indices length must be ${i}`);let ie=D.map(g).join(",");return i===0?le("0u"):i===1?le(ie[0]):(p.get=!0,p.getByIndices=!0,p.indicesToOffset=!0,`get_${t}(${ie})`)},K=D=>i<2?le(D):(p.getByIndices=!0,p.indicesToOffset=!0,`get_${t}ByIndices(${D})`),de=i<2?"":`
  fn set_${t}ByIndices(indices: ${f.indices}, value: ${d}) {
    ${ee(`i2o_${t}(indices)`,"value")}
  }`,ae=i<2?"":(()=>{let D=o.map(he=>`d${he}: u32`).join(", "),ie=o.map(he=>`d${he}`).join(", ");return`
  fn set_${t}(${D}, value: ${d}) {
    set_${t}ByIndices(${G(ie)}, value);
  }`})();return{impl:()=>{let D=[],ie=!1;return p.offsetToIndices&&(D.push(E),ie=!0),p.indicesToOffset&&(D.push(z),ie=!0),p.broadcastedIndicesToOffset&&(Object.values(ue).forEach(he=>D.push(he)),ie=!0),p.set&&(D.push(ae),ie=!0),p.setByIndices&&(D.push(de),ie=!0),p.get&&(D.push(O),ie=!0),p.getByIndices&&(D.push(N),ie=!0),!s&&ie&&D.unshift(`const ${v} = ${f.indices}(${r.join(",")});`,`const ${S} = ${f.indices}(${X.computeStrides(r).join(",")});`),D.join(`
`)},type:f,offsetToIndices:T,indicesToOffset:R,broadcastedIndicesToOffset:re,indices:G,indicesGet:j,indicesSet:q,set:(...D)=>{if(D.length!==i+1)throw new Error(`indices length must be ${i}`);let ie=D[i];if(typeof ie!="string")throw new Error("value must be string");let he=D.slice(0,i).map(g).join(",");return i===0?ee("0u",ie):i===1?ee(he[0],ie):(p.set=!0,p.setByIndices=!0,p.indicesToOffset=!0,`set_${t}(${he}, ${ie})`)},setByOffset:ee,setByIndices:(D,ie)=>i<2?ee(D,ie):(p.setByIndices=!0,p.indicesToOffset=!0,`set_${t}ByIndices(${D}, ${ie});`),get:V,getByOffset:le,getByIndices:K,usage:n,name:t,strides:S,shape:v,rank:i}},Z=(t,e,r,n=1)=>_i(t,e,r,"input",n),_e=(t,e,r,n=1)=>_i(t,e,r,"output",n),Qs=(t,e,r,n=1)=>_i(t,e,r,"internal",n),Fu=class{constructor(t,e){this.normalizedDispatchGroup=t,this.limits=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Sn){let e=typeof t=="number"?t:t[0],r=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2];if(e>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${e}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(e*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${e}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=a?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=a?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${e*r*n}u + local_idx;`;return`@compute @workgroup_size(${e}, ${r}, ${n})
  fn main(${s}) {
    ${i}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,e){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let r=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${e}) var<storage, ${r}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(e=>this.declareVariable(e,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(t,e,r=1){return this.uniforms.push({name:t,type:e,length:r}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:e,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?t.push(`@align(16) ${e}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):t.push(`${e}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let a=n==null||n===1?r:`vec${n}<${r}>`;t.push(`${e}:${a}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(e=>[t(e.type),e.length??1])}},Lu=(t,e)=>new Fu(t,e),aa=(t,e)=>{let r=t.length,n=[];for(let a=0;a<r;a++){let s=r-1-a,i=t[s]||1;(e[e.length-1-a]||1)>1&&i===1&&n.unshift(s)}return n}}),Uu,Zs,Wu,Vu,Sr,Gu,Hu,ia=te(()=>{xe(),Oe(),ct(),Ie(),Uu=t=>{if(!t||t.length!==1)throw new Error("Transpose requires 1 input.")},Zs=(t,e)=>e&&e.length!==t?[...new Array(t).keys()].reverse():e,Wu=(t,e)=>X.sortBasedOnPerm(t,Zs(t.length,e)),Vu=(t,e,r,n)=>{let a=[];a.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<e;++s)a.push(r.indicesSet("a",t[s],`i[${s}]`));return a.push("return a;}"),a.join(`
`)},Sr=(t,e)=>{let r=t.dataType,n=t.dims.length,a=Zs(n,e),s=Wu(t.dims,a),i=_e("output",r,s.length),o=Z("a",r,n),l=u=>`
  ${u.registerUniform("output_size","u32").declareVariables(o,i)}

  ${Vu(a,n,o,i)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${i.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${i.setByOffset("global_idx",o.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:u=>{let d=X.size(s);return{outputs:[{dims:s,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...we(u[0].dims,s)]}},getShaderSource:l}},Gu=(t,e)=>{Uu(t.inputs),t.compute(Sr(t.inputs[0],e.perm))},Hu=t=>Ke({perm:t.perm})}),ju,qu,Ku,Yu,Xu,Qu,Zu,Ju,ed,td,nr,rd,nd,ad,id,sd,od,ld,ud,dd,cd,By=te(()=>{xe(),Oe(),Ie(),eo(),ia(),ju={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},qu={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ku={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Yu={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Xu=(t,e)=>{let r=[];for(let n=e-t;n<e;++n)r.push(n);return r},Qu=(t,e)=>{let r=[],n=t.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&r.push(t[s]);let a=e.map(s=>t[s]);return[r,a]},Zu=(t,e)=>{let r=t.length+e.length,n=[],a=0;for(let s=0;s<r;s++)e.indexOf(s)===-1?n.push(t[a++]):n.push(1);return n},Ju=(t,e)=>{for(let r=0;r<t.length;++r)if(t[t.length-r-1]!==e-1-r)return!1;return!0},ed=(t,e)=>{let r=[];if(!Ju(t,e)){for(let n=0;n<e;++n)t.indexOf(n)===-1&&r.push(n);t.forEach(n=>r.push(n))}return r},td=(t,e,r,n,a,s,i)=>{let o=r[0].dims,l=X.size(s),u=X.size(i),d=Z("_A",r[0].dataType,o),h=_e("output",a,s),f=32,g=`
          var<workgroup> aBestValues : array<f32, ${f}>;
       `;return{name:t,shaderCache:e,getShaderSource:p=>`
        ${p.registerUniform("reduceSize","u32").declareVariables(d,h)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${p.mainStart(f)}

          let outputIndex = global_idx / ${f};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Ku[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${f}) {
           let candidate = f32(${d.getByOffset("offset + k")});
           bestValue = ${ju[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${f}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${qu[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${h.setByOffset("outputIndex",`${n==="mean"?`${h.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${h.type.storage}(${Yu[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},nr=(t,e,r,n)=>{let a=t.inputs.length===1?r:Js(t.inputs,r),s=a.axes;s.length===0&&!a.noopWithEmptyAxes&&(s=t.inputs[0].dims.map((g,p)=>p));let i=X.normalizeAxes(s,t.inputs[0].dims.length),o=i,l=t.inputs[0],u=ed(o,t.inputs[0].dims.length);u.length>0&&(l=t.compute(Sr(t.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=Xu(o.length,l.dims.length));let[d,h]=Qu(l.dims,o),f=d;a.keepDims&&(f=Zu(d,i)),t.compute(td(e,{hint:a.cacheKey,inputDependencies:["type"]},[l],n,t.inputs[0].dataType,f,h),{inputs:[l]})},rd=(t,e)=>{nr(t,"ReduceMeanShared",e,"mean")},nd=(t,e)=>{nr(t,"ReduceL1Shared",e,"l1")},ad=(t,e)=>{nr(t,"ReduceL2Shared",e,"l2")},id=(t,e)=>{nr(t,"ReduceLogSumExpShared",e,"logSumExp")},sd=(t,e)=>{nr(t,"ReduceMaxShared",e,"max")},od=(t,e)=>{nr(t,"ReduceMinShared",e,"min")},ld=(t,e)=>{nr(t,"ReduceProdShared",e,"prod")},ud=(t,e)=>{nr(t,"ReduceSumShared",e,"sum")},dd=(t,e)=>{nr(t,"ReduceSumSquareShared",e,"sumSquare")},cd=(t,e)=>{nr(t,"ReduceLogSumShared",e,"logSum")}}),ar,pd,yi,Js,ir,hd,fd,md,gd,_d,yd,wd,bd,vd,$d,sr,xd,Sd,kd,Ed,Cd,Td,Ad,Id,Md,Od,eo=te(()=>{xe(),Oe(),ct(),Ie(),By(),ar=t=>{if(!t||t.length===0||t.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(t.length===2&&t[1].dims.length!==1)throw new Error("Invalid axes input dims.")},pd=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],yi=(t,e,r,n,a,s,i=!1,o=!1)=>{let l=[],u=r[0].dims,d=u.length,h=X.normalizeAxes(a,d),f=!o&&h.length===0;u.forEach((w,v)=>{f||h.indexOf(v)>=0?i&&l.push(1):l.push(w)});let g=l.length,p=X.size(l);return{name:t,shaderCache:e,getShaderSource:w=>{let v=[],S=Z("_A",r[0].dataType,d),$=_e("output",s,g),E=n(S,$,h),T=E[2];for(let A=0,z=0;A<d;A++)f||h.indexOf(A)>=0?(i&&z++,T=`for(var j${A}: u32 = 0; j${A} < ${u[A]}; j${A}++) {
                  ${E[2].includes("last_index")?`let last_index = j${A};`:""}
                  ${S.indicesSet("input_indices",A,`j${A}`)}
                  ${T}
                }`):(v.push(`${S.indicesSet("input_indices",A,$.indicesGet("output_indices",z))};`),z++);return`

        ${w.registerUniform("output_size","u32").declareVariables(S,$)}

        ${w.mainStart()}
          ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${S.type.indices};
          let output_indices = ${$.offsetToIndices("global_idx")};

          ${v.join(`
`)}
          ${E[0]}       // init ops for reduce max/min
          ${E[1]}
          ${T}
          ${E[3]}
          ${E.length===4?$.setByOffset("global_idx","value"):E.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:s}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...we(u,l)]})}},Js=(t,e)=>{let r=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(n=>r.push(Number(n))),Ke({axes:r,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},ir=(t,e,r,n)=>{let a=t.inputs,s=a.length===1?r:Js(a,r);t.compute(yi(e,{hint:s.cacheKey,inputDependencies:["rank"]},[a[0]],s.noopWithEmptyAxes&&s.axes.length===0?pd:n,s.axes,a[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},hd=(t,e)=>{ar(t.inputs),ir(t,"ReduceLogSum",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},fd=(t,e)=>{ar(t.inputs),ir(t,"ReduceL1",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},md=(t,e)=>{ar(t.inputs),ir(t,"ReduceL2",e,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},gd=(t,e)=>{ar(t.inputs),ir(t,"ReduceLogSumExp",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},_d=(t,e)=>{ar(t.inputs),ir(t,"ReduceMax",e,(r,n,a)=>{let s=[];for(let i=0;i<r.rank;i++)(a.indexOf(i)>=0||a.length===0)&&s.push(r.indicesSet("input_indices",i,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},yd=(t,e)=>{ar(t.inputs),ir(t,"ReduceMean",e,(r,n,a)=>{let s=1;for(let i=0;i<r.rank;i++)(a.indexOf(i)>=0||a.length===0)&&(s*=t.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},wd=(t,e)=>{ar(t.inputs),ir(t,"ReduceMin",e,(r,n,a)=>{let s=[];for(let i=0;i<r.rank;i++)(a.indexOf(i)>=0||a.length===0)&&s.push(`input_indices[${i}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},bd=(t,e)=>{ar(t.inputs),ir(t,"ReduceProd",e,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},vd=(t,e)=>{ar(t.inputs),ir(t,"ReduceSum",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},$d=(t,e)=>{ar(t.inputs),ir(t,"ReduceSumSquare",e,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},sr=(t,e,r)=>{if(e.length===0)return r;let n=1,a=1;for(let s=0;s<e.length;s++)e.indexOf(s)===-1?n*=t[s]:a*=t[s];return a<32&&n>1024},xd=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?yd(t,e):rd(t,e)},Sd=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?fd(t,e):nd(t,e)},kd=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?md(t,e):ad(t,e)},Ed=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?gd(t,e):id(t,e)},Cd=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?_d(t,e):sd(t,e)},Td=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?wd(t,e):od(t,e)},Ad=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?bd(t,e):ld(t,e)},Id=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?vd(t,e):ud(t,e)},Md=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?$d(t,e):dd(t,e)},Od=(t,e)=>{sr(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?hd(t,e):cd(t,e)}}),to,zd,Pd,ro,Dy=te(()=>{xe(),ct(),eo(),to=t=>{if(!t||t.length===0||t.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(t[0].dataType!==1)throw new Error("Invalid input type.")},zd=(t,e)=>{to(t.inputs);let r=(n,a,s)=>{let i=[];for(let o=0;o<n.rank;o++)(s.indexOf(o)>=0||s.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};t.compute(yi("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],r,[e.axis],7,e.keepDims),{inputs:[0]})},Pd=(t,e)=>{to(t.inputs);let r=(n,a,s)=>{let i=[];for(let o=0;o<n.rank;o++)(s.indexOf(o)>=0||s.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};t.compute(yi("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],r,[e.axis],7,e.keepDims),{inputs:[0]})},ro=t=>Ke(t)}),Rd,Bd,Dd,wi,Nd,Fd,Ld=te(()=>{xe(),Oe(),ct(),Ie(),Rd=(t,e)=>{if(!t||t.length<1)throw new Error("too few inputs");let r=0,n=t[r],a=n.dataType,s=n.dims.length;t.forEach((i,o)=>{if(o!==r){if(i.dataType!==a)throw new Error("input tensors should be one type");if(i.dims.length!==s)throw new Error("input tensors should have the same shape");i.dims.forEach((l,u)=>{if(u!==e&&l!==n.dims[u])throw new Error("non concat dimensions must match")})}})},Bd=(t,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${t}u>(${e});
    for (var i: u32 = 0u; i < ${t}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${t}u;
  }`,Dd=(t,e)=>{let r=t.length,n=[];for(let a=0;a<r;++a){let s=e.setByOffset("global_idx",t[a].getByIndices("indices"));r===1?n.push(s):a===0?n.push(`if (inputIndex == ${a}u) { ${s} }`):a===r-1?n.push(`else { ${s} }`):n.push(`else if (inputIndex == ${a}) { ${s} }`)}return n.join(`
`)},wi=(t,e,r,n)=>{let a=X.size(r),s=new Array(t.length),i=new Array(t.length),o=0,l=[],u=[],d=[{type:12,data:a}];for(let w=0;w<t.length;++w)o+=t[w].dims[e],s[w]=o,u.push(t[w].dims.length),i[w]=Z(`input${w}`,n,u[w]),l.push("rank"),d.push({type:12,data:s[w]});for(let w=0;w<t.length;++w)d.push(...we(t[w].dims));d.push(...we(r));let h=_e("output",n,r.length),f=h.indicesGet("indices",e),g=Array.from(Array(s.length).keys()).map(w=>`uniforms.sizeInConcatAxis${w}`).join(","),p=w=>`

  ${(()=>{w.registerUniform("outputSize","u32");for(let v=0;v<t.length;v++)w.registerUniform(`sizeInConcatAxis${v}`,"u32");return w.declareVariables(...i,h)})()}

  ${Bd(s.length,g)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${h.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${f});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${g});
      ${f} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Dd(i,h)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:p}},Nd=(t,e)=>{let r=t.inputs,n=r[0].dims,a=X.normalizeAxis(e.axis,n.length);Rd(r,a);let s=n.slice();s[a]=r.reduce((o,l)=>o+(l.dims.length>a?l.dims[a]:0),0);let i=r.filter(o=>X.size(o.dims)>0);t.compute(wi(i,a,s,r[0].dataType),{inputs:i})},Fd=t=>Ke({axis:t.axis})}),Ud,Wd,Vd,Gd,bi,Hd,jd,qd=te(()=>{xe(),Hs(),Ie(),Ld(),Ud=(t,e)=>{let r=t[0],n=t[1],a=t[2],s=t[3],i=t[4],o=t[5];if(i&&o)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=r.dims[0],u=r.dims[1],d=r.dims[2];if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let h=a.dims[0]/3,f=h,g=f;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of e.qkvHiddenSizes)if(E%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");h=e.qkvHiddenSizes[0],f=e.qkvHiddenSizes[1],g=e.qkvHiddenSizes[2]}let p=u;if(h!==f)throw new Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==h+f+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(i){if(f!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==f/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(w=i.dims[3])}let v=p+w,S=-1,$=0;if(s)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");return{batchSize:l,sequenceLength:u,pastSequenceLength:w,kvSequenceLength:p,totalSequenceLength:v,maxSequenceLength:S,inputHiddenSize:d,hiddenSize:h,vHiddenSize:g,headSize:Math.floor(h/e.numHeads),vHeadSize:Math.floor(g/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:$,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Wd=(t,e,r,n)=>{let a=st(n),s=64,i=n/a;i<s?s=1:i/8<64&&(s=Math.ceil(i/8));let o=Math.ceil(n/a/s),l=[{type:e.dataType,data:1/n},{type:12,data:i},{type:12,data:o}],u=yt(e.dataType,a),d=Ot(1,a),h=f=>{let g=_e("x",e.dataType,e.dims,a),p=[{name:"d_inv",type:Ot(e.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${s}>;
  var<workgroup> thread_sum: array<f32, ${s}>;
  ${f.registerUniforms(p).declareVariables(g)}
  ${f.mainStart([s,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = workgroup_id.x * uniforms.d_comp + local_offset;

    var thread_max_vector = ${d}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(a){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${s}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${d}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${d}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(a){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${s}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${g.type.value}(uniforms.d_inv);
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${d}(x[offset + i]);
        x[offset + i] = ${g.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${u};${a}`},getShaderSource:h,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:l})}},Vd=(t,e,r,n,a,s,i)=>{let o=i+a.kvSequenceLength,l=[a.batchSize,a.numHeads,a.sequenceLength,o],u=s.scale===0?1/Math.sqrt(a.headSize):s.scale,d=st(a.headSize),h=a.headSize/d,f=12,g={x:Math.ceil(o/f),y:Math.ceil(a.sequenceLength/f),z:a.batchSize*a.numHeads},p=[{type:12,data:a.sequenceLength},{type:12,data:h},{type:12,data:o},{type:12,data:a.numHeads},{type:1,data:u}],w=n?["type","type","type"]:["type","type"],v=S=>{let $=Z("q",e.dataType,e.dims,d),E=Z("key",r.dataType,r.dims,d),T=[$,E];n&&T.push(Z("relative_position_bias",n.dataType,n.dims));let A=_e("output",e.dataType,l),z=Ot(1,d),R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`
  const TILE_SIZE = ${f}u;

  var<workgroup> tileQ: array<${$.type.storage}, ${f*f}>;
  var<workgroup> tileK: array<${$.type.storage}, ${f*f}>;
  ${S.registerUniforms(R).declareVariables(...T,A)}
  ${S.mainStart([f,f,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;

    var value = ${z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${z}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};
        output[outputIdx] = ${A.type.value} (sum * uniforms.alpha) + ${n?"relative_position_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:l,dataType:e.dataType,gpuDataType:0}],dispatchGroup:g,programUniforms:p}),getShaderSource:v}},Gd=(t,e,r,n,a)=>{let s=a+n.kvSequenceLength,i=[n.batchSize,n.sequenceLength,n.vHiddenSize],o=12,l={x:Math.ceil(n.vHeadSize/o),y:Math.ceil(n.sequenceLength/o),z:n.batchSize*n.numHeads},u=[{type:12,data:n.sequenceLength},{type:12,data:s},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType,gpuDataType:0}],dispatchGroup:l,programUniforms:u}),getShaderSource:d=>{let h=Z("probs",e.dataType,e.dims),f=Z("v",r.dataType,r.dims),g=_e("output",e.dataType,i),p=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileQ: array<${h.type.value}, ${o*o}>;
  var<workgroup> tileK: array<${h.type.value}, ${o*o}>;
  ${d.registerUniforms(p).declareVariables(h,f,g)}
  ${d.mainStart([o,o,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${h.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},bi=(t,e,r,n,a,s,i,o,l,u,d)=>{let h=t.outputCount>1,f=t.outputCount>2,g=h&&f?u.pastSequenceLength:0,p=g+u.kvSequenceLength,w=[u.batchSize,u.numHeads,p,u.headSize],v=i?[i,r]:[r],S=h?t.compute(wi(v,2,w,r.dataType),{inputs:v,outputs:[1]})[0]:r,$=[u.batchSize,u.numHeads,p,u.headSize],E=o?[o,n]:[n],T=f?t.compute(wi(E,2,$,n.dataType),{inputs:E,outputs:[2]})[0]:n,A=[e,S];l&&A.push(l);let z=t.compute(Vd(t,e,S,l,u,d,g),{inputs:A,outputs:[-1]})[0];t.compute(Wd(t,z,u.batchSize*u.numHeads*u.sequenceLength,p),{inputs:[z],outputs:[]});let R=[z,T];t.compute(Gd(t,z,T,u,g),{inputs:R,outputs:[0]})},Hd=(t,e)=>{let r=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],n=e.sequenceLength,a=e.inputHiddenSize,s=e.headSize,i=12,o={x:Math.ceil(e.headSize/i),y:Math.ceil(e.sequenceLength/i),z:e.batchSize*e.numHeads},l=[t.inputs[0],t.inputs[1],t.inputs[2]],u=[{type:12,data:n},{type:12,data:a},{type:12,data:s},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=h=>{let f=_e("output_q",l[0].dataType,r),g=_e("output_k",l[0].dataType,r),p=_e("output_v",l[0].dataType,r),w=Z("input",l[0].dataType,l[0].dims),v=Z("weight",l[1].dataType,l[1].dims),S=Z("bias",l[2].dataType,l[2].dims),$=w.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${$}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${$}, ${i*i}>;
  var<workgroup> tileWeightK: array<${$}, ${i*i}>;
  var<workgroup> tileWeightV: array<${$}, ${i*i}>;
  ${h.registerUniforms(E).declareVariables(w,v,S,f,g,p)}
  ${h.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${$}(0);
    var valueK = ${$}(0);
    var valueV = ${$}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return t.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:d},{inputs:l,outputs:[-1,-1,-1]})},jd=(t,e)=>{let r=Ud(t.inputs,e),[n,a,s]=Hd(t,r);return bi(t,n,a,s,t.inputs[4],void 0,void 0,void 0,t.inputs[5],r,e)}}),Kd,Yd,Xd,Qd,Ny=te(()=>{rr(),xe(),Oe(),ct(),Ie(),Kd=(t,e)=>{if(!t||t.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,a,s)=>{let i=a.length;if(i!==n.length)throw new Error(`${s}: num dimensions != ${i}`);a.forEach((o,l)=>{if(o!==n[l])throw new Error(`${s}: dim[${l}] do not match`)})};if(t[0].dims.length>1){let n=e.format==="NHWC"?e.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,e.spatial?2:void 0);r(t[1].dims,n,"Invalid input scale"),r(t[2].dims,n,"Invalid input B"),r(t[3].dims,n,"Invalid input mean"),r(t[4].dims,n,"Invalid input var")}else r(t[1].dims,[1],"Invalid input scale"),r(t[2].dims,[1],"Invalid input B"),r(t[3].dims,[1],"Invalid input mean"),r(t[4].dims,[1],"Invalid input var")},Yd=(t,e)=>{let{epsilon:r,spatial:n,format:a}=e,s=t[0].dims,i=n?st(s[s.length-1]):1,o=a==="NHWC"&&s.length>1?i:1,l=X.size(s)/i,u=n,d=u?s.length:s,h=Z("x",t[0].dataType,t[0].dims,i),f=Z("scale",t[1].dataType,t[1].dims,o),g=Z("bias",t[2].dataType,t[2].dims,o),p=Z("inputMean",t[3].dataType,t[3].dims,o),w=Z("inputVar",t[4].dataType,t[4].dims,o),v=_e("y",t[0].dataType,d,i),S=()=>{let E="";if(n)E=`let cOffset = ${s.length===1?"0u":a==="NHWC"?`outputIndices[${s.length-1}] / ${i}`:"outputIndices[1]"};`;else if(a==="NCHW")E=`
            ${v.indicesSet("outputIndices","0","0")}
            let cOffset = ${v.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${f.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let T=1;T<f.rank;T++)E+=`cIndices[${T}] = outputIndices[${T}];`;E+=`let cOffset = ${f.indicesToOffset("cIndices")};`}return E},$=E=>`
  const epsilon = ${r};
  ${E.registerUniform("outputSize","u32").declareVariables(h,f,g,p,w,v)}
  ${E.mainStart()}
  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${v.offsetToIndices(`global_idx * ${i}`)};
    ${S()}
    let scale = ${f.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${p.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${h.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${v.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${n}_${i}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:$,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...we(s)]:[{type:12,data:l}]})}},Xd=t=>Ke(t),Qd=(t,e)=>{let{inputs:r,outputCount:n}=t,a=Xd({...e,outputCount:n});if(Ue.webgpu.validateInputContent&&Kd(r,a),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");t.compute(Yd(r,a))}}),Zd,Jd,ec,Fy=te(()=>{Oe(),Ie(),Zd=t=>{if(t[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(t[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Jd=t=>{let e=t[0].dims,r=t[0].dims[2],n=X.size(e)/4,a=t[0].dataType,s=Z("input",a,e,4),i=Z("bias",a,[r],4),o=Z("residual",a,e,4),l=_e("output",a,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:u=>`
  const channels = ${r}u / 4;
  ${u.declareVariables(s,i,o,l)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${s.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},ec=t=>{Zd(t.inputs),t.compute(Jd(t.inputs))}}),tc,De,rc,nc,ac,ic,sc,oc,lc,uc,dc,cc,pc,hc,fc,mc,vi,gc,$i,_c,yc,wc,bc,vc,$c,xc,Sc,kc,Ec,Cc,Tc,Ac,Ic,Mc,Oc,no,zc,ao,io,Pc,Rc,Bc,so=te(()=>{xe(),Oe(),ct(),Ie(),tc=(t,e,r,n,a,s)=>{let i=Math.ceil(e/4),o="";typeof a=="string"?o=`${a}(a)`:o=a("a");let l=Z("inputData",r,[i],4),u=_e("outputData",n,[i],4);return`
      ${t.registerUniform("vec_size","u32").declareVariables(l,u)}

  ${s??""}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${l.getByOffset("global_idx")};
    ${u.setByOffset("global_idx",o)}
  }`},De=(t,e,r,n,a,s=t.dataType)=>({name:e,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:i=>tc(i,X.size(t.dims),t.dataType,s,r,n),getRunData:i=>({outputs:[{dims:t.dims,dataType:s}],dispatchGroup:{x:Math.ceil(X.size(i[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(t.dims)/4)}]})}),rc=t=>{t.compute(De(t.inputs[0],"Abs","abs"))},nc=t=>{t.compute(De(t.inputs[0],"Acos","acos"))},ac=t=>{t.compute(De(t.inputs[0],"Acosh","acosh"))},ic=t=>{t.compute(De(t.inputs[0],"Asin","asin"))},sc=t=>{t.compute(De(t.inputs[0],"Asinh","asinh"))},oc=t=>{t.compute(De(t.inputs[0],"Atan","atan"))},lc=t=>{t.compute(De(t.inputs[0],"Atanh","atanh"))},uc=t=>Ke(t),dc=(t,e)=>{let r;switch(e.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}t.compute(De(t.inputs[0],"Cast",r,void 0,e.cacheKey,e.to))},cc=t=>{let e=t.length>=2&&t[1].data!==0?t[1].getFloat32Array()[0]:Ys,r=t.length>=3&&t[2].data!==0?t[2].getFloat32Array()[0]:Xs;return Ke({min:e,max:r})},pc=(t,e)=>{let r=t.inputs.length===1?e:cc(t.inputs),n=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Clip",a=>`clamp(${a}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${n}> = vec4(${n}(${r.min}));
    const clip_max_: vec4<${n}> = vec4(${n}(${r.max}));
`,r.cacheKey),{inputs:[0]})},hc=t=>{t.compute(De(t.inputs[0],"Ceil","ceil"))},fc=t=>{t.compute(De(t.inputs[0],"Cos","cos"))},mc=t=>{t.compute(De(t.inputs[0],"Cosh","cosh"))},vi=t=>Ke(t),gc=(t,e)=>{let r=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${e.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},$i=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,_c=t=>{let e=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Erf",r=>`erf_vf32(${r})`,$i(e)))},yc=t=>{t.compute(De(t.inputs[0],"Exp","exp"))},wc=t=>{t.compute(De(t.inputs[0],"Floor","floor"))},bc=t=>{let e=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,$i(e)))},vc=(t,e)=>{let r=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${e.alpha});`,e.cacheKey))},$c=t=>{t.compute(De(t.inputs[0],"Not",e=>`!${e}`))},xc=t=>{t.compute(De(t.inputs[0],"Neg",e=>`-${e}`))},Sc=t=>{t.compute(De(t.inputs[0],"Reciprocal",e=>`1.0/${e}`))},kc=t=>{let e=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Relu",r=>`select(vec4<${e}>(0.0), ${r}, ${r} > vec4<${e}>(0.0))`))},Ec=t=>{t.compute(De(t.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Cc=t=>Ke(t),Tc=(t,e)=>{let r=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${e.alpha} * ${n} + vec4<${r}>(${e.beta})))`,void 0,e.cacheKey))},Ac=t=>{t.compute(De(t.inputs[0],"Sin","sin"))},Ic=t=>{t.compute(De(t.inputs[0],"Sinh","sinh"))},Mc=t=>{t.compute(De(t.inputs[0],"Sqrt","sqrt"))},Oc=t=>{t.compute(De(t.inputs[0],"Tan","tan"))},no=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,zc=t=>{t.compute(De(t.inputs[0],"Tanh",no))},ao=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${no("v")};
}
`,io=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,Pc=t=>{let e=Ot(t.inputs[0].dataType);t.compute(De(t.inputs[0],"FastGelu",io,ao(e),void 0,t.inputs[0].dataType))},Rc=(t,e)=>{let r=Ot(t.inputs[0].dataType);return t.compute(De(t.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${e.alpha});`,e.cacheKey)),0},Bc=t=>{t.compute(De(t.inputs[0],"Log","log"))}}),Dc,Nc,Fc,Ly=te(()=>{Oe(),Ie(),so(),Dc=t=>{if(t[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(t[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Nc=t=>{let e=t[0].dims.slice();e[2]=e[2]/2;let r=Z("input",t[0].dataType,t[0].dims,4),n=Z("bias",t[0].dataType,[t[0].dims[2]],4),a=_e("output",t[0].dataType,e,4),s=X.size(e)/4,i=yt(t[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:o=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${t[0].dims[2]/4/2}u;

  ${o.declareVariables(r,n,a)}

  ${$i(i)}

  ${o.mainStart()}
    ${o.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${a.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Fc=t=>{Dc(t.inputs),t.compute(Nc(t.inputs))}}),Lc,Uc,or,Wc,Vc,Gc,Hc,jc,qc,Kc,Yc,Xc,Qc,Uy=te(()=>{xe(),Oe(),Ie(),Lc=(t,e,r,n,a,s,i,o,l,u,d,h)=>{let f,g;typeof o=="string"?f=g=($,E)=>`${o}((${$}),(${E}))`:typeof o=="function"?f=g=o:(f=o.scalar,g=o.vector);let p=_e("outputData",d,n.length,4),w=Z("aData",l,e.length,4),v=Z("bData",u,r.length,4),S;if(a)if(s){let $=X.size(e)===1,E=X.size(r)===1,T=e.length>0&&e[e.length-1]%4===0,A=r.length>0&&r[r.length-1]%4===0;$||E?S=p.setByOffset("global_idx",g($?`${w.type.value}(${w.getByOffset("0")}.x)`:w.getByOffset("global_idx"),E?`${v.type.value}(${v.getByOffset("0")}.x)`:v.getByOffset("global_idx"))):S=`
            let outputIndices = ${p.offsetToIndices("global_idx * 4u")};
            let offsetA = ${w.broadcastedIndicesToOffset("outputIndices",p)};
            let offsetB = ${v.broadcastedIndicesToOffset("outputIndices",p)};
            ${p.setByOffset("global_idx",g(i||T?w.getByOffset("offsetA / 4u"):`${w.type.value}(${w.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||A?v.getByOffset("offsetB / 4u"):`${v.type.value}(${v.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else S=p.setByOffset("global_idx",g(w.getByOffset("global_idx"),v.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let $=(E,T,A="")=>{let z=`aData[indexA${T}][componentA${T}]`,R=`bData[indexB${T}][componentB${T}]`;return`
            let outputIndices${T} = ${p.offsetToIndices(`global_idx * 4u + ${T}u`)};
            let offsetA${T} = ${w.broadcastedIndicesToOffset(`outputIndices${T}`,p)};
            let offsetB${T} = ${v.broadcastedIndicesToOffset(`outputIndices${T}`,p)};
            let indexA${T} = offsetA${T} / 4u;
            let indexB${T} = offsetB${T} / 4u;
            let componentA${T} = offsetA${T} % 4u;
            let componentB${T} = offsetB${T} % 4u;
            ${E}[${T}] = ${A}(${f(z,R)});
          `};d===9?S=`
            var data = vec4<u32>(0);
            ${$("data",0,"u32")}
            ${$("data",1,"u32")}
            ${$("data",2,"u32")}
            ${$("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:S=`
            ${$("outputData[global_idx]",0)}
            ${$("outputData[global_idx]",1)}
            ${$("outputData[global_idx]",2)}
            ${$("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(w,v,p)}

        ${h??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${S}
      }`},Uc=(t,e,r,n,a,s,i=r.dataType)=>{let o=!X.areEqual(r.dims,n.dims),l=r.dims,u=X.size(r.dims),d=!1,h=!1,f=[o];if(o){let g=xn.calcShape(r.dims,n.dims,!1);if(!g)throw new Error("Can't perform binary op on the given tensors");l=g,u=X.size(l);let p=X.size(r.dims)===1,w=X.size(n.dims)===1,v=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,S=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;f.push(p),f.push(w),f.push(v),f.push(S);let $=1;for(let E=1;E<l.length;E++){let T=r.dims[r.dims.length-E]??1,A=n.dims[n.dims.length-E]??1;if(T===A)$*=T;else break}$%4===0?(h=!0,d=!0):(p||w||v||S)&&(d=!0)}else d=!0;return f.push(d),{name:t,shaderCache:{hint:e+f.map(g=>g.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:g=>Lc(g,r.dims,n.dims,l,d,o,h,a,r.dataType,n.dataType,i,s),getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(l)/4)},...we(r.dims,n.dims,l)]})}},or=(t,e,r,n,a,s)=>{t.compute(Uc(e,a??"",t.inputs[0],t.inputs[1],r,n,s))},Wc=t=>{or(t,"Add",(e,r)=>`${e}+${r}`)},Vc=t=>{or(t,"Div",(e,r)=>`${e}/${r}`)},Gc=t=>{or(t,"Equal",{scalar:(e,r)=>`u32(${e}==${r})`,vector:(e,r)=>`vec4<u32>(${e}==${r})`},void 0,void 0,9)},Hc=t=>{or(t,"Mul",(e,r)=>`${e}*${r}`)},jc=t=>{let e=Z("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;or(t,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},qc=t=>{or(t,"Sub",(e,r)=>`${e}-${r}`)},Kc=t=>{or(t,"Greater",{scalar:(e,r)=>`u32(${e}>${r})`,vector:(e,r)=>`vec4<u32>(${e}>${r})`},void 0,void 0,9)},Yc=t=>{or(t,"Less",{scalar:(e,r)=>`u32(${e}<${r})`,vector:(e,r)=>`vec4<u32>(${e}<${r})`},void 0,void 0,9)},Xc=t=>{or(t,"GreaterOrEqual",{scalar:(e,r)=>`u32(${e}>=${r})`,vector:(e,r)=>`vec4<u32>(${e}>=${r})`},void 0,void 0,9)},Qc=t=>{or(t,"LessOrEqual",{scalar:(e,r)=>`u32(${e}<=${r})`,vector:(e,r)=>`vec4<u32>(${e}<=${r})`},void 0,void 0,9)}}),Zr,Jr,en,oo,tn=te(()=>{xe(),Oe(),Zr=(t,e,r="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${r}(uniforms.clip_min)), ${e}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${t.activation}`)}},Jr=(t,e)=>{t.activation==="Clip"?e.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):t.activation==="HardSigmoid"?e.push({type:1,data:t.alpha},{type:1,data:t.beta}):t.activation==="LeakyRelu"&&e.push({type:1,data:t.alpha})},en=(t,e)=>{t.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):t.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):t.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},oo=t=>{let e=(t==null?void 0:t.activation)||"";if(e==="HardSigmoid"){let[r,n]=(t==null?void 0:t.activation_params)||[.2,.5];return{activation:e,alpha:r,beta:n}}else if(e==="Clip"){let[r,n]=(t==null?void 0:t.activation_params)||[Ys,Xs];return{activation:e,clipMax:n,clipMin:r}}else if(e==="LeakyRelu"){let[r]=(t==null?void 0:t.activation_params)||[.01];return{activation:e,alpha:r}}return{activation:e}}}),Ct,lo,uo=te(()=>{Ct=(t,e)=>{switch(t){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component is not supported.`)}},lo=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),co,Zc=te(()=>{co=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),Jc,ep,xi,po,tp,Si,rp,ho,ki=te(()=>{xe(),Oe(),Ie(),tn(),uo(),Jc=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,ep=(t,e)=>t?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,xi=(t,e,r="f32",n,a=!1,s=32,i=!1,o=32)=>{let l=e[1]*t[1],u=e[0]*t[0],d=a?l:s,h=a?s:l,f=d/e[0],g=s/e[1];if(!((a&&f===4&&t[1]===4||!a&&(f===3||f===4))&&d%e[0]===0&&s%e[1]===0&&t[0]===4))throw new Error(`If transposeA ${a} is true, innerElementSize ${f} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${f} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${f}<${r}>, ${d/f}>, ${h}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${u/t[0]}>, ${s}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${f};
const tileInner = ${s};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(o/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Jc(a,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${f===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${ep(a,f)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},po=(t,e)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,tp=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Si=(t,e,r="f32",n,a=!1,s=32,i=!1,o=32,l=!1)=>{let u=t[1]*e[1],d=t[0]*e[0],h=a?u:s,f=a?s:u;if(!(f%e[1]===0&&h%e[0]===0&&s%e[1]===0))throw new Error(`tileAHight ${f} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${h} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);let g=f/e[1],p=h/e[0],w=s/e[1],v=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${u};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${e[0]}) {
          ${po(a,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${u};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${p};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${p}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${po(a,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${tp(a)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${h}>, ${f}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${s}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${s};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(o/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${v}
  }
`},rp=(t,e,r,n,a,s=!1)=>{let[i,o,l]=a,[u,d,h,f]=n,g=aa(i,l),p=aa(o,l),w=yt(n[0].type.tensor),v=()=>{let $=d.rank,E=u.rank,T=`var aIndices: ${d.type.indices};`;for(let A=$-2-1,z=E-1;A>=0;A--,z--)T+=`
aIndices[${A}] = ${E>1?`batchIndices[${z}]`:"batchIndices"};`;return g.forEach(A=>{T+=`
aIndices[${A}] = 0;`}),T+=`
aIndices[${$-2}] = u32(row);
                   aIndices[${$-1}] = u32(colIn);`,T},S=()=>{let $=h.rank,E=u.rank,T=`var bIndices: ${h.type.indices};`;for(let A=$-2-1,z=E-1;A>=0;A--,z--)T+=`
bIndices[${A}] = ${E>1?`batchIndices[${z}]`:"batchIndices"};`;return p.forEach(A=>{T+=`
bIndices[${A}] = 0;`}),T+=`
bIndices[${$-2}] = u32(row);
                   bIndices[${$-1}] = u32(colIn);`,T};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${Ct(t,w)} {
      var value = ${Ct(t,w)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${v()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${Ct(t,w)} {
      var value = ${Ct(t,w)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${S()}
        value = ${h.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ct(t,w)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${s?"bias[colIn]":`${Ct(t,w)}(bias[row])`};`:""}
        ${r}
        ${f.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ho=(t,e,r,n,a=!1)=>{let s=t[0].dims,i=t[1].dims,o=s.slice(0,-2),l=i.slice(0,-2),u=n?n.slice(0,-2):r.slice(0,-2),d=X.size(u),h=s[s.length-2],f=s[s.length-1],g=i[i.length-1],p=f%4===0&&g%4===0,w=h<=8?[4,1,1]:[4,4,1],v=[8,8,1],S=[Math.ceil(g/v[0]/w[0]),Math.ceil(h/v[1]/w[1]),Math.ceil(d/v[2]/w[2])],$=p?4:1,E=[...o,h,f/$],T=E.length,A=[...l,f,g/$],z=A.length,R=[d,h,g/$],G=[{type:6,data:h},{type:6,data:g},{type:6,data:f}];Jr(e,G),G.push(...we(u,E,A));let j=["rank","rank"],q=t.length>2;q&&(G.push(...we(t[2].dims)),j.push("rank")),G.push(...we(R));let ue=re=>{let ee=u.length,le=Qs("batchDims",t[0].dataType,ee,1),N=yt(t[0].dataType),O=Z("a",t[0].dataType,T,$),V=Z("b",t[1].dataType,z,$),K=_e("result",t[0].dataType,R.length,$),de=[O,V];if(q){let Se=a?$:1;de.push(Z("bias",t[2].dataType,t[2].dims.length,Se))}let ae=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];en(e,ae);let D=yt(K.type.tensor),ie=Zr(e,K.type.value,D),he=rp($,q,ie,[le,O,V,K],[o,l,u],a);return`
  ${re.registerUniforms(ae).registerInternalVariables(le).declareVariables(...de,K)}
  ${he}
  ${p?xi(w,v,N,le):Si(w,v,N,le)}
                   `};return{name:"MatMul",shaderCache:{hint:`${w};${e.activation};${p};${a}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:S[0],y:S[1],z:S[2]},programUniforms:G}),getShaderSource:ue}}}),np,ap,Wy=te(()=>{xe(),Qr(),Ie(),tn(),uo(),Zc(),ki(),np=(t,e,r,n,a=!1,s,i=4,o=4,l=4,u="f32")=>{let d=j=>{switch(j){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${j} is not supported.`)}},h=j=>{switch(j){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${j} is not supported.`)}},f=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",v=t?"row":"col",S=t?"col":"row",$=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${v} / outWidth;
    let outCol = ${v} % outWidth;

    let WRow = ${S} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${S} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${S} % inChannels;
    var resData = ${Ct(i,u)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${w}) {
      ${f}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(i)}
    }
    return resData;`,E=t?e&&n?`
    let col = colIn * ${i};
    ${$}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${$}
    }
    return ${Ct(i,u)}(0.0);`:n&&r?`
    let col = colIn * ${i};
    ${$}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${$}
    }
    return ${Ct(i,u)}(0.0);`,T=`${h(o)}`,A=Ct(l,u),z=Ct(t?i:o,u),R=Ct(t?o:i,u),G=Zr(s,A,u);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {
      ${t?E:T}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${R} {
      ${t?T:E}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${A}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${lo(a)}
      ${G}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ap=(t,e,r,n,a,s,i,o)=>{let l=e.format==="NHWC",u=l?t[0].dims[3]:t[0].dims[1],d=r[0],h=l?r[2]:r[3],f=l?r[1]:r[2],g=l?r[3]:r[1],p=l&&(u%4===0||u%3===0)&&g%4===0,w=l?g:h*f,v=l?h*f:g,S=[8,8,1],$=n<=8?[4,1,1]:[4,4,1],E=[Math.ceil(w/S[0]/$[0]),Math.ceil(v/S[1]/$[1]),Math.ceil(d/S[2]/$[2])];nt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let T=p?l&&u%4!==0?3:4:1,A=S[1]*$[1],z=S[0]*$[0],R=Math.max(S[0]*T,S[1]),G=n%A===0,j=a%z===0,q=s%R===0,ue=p?[T,4,4]:[1,1,1],re=[{type:6,data:n},{type:6,data:a},{type:6,data:s},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];Jr(e,re),re.push(...we(t[0].dims,t[1].dims));let ee=["rank","rank"];i&&(re.push(...we(t[2].dims)),ee.push("rank")),re.push(...we(r));let le=N=>{let O=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];en(e,O);let V=p?4:1,K=yt(t[0].dataType),de=`
      fn setOutputAtIndex(flatIndex : i32, value : ${p?`vec4<${K}>`:K}) {
        result[flatIndex] = ${p?`vec4<${K}>`:K}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${p?`vec4<${K}>`:K}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${p?"/ 4":""}, value);
      }`,ae=Z("x",t[0].dataType,t[0].dims.length,T===3?1:T),D=Z("w",t[1].dataType,t[1].dims.length,V),ie=[ae,D],he=_e("result",t[0].dataType,r.length,V);if(i){let Se=Z("bias",t[2].dataType,t[2].dims.length,V);ie.push(Se),de+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${p?`vec4<${K}>`:K} {
          return bias[coords.${l?"w":"y"}${p?"/ 4":""}];
        }`}return`
        ${co("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${N.registerUniforms(O).declareVariables(...ie,he)}
        ${de}
        ${np(l,G,j,q,i,e,ue[0],ue[1],ue[2],K)}
        ${p?xi($,S,K,void 0,!l,R):Si($,S,K,void 0,!l,R,!1,void 0,o)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${T};${p};${G};${j};${q};${A};${z};${R}`,inputDependencies:ee},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:re}),getShaderSource:le}}}),fo,ip,Vy=te(()=>{xe(),Oe(),Ie(),pp(),tn(),fo=(t,e,r)=>{let n=t.length>2,a=n?"value += b[output_channel];":"",s=t[0].dims,i=t[1].dims,o=i[0]/e.group,l=e.format==="NHWC",u=Ei(s,i,e.dilations,e.pads,e.strides,l),d=X.size(u),h=[{type:12,data:d},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:o}];Jr(e,h),h.push(...we(s,i));let f=["rank","rank"];n&&(h.push(...we(t[2].dims)),f.push("rank")),h.push(...we(u));let g=p=>{let w=_e("output",t[0].dataType,u.length),v=yt(w.type.tensor),S=Zr(e,w.type.value,v),$=Z("x",t[0].dataType,s.length),E=Z("w",t[1].dataType,i.length),T=[$,E];n&&T.push(Z("b",t[2].dataType,t[2].dims.length));let A=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return en(e,A),`
  ${p.registerUniforms(A).declareVariables(...T,w)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${w.type.value} = ${w.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${l?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${l?2:3}]) {
            continue;
          }

          let xVal = ${l?$.get("batch","xHeight","xWidth","input_channel"):$.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${a}
    ${S}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:f},getRunData:()=>({outputs:[{dims:r?r(u):u,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}),getShaderSource:g}},ip=(t,e,r)=>{let n=t.length>2,a=st(r[3]),s=st(r[2]),i=X.size(r)/a/s,o=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/a],l=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/a],u=[r[0],r[1],r[2],r[3]/a],d=[{type:12,data:i},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];Jr(e,d),d.push(...we(o,l,u));let h=(s-1)*e.strides[1]+l[1],f=g=>{let p=_e("output",t[0].dataType,u.length,a),w=yt(p.type.tensor),v=Zr(e,p.type.value,w),S=Z("x",t[0].dataType,o.length,a),$=Z("w",t[1].dataType,l.length,a),E=[S,$];n&&E.push(Z("b",t[2].dataType,t[2].dims,a));let T=n?"value += b[output_channel];":"",A=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return en(e,A),`
  ${g.registerUniforms(A).declareVariables(...E,p)}
  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${s}u;
    let col = (index1 % width1) * ${s}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${S.type.value}, ${h}>;
    var values: array<${p.type.value}, ${s}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${l[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${S.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${S.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${l[1]}; w_width++) {
          let w_val = ${$.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${s}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${s}u; i++) {
      var value = values[i];
      ${T}
      ${v}
      ${p.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${a};${s};${h};${l[0]};${l[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:f}}}),mo,sp,op,lp=te(()=>{xe(),Oe(),ki(),Ie(),tn(),mo=(t,e,r,n,a=!1)=>{let s=t[0].dims,i=t[1].dims,o=s[s.length-2],l=i[i.length-1],u=s[s.length-1],d=st(l),h=st(u),f=st(o),g=X.size(r)/d/f,p=t.length>2,w=n?n.slice(0,-2):r.slice(0,-2),v=[X.size(w),o,l],S=[{type:12,data:g},{type:12,data:o},{type:12,data:l},{type:12,data:u}];Jr(e,S),S.push(...we(w,s,i)),p&&S.push(...we(t[2].dims)),S.push(...we(v));let $=E=>{let T=Qs("batch_dims",t[0].dataType,w.length),A=Z("a",t[0].dataType,s.length,h),z=Z("b",t[1].dataType,i.length,d),R=_e("output",t[0].dataType,v.length,d),G=yt(R.type.tensor),j=Zr(e,R.type.value,G),q=[A,z],ue="";if(p){let de=a?d:1;q.push(Z("bias",t[2].dataType,t[2].dims.length,de)),ue=`${a?`value += bias[col / ${de}];`:`value += ${R.type.value}(bias[row + i]);`}`}let re=s.slice(0,-2),ee=i.slice(0,-2),le=aa(re,w),N=aa(ee,w),O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];en(e,O);let V=(de,ae)=>{let D=de.rank,ie=de.name;if(D===2)return`var ${ie}_indices = ${de.type.indices}(0u, 0u);`;let he=T.rank,Se=`var ${ie}_indices: ${de.type.indices};`;for(let Te=D-2-1,Xe=he-1;Te>=0;Te--,Xe--)Se+=`
${ie}_indices[${Te}] = ${he>1?`batch_indices[${Xe}]`:"batch_indices"};`;return ae.forEach(Te=>{Se+=`
${ie}_indices[${Te}] = 0;`}),Se+=`${ie}_indices[${D-2}] = 0u;
                     ${ie}_indices[${D-1}] = 0u;`,Se},K=()=>{let de=`var a_data: ${A.type.value};`;for(let ae=0;ae<h;ae++)de+=`
              let b_data${ae} = b[(b_offset + (k + ${ae}) * uniforms.N + col) / ${d}];`;for(let ae=0;ae<f;ae++){de+=`a_data = a[(a_offset + (row + ${ae}) * uniforms.K + k) / ${h}];`;for(let D=0;D<h;D++)de+=`
            values[${ae}] = fma(${z.type.value}(a_data${h===1?"":`[${D}]`}), b_data${D}, values[${ae}]);
`}return de};return`
  ${E.registerUniforms(O).registerInternalVariables(T).declareVariables(...q,R)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${f};
    let row = (index1 % stride1) * ${f};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${T.offsetToIndices("batch")};`}
    ${V(A,le)}
    let a_offset = ${A.indicesToOffset("a_indices")};
    ${V(z,N)}
    let b_offset = ${z.indicesToOffset("b_indices")};
    var values: array<${R.type.value}, ${f}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${K()}
    }
    for (var i = 0u; i < ${f}u; i++) {
      var value = values[i];
      ${ue}
      ${j}
      let cur_indices = ${R.type.indices}(batch, row + i, col);
      let offset = ${R.indicesToOffset("cur_indices")};
      ${R.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${h};${f};${a}`,inputDependencies:p?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:S}),getShaderSource:$}},sp=t=>{if(!t||t.length!==2)throw new Error("MatMul requires 2 inputs.");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw new Error("shared dimension does not match.")},op=t=>{sp(t.inputs);let e=xn.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let r=e[e.length-1],n=t.inputs[0].dims[t.inputs[0].dims.length-1];r<8&&n<8?t.compute(mo(t.inputs,{activation:""},e)):t.compute(ho(t.inputs,{activation:""},e))}}),Ei,Ci,up,go,_o,dp,cp,yo,pp=te(()=>{Oe(),Wy(),ki(),Vy(),tn(),lp(),ia(),Ei=(t,e,r,n,a,s)=>{let i=t[0],o=t.slice(s?1:2,s?3:4),l=o.length,u=e[0],d=e.slice(2).map((f,g)=>f+(f-1)*(r[g]-1)),h=o.map((f,g)=>f+n[g]+n[g+l]).map((f,g)=>Math.floor((f-d[g]+a[g])/a[g]));return h.splice(0,0,i),h.splice(s?3:1,0,u),h},Ci=[2,3,1,0],up=(t,e)=>{if(!t||t.length!==2&&t.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(t[0].dims.length!==t[1].dims.length)throw new Error("filter does not have same dimension as input");let r=t[0].dims[e.format==="NHWC"?t[0].dims.length-1:1],n=t[1].dims[1]*e.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(t.length===3&&(t[2].dims.length!==1||t[1].dims[0]!==t[2].dims[0]))throw new Error("invalid bias");let a=t[0].dims.length-2;if(e.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(e.strides.length!==a)throw new Error(`strides should be ${a}D`);if(e.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==t[1].dims.length-2)throw new Error("invalid kernel shape")},go=(t,e)=>{let r=t.kernelShape.slice();for(let s=2;s<e[1].dims.length;++s)r[s-2]===0&&(r[s-2]=e[1].dims[s]);let n=t.pads.slice();mi.adjustPadsBasedOnAutoPad(e[0].dims,t.strides,t.dilations,r,n,t.format==="NHWC",t.autoPad);let a=Object.assign({},t);return Object.assign(a,{kernelShape:r,pads:n}),a},_o=t=>{let e=oo(t),r=t.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],a=t.dilations,s=t.group,i=t.kernel_shape,o=t.pads,l=t.strides,u=t.w_is_const();return{autoPad:n,format:r,dilations:a,group:s,kernelShape:i,pads:o,strides:l,wIsConst:u,...e,cacheKey:`${t.format};${e.activation};`}},dp=(t,e,r)=>{let n=go(r,e),a=r.format==="NHWC";if(r.group!==1){if(!t.adapterInfo.isArchitecture("ampere")&&a&&e[1].dims[0]===r.group&&e[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let z=Ei(e[0].dims,e[1].dims,r.dilations,n.pads,r.strides,a),R=t.kernelCustomData.wT??t.compute(Sr(e[1],Ci),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=R);let G=[e[0],R];e.length===3&&G.push(e[2]),t.compute(ip(G,n,z),{inputs:G})}else t.compute(fo(e,n));return}let s=e.length===3,i=e[0].dims[a?1:2],o=e[0].dims[a?2:3],l=e[0].dims[a?3:1],u=e[1].dims[2],d=e[1].dims[3],h=Ei(e[0].dims,e[1].dims,r.dilations,n.pads,r.strides,a),f=h[a?1:2],g=h[a?2:3],p=h[a?3:1],w=a&&u===i&&d===o&&r.pads[0]===0&&r.pads[1]===0;if(w||u===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let z=h[0],R,G,j,q=[];if(a){let ee=t.kernelCustomData.wT??t.compute(Sr(e[1],Ci),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=ee),w){let le=i*o*l;R=e[0].reshape([1,z,le]),G=ee.reshape([1,le,p]),j=[1,z,p]}else R=e[0].reshape([z,i*o,l]),G=ee.reshape([1,l,p]),j=[z,f*g,p];q.push(R),q.push(G)}else R=e[0].reshape([z,l,i*o]),G=e[1].reshape([1,p,l]),j=[z,p,f*g],q.push(G),q.push(R);s&&q.push(e[2]);let ue=j[2],re=q[0].dims[q[0].dims.length-1];ue<8&&re<8?t.compute(mo(q,n,h,j,a),{inputs:q}):t.compute(ho(q,n,h,j,a),{inputs:q});return}let v=!0,S=t.kernelCustomData.wT??t.compute(Sr(e[1],Ci),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=S);let $=[e[0],S];s&&$.push(e[2]);let E=a?f*g:p,T=a?p:f*g,A=u*d*l;t.compute(ap($,n,h,E,T,A,s,v),{inputs:$})},cp=(t,e)=>{let r=e.format==="NHWC",n=[t.inputs[0].reshape(r?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&n.push(t.inputs[2]);let a=[0,e.pads[0],0,e.pads[1]],s=[1].concat(e.strides),i=[1].concat(e.dilations),o=[1].concat(e.kernelShape),l=go({...e,pads:a,strides:s,dilations:i,kernelShape:o},n);t.compute(fo(n,l,u=>r?[u[0],u[2],u[3]]:[]))},yo=(t,e)=>{up(t.inputs,e),t.inputs[0].dims.length===3?cp(t,e):dp(t,t.inputs,e)}}),hp,fp,Gy=te(()=>{xe(),Qr(),Ie(),tn(),uo(),Zc(),ki(),hp=(t,e=!1,r,n,a=4)=>{let s=v=>{switch(v){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${v} is not supported.`)}},i=t?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,o=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,l=t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",u=t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=t?"row":"col",h=t?"col":"row",f=`
      let inChannels = ${t?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${h} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${h} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${l}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${u}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${h} % inChannels;
      ${i}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${a}];`,g=t?`
      let col = colIn * ${a};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${f}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${a};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${f}
      }
      return ${n}(0.0);`,p=`
      let col = colIn * ${a};
      let inChannels = ${t?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${t?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(a)}
      }
      return ${n}(0.0);
      `,w=Zr(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${t?g:p}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${t?p:g}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${o}
      ${lo(e)}
      ${w}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${a}] = value;
    }
  }`},fp=(t,e,r,n,a,s,i,o)=>{let l=e.format==="NHWC",u=l?t[0].dims[3]:t[0].dims[1],d=r[0],h=l?r[2]:r[3],f=l?r[1]:r[2],g=l?r[3]:r[1],p=l&&u%4===0&&u%3&&g%4===0,w=l?g:h*f,v=l?h*f:g,S=[8,8,1],$=n<=8?[4,1,1]:[4,4,1],E=[Math.ceil(w/S[0]/$[0]),Math.ceil(v/S[1]/$[1]),Math.ceil(d/S[2]/$[2])];nt("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let T=p?4:1,A=Math.max(S[0]*T,S[1]),z=p?4:1,R=[e.kernelShape[l?1:2],e.kernelShape[l?2:3]],G=[R[0]+(e.dilations[0]<=1?0:(R[0]-1)*(e.dilations[0]-1)),R[1]+(e.dilations[1]<=1?0:(R[1]-1)*(e.dilations[1]-1))],j=[G[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),G[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],q=[{type:6,data:n},{type:6,data:a},{type:6,data:s},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:R},{type:6,data:j}];Jr(e,q),q.push(...we(t[0].dims,t[1].dims));let ue=["rank","rank"];i&&(q.push(...we(t[2].dims)),ue.push("rank")),q.push(...we(r));let re=ee=>{let le=Z("x",t[0].dataType,t[0].dims.length,z),N=Z("w",t[1].dataType,t[1].dims.length,1),O=_e("result",t[0].dataType,r.length,z),V=[le,N],K="";if(i){let D=Z("bias",t[2].dataType,t[2].dims.length,z);V.push(D),K+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${D.type.value} {
            return bias[coords.${l?"w":"y"}${p?"/ 4":""}];
          }`}let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:R.length},{name:"pads",type:"i32",length:j.length}];en(e,de);let ae=yt(t[0].dataType,1);if(ae!=="f16"&&ae!=="f32")throw new Error(`elemType ${ae} is not supported.`);return`
        ${co("uniforms.result_strides")}
        ${ee.registerUniforms(de).declareVariables(...V,O)};
        ${K}
        ${hp(l,i,e,le.type.value,T)}
        ${p?xi($,S,ae,void 0,!l,A):Si($,S,ae,void 0,!l,A,!1,void 0,o)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${$};${S};${p}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:q}),getShaderSource:re}}}),mp,wo,Hy=te(()=>{xe(),Qr(),Oe(),Ie(),mp=(t,e,r,n,a,s=!1,i,o,l=!1)=>{let u=l?1:2,d=l?2:3,h=l?3:1,f=s?2:1,g=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${i}>`:i}) {
    result[flatIndex] = ${s?`vec4<${i}>`:i}(value);
  }`;n&&(g+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${i}>`:i} {
      return bias[coords.${l?"w":"y"}${s?"/ 4":""}];
    }`);let p=s?4:1,w=Z("W",e[1].dataType,e[1].dims.length,p),v=Z("Dy",e[0].dataType,e[0].dims.length,p),S=[v,w];n&&S.push(Z("bias",e[2].dataType,[r[h]].length,p));let $=_e("result",e[0].dataType,r.length,p),E=`{
        let batch: u32 = ${a?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${a?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${a?"global_id.y":"workgroup_id.y"} * ${f};
        let d1: u32 = ${a?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${i}>, ${f}>;
        for (var i = 0; i < ${f}; i++) {
          dotProd[i] = vec4<${i}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${i}(dyCorner.x) + ${i}(wR)) / ${i}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${i}(dyCorner.y) + ${i}(wC)) / ${i}(uniforms.strides.y);
            let dyC2 = (${i}(dyCorner.y) + 1.0 + ${i}(wC)) / ${i}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${i}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${v.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${v.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${i}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${h}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${v.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${v.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${f}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${i}>(0.0)`};
          ${$.set("batch","r","c + i","d1","value")};
        }
      }`,T=`
          let outputIndices = ${$.offsetToIndices("global_idx")};
          let batch = ${$.indicesGet("outputIndices",0)};
          let d1 = ${$.indicesGet("outputIndices",h)};
          let r = ${$.indicesGet("outputIndices",u)};
          let c = ${$.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${i}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${i}(dyRCorner) + ${i}(wR)) / ${i}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[${u}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${i}(dyCCorner) + ${i}(wC)) / ${i}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${l?v.get("batch","idyR","idyC","inputChannel"):v.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${w.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${i}(0.0)`};
          ${$.setByOffset("global_idx","value")};
        `;return`
  ${t.registerUniforms(o).declareVariables(...S,$)}
  ${g}

    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?E:T}}`},wo=(t,e,r)=>{let n=t.length>2,a=e.outputShape,s=X.size(a),i=[Math.ceil(s/64),1,1];nt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${i}`);let o=e.format==="NHWC",l=["rank","rank"],u=[e.strides[0],e.strides[1]],d=[e.kernelShape[o?1:2],e.kernelShape[o?2:3]],h=[e.dilations[0],e.dilations[1]],f=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[o?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[o?2:3]-1)*(e.dilations[1]-1))],g=[f[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),f[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],p=!1,w=e.group,v=t[1].dims,S=v[0]/w,$=v[1],E=[{type:12,data:s},{type:12,data:u},{type:12,data:d},{type:12,data:h},{type:12,data:f},{type:6,data:g},{type:12,data:S},{type:12,data:$},...we(t[0].dims,t[1].dims)];n&&(E.push(...we(t[2].dims)),l.push("rank")),E.push(...we(a));let T=i[1]===1&&i[2]===1,A=z=>{let R=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:u.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:f.length},{name:"pads",type:"i32",length:g.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],G=yt(t[0].dataType);return`${mp(z,t,a,n,T,p,G,R,o)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:i[0],y:i[1],z:i[2]},outputs:[{dims:r?r(a):a,dataType:t[0].dataType}],programUniforms:E}),getShaderSource:A}}}),gp,_p,yp,bo,wp,bp,vp,$p,xp,Sp,jy=te(()=>{Gy(),Hy(),tn(),ia(),gp=(t,e,r,n,a,s)=>(t-1)*e+r+(n-1)*a+1-s,_p=(t,e,r,n,a)=>{let s=Math.floor(t/2);e==="SAME_UPPER"?(r[n]=s,r[a]=t-s):e==="SAME_LOWER"&&(r[n]=t-s,r[a]=s)},yp=(t,e,r,n,a,s,i,o,l,u)=>{let d=t.length-2,h=u.length===0;if(l.length===0)for(let p=0;p<d;++p)l.push(0);let f=t[0],g=e[o?3:1]*a;for(let p=0,w=t.length-d-(o?1:0);p<d;++p,++w){let v=t[w],S=h?v*i[p]:u[p],$=gp(v,i[p],s[p],e[w],r[p],S);_p($,n,s,p,p+d),h&&u.push(i[p]*(v-1)+l[p]+(e[w]-1)*r[p]+1-s[p]-s[p+d])}u.splice(0,0,f),u.splice(o?3:1,0,g)},bo=(t,e)=>{let r=t.kernelShape.slice();if(t.kernelShape.length===0||t.kernelShape.reduce((h,f)=>h*f,1)===0){r.length=0;for(let h=2;h<e[1].dims.length;++h)r.push(e[1].dims[h])}let n=t.format==="NHWC";r.splice(0,0,e[1].dims[0]),r.splice(n?3:1,0,e[1].dims[1]);let a=t.pads.slice(),s=t.outputShape.slice(),i=t.outputPadding.slice(),o=e[0].dims,l=t.dilations.slice();if(l.reduce((h,f)=>h+f,0)===0){let h=e[0].dims.length-2;l=new Array(h).fill(1)}let u=t.strides.slice();if(u.reduce((h,f)=>h+f,0)===0){let h=e[0].dims.length-2;u=new Array(h).fill(1)}yp(o,r,l,t.autoPad,t.group,a,u,n,i,s);let d=Object.assign({},t);return Object.assign(d,{kernelShape:r,pads:a,outputPadding:i,outputShape:s,dilations:l,strides:u}),d},wp=t=>{let e=oo(t),r=t.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],a=t.dilations,s=t.group,i=t.kernelShape,o=t.pads,l=t.strides,u=t.wIsConst(),d=t.outputPadding,h=t.outputShape;return{autoPad:n,format:r,dilations:a,group:s,kernelShape:i,outputPadding:d,outputShape:h,pads:o,strides:l,wIsConst:u,...e,cacheKey:`${t.format};${e.activation};`}},bp=(t,e)=>{if(!t||t.length!==2&&t.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw new Error("filter does not have same dimension as input");let r=t[0].dims[e.format==="NHWC"?t[0].dims.length-1:1],n=t[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let a=t[1].dims[1]*e.group;if(t.length===3&&(t[2].dims.length!==1||t[2].dims[0]!==a))throw new Error("invalid bias");let s=t[0].dims.length-2;if(e.dilations.reduce((i,o)=>i+o,0)>0&&e.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(e.strides.reduce((i,o)=>i+o,0)>0&&e.strides.length!==s)throw new Error(`strides should be ${s}D`);if(e.pads.reduce((i,o)=>i+o,0)>0&&e.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(e.outputPadding.length!==s&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(e.kernelShape.reduce((i,o)=>i+o,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==t[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==t[0].dims.length-2)throw new Error("invalid output shape")},vp=[2,3,1,0],$p=(t,e,r)=>{let n=bo(r,e),a=r.format==="NHWC",s=n.outputShape,i=s[a?3:1],o=e[0].dims[a?3:1];if(n.group!==1||i===1&&o===1){t.compute(wo(e,n));return}let l=s[a?1:2],u=s[a?2:3],d=e[1].dims[2],h=e[1].dims[3],f=a?l*u:i,g=a?i:l*u,p=d*h*o,w=!0,v=t.kernelCustomData.wT??t.compute(Sr(e[1],vp),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=v);let S=[e[0],v],$=e.length===3;$&&(!a&&e[2].dims.length===1?S.push(e[2].reshape([e[2].dims[0],1,1])):S.push(e[2])),t.compute(fp(S,n,s,f,g,p,$,w),{inputs:S})},xp=(t,e)=>{let r=e.format==="NHWC",n=[t.inputs[0].reshape(r?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&n.push(t.inputs[2]);let a=e.kernelShape;(a.length===0||a[0]===0)&&(a=[t.inputs[1].dims[2]]);let s=e.dilations;(s.length===0||s[0]===0)&&(s=[1]);let i=e.strides;(i.length===0||i[0]===0)&&(i=[1]);let o=e.pads;o.length===0&&(o=[0,0]),o=[0,o[0],0,o[1]],i=[1].concat(i),s=[1].concat(s),a=[1].concat(a);let l=bo({...e,pads:o,strides:i,dilations:s,kernelShape:a},n);t.compute(wo(n,l,u=>r?[u[0],u[2],u[3]]:[u[0],u[1],u[3]]))},Sp=(t,e)=>{bp(t.inputs,e),t.inputs[0].dims.length===3?xp(t,e):$p(t,t.inputs,e)}}),kp,Ep,Cp,qy=te(()=>{xe(),Oe(),ct(),Ie(),kp=(t,e,r,n)=>{let a=X.size(e),s=e.length,i=Z("input",t,s),o=_e("output",t,s),l=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),u=X.normalizeAxis(l,s),d=h=>{let f=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,g=ke("uniforms.input_shape","uniforms.axis",s),p=n.reverse?f+(n.exclusive?" + 1":""):"0",w=n.reverse?g:f+(n.exclusive?"":" + 1");return`
                ${h.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,o)}
                ${h.mainStart()}
                  ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${o.offsetToIndices("global_idx")};
                  var sum = ${o.type.value}(0);
                  let first : i32 = ${p};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${o.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:u},...we(e,e)]}),getShaderSource:d}},Ep=(t,e)=>{let r=t.inputs[0].dims,n=t.inputs[0].dataType,a=t.inputs[1];t.compute(kp(n,r,a,e),{inputs:[0]})},Cp=t=>{let e=t.exclusive===1,r=t.reverse===1;return Ke({exclusive:e,reverse:r})}}),Tp,Ap,Ip,Mp,Op,Ky=te(()=>{xe(),Oe(),ct(),Ie(),Tp=t=>{if(!t||t.length!==1)throw new Error("DepthToSpace requires 1 input.");if(t[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Ap=(t,e,r,n)=>{let a=[];a.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<e;++s)a.push(r.indicesSet("a",t[s],`i[${s}]`));return a.push("return a;}"),a.join(`
`)},Ip=(t,e)=>{let r,n,a,s,i,o,l=e.format==="NHWC",u=e.blocksize,d=e.mode==="DCR";l?([r,n,a,s]=t.dims,i=d?[r,n,a,u,u,s/u**2]:[r,n,a,s/u**2,u,u],o=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,a,s]=[t.dims[0],t.dims[2],t.dims[3],t.dims[1]],i=d?[r,u,u,s/u**2,n,a]:[r,s/u**2,u,u,n,a],o=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let h=t.reshape(i),f=h.dims.length,g=t.dataType,p=Z("a",g,f),w=_e("output",g,f),v=S=>`
  ${S.registerUniform("output_size","u32").declareVariables(p,w)}

  ${Ap(o,f,p,w)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${w.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${w.setByOffset("global_idx",p.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${t.dims};${e.blocksize};${e.mode}`,inputDependencies:["rank"]},getRunData:S=>{let $=l?[r,n*u,a*u,s/u**2]:[r,s/u**2,n*u,a*u],E=X.size($),T=h.dims,A=X.sortBasedOnPerm(T,o);return{outputs:[{dims:$,dataType:S[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...we(T,A)]}},getShaderSource:v}},Mp=(t,e)=>{Tp(t.inputs),t.compute(Ip(t.inputs[0],e))},Op=t=>Ke({blocksize:t.blocksize,mode:t.mode,format:t.format})}),Ti,sa,vo,zp,Pp,Rp,Bp,$o,Dp,Np,Fp,Yy=te(()=>{xe(),Oe(),ct(),Ie(),Ti="[a-zA-Z]|\\.\\.\\.",sa="("+Ti+")+",vo="^"+sa+"$",zp="("+sa+",)*"+sa,Pp="^"+zp+"$",Rp=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,e){let r=this.symbolToIndices.get(t);r===void 0?r=[e]:r.push(e),this.symbolToIndices.set(t,r)}},Bp=class{constructor(t,e){var a;this.equation=e,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=e.includes("->")?e.split("->",2):[e,""];if(!r.match(RegExp(Pp)))throw new Error("Invalid LHS term");if(r.split(",").forEach((s,i)=>{let o=t[i].dims.slice();if(!s.match(RegExp(vo)))throw new Error("Invalid LHS term");let l=this.processTerm(s,!0,o,i);this.lhs.push(l)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([s,i])=>i.count===1||s==="...").map(([s])=>s).join("");else if(!n.match(RegExp(sa)))throw new Error("Invalid RHS");(a=n.match(RegExp(Ti,"g")))==null||a.forEach(s=>{if(s==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(s);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,e,r){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==e&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:e,inputIndices:[r]};this.symbolToInfo.set(t,n)}processTerm(t,e,r,n=-1){let a=r.length,s=!1,i=[],o=0;if(!t.match(RegExp(vo))&&!e&&t!=="")throw new Error("Invalid LHS term");let l=t.match(RegExp(Ti,"g")),u=new Rp(n);return l==null||l.forEach((d,h)=>{if(d==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let f=a-l.length+1;if(f<0)throw new Error("Ellipsis out of bounds");if(i=r.slice(o,o+f),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(e)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let g=0;g<i.length;g++){let p=String.fromCharCode("0".charCodeAt(0)+g);u.addSymbol(p,h+g),this.addSymbol(p,r[o++],n)}}else u.addSymbol(d,h+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(d,r[o++],n)}),u}},$o=t=>t+"_max",Dp=(t,e,r,n)=>{let a=t.map(u=>u.length).map((u,d)=>Z(`input${d}`,e,u)),s=X.size(n),i=_e("output",e,n.length),o=[...r.symbolToInfo.keys()].filter(u=>!r.rhs.symbolToIndices.has(u)),l=u=>{let d=[],h="var prod = 1.0;",f="var sum = 0.0;",g="sum += prod;",p=[],w=[],v=[],S=[],$=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((T,A)=>{var z;if(r.rhs.symbolToIndices.has(A)){let R=(z=r.rhs.symbolToIndices.get(A))==null?void 0:z[0];R!==void 0&&r.lhs.forEach((G,j)=>{if(T.inputIndices.includes(j)){let q=G.symbolToIndices.get(A);if(q===void 0)throw new Error("Invalid symbol error");q.forEach(ue=>{d.push(`${a[j].indicesSet(`input${j}Indices`,ue,i.indicesGet("outputIndices",R))}`)})}})}else r.lhs.forEach((R,G)=>{if(T.inputIndices.includes(G)){let j=R.symbolToIndices.get(A);if(j===void 0)throw new Error("Invalid symbol error");j.forEach(q=>{p.push(`${a[G].indicesSet(`input${G}Indices`,q,`${A}`)}`)}),S.push(`prod *= ${a[G].getByIndices(`input${G}Indices`)};`)}}),w.push(`for(var ${A}: u32 = 0; ${A} < uniforms.${$o(A)}; ${A}++) {`),v.push("}")});let E=$?[...d,`let sum = ${a.map((T,A)=>T.getByIndices(`input${A}Indices`)).join(" * ")};`]:[...d,f,...w,...p,h,...S,g,...v];return`
            ${u.registerUniforms(o.map(T=>({name:`${$o(T)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...a,i)}

            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${a.map((T,A)=>`var input${A}Indices: ${a[A].type.indices};`).join(`
`)}
            ${E.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:t.map(()=>"rank")},getRunData:()=>{let u=o.filter(h=>r.symbolToInfo.has(h)).map(h=>{var f;return{type:12,data:((f=r.symbolToInfo.get(h))==null?void 0:f.dimValue)||0}});u.push({type:12,data:s});let d=t.map((h,f)=>[...we(h)]).reduce((h,f)=>h.concat(f),u);return d.push(...we(n)),{outputs:[{dims:n,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d}},getShaderSource:l}},Np=(t,e)=>{let r=new Bp(t.inputs,e.equation),n=r.outputDims,a=t.inputs.map((s,i)=>s.dims);t.compute(Dp(a,t.inputs[0].dataType,r,n))},Fp=t=>{let e=t.equation.replace(/\s+/g,"");return Ke({equation:e})}}),Lp,xo,Up,Wp,Vp,Xy=te(()=>{xe(),Oe(),Ie(),Lp=t=>{if(!t||t.length!==2)throw new Error("Expand requires 2 input.");let e=t[0].dims,r=Array.from(t[1].getBigInt64Array(),Number),n=r.length<e.length?0:r.length-e.length,a=e.length<r.length?0:e.length-r.length;for(;n<r.length&&a<e.length;++n,++a)if(r[n]!==e[a]&&r[n]!==1&&e[a]!==1)throw new Error("Expand requires shape to be broadcastable to input")},xo=(t,e)=>{let r=t.length-e.length,n=[];for(let a=0;a<r;++a)n.push(t[a]);for(let a=0;a<e.length;++a)n.push(e[a]===1?t[a+r]:e[a]);return n},Up=(t,e)=>t.length>e.length?xo(t,e):xo(e,t),Wp=t=>{let e=t[0].dims,r=Array.from(t[1].getBigInt64Array(),Number),n=Up(e,r),a=t[0].dataType,s=a===9?4:1,i=Math.ceil(X.size(n)/s),o=u=>{let d=Z("input",a,e.length,s),h=_e("output",a,n.length,s),f;if(a===9){let g=(p,w,v="")=>`
          let outputIndices${w} = ${h.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${d.broadcastedIndicesToOffset(`outputIndices${w}`,h)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${p}[${w}] = ${v}(${d.getByOffset(`index${w}`)}[component${w}]);
        `;f=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${g("data",0,"u32")}
        ${g("data",1,"u32")}
        ${g("data",2,"u32")}
        ${g("data",3,"u32")}
        ${h.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${h.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",h)};
        ${h.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${u.registerUniform("vec_size","u32").declareVariables(d,h)}
    ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},l=[{type:12,data:i},...we(e,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:o,getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:l})}},Vp=t=>{Lp(t.inputs),t.compute(Wp(t.inputs),{inputs:[0]})}}),Gp,Hp,Qy=te(()=>{xe(),Oe(),Ie(),so(),Gp=t=>{let e=t[0].dataType,r=X.size(t[0].dims),n=X.size(t[1].dims),a=n%4===0,s=i=>{let o=Z("x",e,[1],4),l=Z("bias",e,[1],4),u=_e("y",e,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],h=g=>`
      let bias${g}_offset: u32 = (global_idx * 4 + ${g}) % uniforms.bias_size;
      let bias${g} = ${l.getByOffset(`bias${g}_offset / 4`)}[bias${g}_offset % 4];`,f=a?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${h(0)}${h(1)}${h(2)}${h(3)}
      let bias = ${o.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(d).declareVariables(o,l,u)}

    ${ao(Ot(e))}

    ${i.mainStart(Sn)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${o.getByOffset("global_idx")};
      ${f}
      let x_in = x + bias;
      ${u.setByOffset("global_idx",io("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/Sn/4)}})}},Hp=t=>{t.inputs.length<2||X.size(t.inputs[1].dims)===0?Pc(t):t.compute(Gp(t.inputs))}}),jp,qp,Kp,Yp,Zy=te(()=>{xe(),Oe(),ct(),Ie(),jp=t=>{if(!t||t.length!==2)throw new Error("Gather requires 2 inputs.")},qp=(t,e)=>{let r=t[0].dims,n=t[1].dims,a=r.length,s=X.normalizeAxis(e.axis,a),i=r.slice(0);i.splice(s,1,...n);let o=r[s],l=t[0].dataType===9?4:1,u=Math.ceil(X.size(i)/l),d=[{type:12,data:u},{type:6,data:o},{type:12,data:s},...we(t[0].dims,t[1].dims,i)],h=f=>{let g=Z("data",t[0].dataType,t[0].dims.length,l),p=Z("inputIndices",t[1].dataType,t[1].dims.length),w=_e("output",t[0].dataType,i.length,l),v=$=>{let E=n.length,T=`var indicesIndices${$}  = ${p.type.indices}(0);`;for(let A=0;A<E;A++)T+=`${E>1?`indicesIndices${$}[${A}]`:`indicesIndices${$}`} = ${i.length>1?`outputIndices${$}[uniforms.axis + ${A}]`:`outputIndices${$}`};`;T+=`
          var idx${$} = ${p.getByIndices(`indicesIndices${$}`)};
          if (idx${$} < 0) {
            idx${$} = idx${$} + uniforms.axisDimLimit;
          }
          var dataIndices${$} : ${g.type.indices};
        `;for(let A=0,z=0;A<a;A++)A===s?(T+=`${a>1?`dataIndices${$}[${A}]`:`dataIndices${$}`} = u32(idx${$});`,z+=E):(T+=`${a>1?`dataIndices${$}[${A}]`:`dataIndices${$}`} = ${i.length>1?`outputIndices${$}[${z}]`:`outputIndices${$}`};`,z++);return T},S;if(t[0].dataType===9){let $=(E,T,A="")=>`
          let outputIndices${T} = ${w.offsetToIndices(`outputOffset + ${T}u`)};
          ${v(T)};
          let offset${T} = ${g.indicesToOffset(`dataIndices${T}`)};
          let index${T} = offset${T} / 4u;
          let component${T} = offset${T} % 4u;
          ${E}[${T}] = ${A}(${g.getByOffset(`index${T}`)}[component${T}]);
        `;S=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${$("value",0,"u32")}
        ${$("value",1,"u32")}
        ${$("value",2,"u32")}
        ${$("value",3,"u32")}
        ${w.setByOffset("global_idx","value")}
      `}else S=`
      let outputIndices = ${w.offsetToIndices("global_idx")};
      ${v("")};
      let value = ${g.getByIndices("dataIndices")};
      ${w.setByOffset("global_idx","value")};
      `;return`
      ${f.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,p,w)}
      ${f.mainStart()}
        ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${S}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:h}},Kp=t=>Ke({axis:t.axis}),Yp=(t,e)=>{let r=t.inputs;jp(r),t.compute(qp(t.inputs,e))}}),Xp,Qp,Zp,Jp,Jy=te(()=>{xe(),Oe(),ct(),Ie(),Xp=t=>{if(!t||t.length!==2)throw new Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Qp=(t,e)=>{let r=t[0].dims,n=t[0].dataType,a=r.length,s=t[1].dims,i=t[1].dataType,o=X.normalizeAxis(e.axis,a),l=r[o],u=s.slice(0),d=X.size(u),h=Z("input",n,a),f=Z("indicesInput",i,s.length),g=_e("output",n,u.length),p=[{type:12,data:d},{type:6,data:l},{type:12,data:o}];return p.push(...we(r,s,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:p}),getShaderSource:w=>`
      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(h,f,g)}
      ${w.mainStart()}
      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${f.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${h.type.indices}(outputIndices);
      ${h.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${h.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},Zp=t=>Ke({axis:t.axis}),Jp=(t,e)=>{let r=t.inputs;Xp(r),t.compute(Qp(t.inputs,e))}}),eh,th,rh,nh,ew=te(()=>{xe(),Oe(),Ie(),eh=t=>{if(!t)throw new Error("Input is missing");if(t.length<2||t.length>3)throw new Error("Invaid input number.");if(t.length===3&&t[2].dims.length>2)throw new Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||t.length===3&&t[0].dataType!==t[2].dataType)throw new Error("Input types are mismatched")},th=(t,e)=>{let r=t[0].dims.slice(),n=t[1].dims.slice(),[a,s,i]=Nu.getShapeOfGemmResult(r,e.transA,n,e.transB,t.length===3?t[2].dims:void 0),o=[a,s];if(!o)throw new Error("Can't use gemm on the given tensors");let l=X.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:s},{type:12,data:i},{type:1,data:e.alpha},{type:1,data:e.beta}],d=["type","type"];t.length===3&&(u.push(...we(t[2].dims)),d.push("rank")),u.push(...we(o));let h=f=>{let g="";e.transA&&e.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let p=e.alpha===1?"":"value *= uniforms.alpha;",w=Z("a",t[0].dataType,t[0].dims),v=Z("b",t[1].dataType,t[1].dims),S=w.type.value,$=null,E=[w,v];t.length===3&&($=Z("c",t[2].dataType,t[2].dims.length),E.push($));let T=_e("output",t[0].dataType,o.length);E.push(T);let A=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${f.registerUniforms(A).declareVariables(...E)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${S}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${p}
    ${(()=>$!=null?`let cOffset = ${$.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${S}(uniforms.beta) * ${$.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:h}},rh=t=>{let e=t.transA,r=t.transB,n=t.alpha,a=t.beta;return{transA:e,transB:r,alpha:n,beta:a,cacheKey:`${t.transA};${t.transB};${t.alpha===1}`}},nh=(t,e)=>{eh(t.inputs),t.compute(th(t.inputs,e))}}),ah,ih,sh,oh,tw=te(()=>{xe(),Oe(),Ie(),ah=(t,e)=>{let r=t[0].dims,n=r,a=2,s=X.sizeToDimension(r,a),i=X.sizeFromDimension(r,a),o=st(i),l=i/o,u=[r[0],r[1],l],d=["rank","type","type"],h=[{type:12,data:i},{type:12,data:l}];h.push(...we(u,u));let f=g=>{let p=Z("x",t[0].dataType,u.length,o),w=Z("scale",t[1].dataType,t[1].dims),v=Z("bias",t[2].dataType,t[2].dims),S=_e("output",t[0].dataType,u.length,o),$=[p,w,v,S],E=p.type.value,T=o===1?"f32":`vec${o}<f32>`,A=64,z=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${T}, ${A}>;
  const workgroupSize = ${A}u;
  ${g.registerUniforms(z).declareVariables(...$)}
  ${g.mainStart(A)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${T}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${T}(${p.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Dr("workgroupShared[0]",o)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${T}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${T}(${p.get("batch","channel","h")}) - ${T}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Dr("workgroupShared[0]",o)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${w.getByOffset("channel")});
    let channelShift = f32(${v.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${p.get("batch","channel","h")} * ${E}(${T}(channelScale)) + ${E}(${T}(channelShift));
      ${S.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${o}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:s},programUniforms:h}),getShaderSource:f}},ih=(t,e,r,n,a,s,i,o)=>{let l=st(i),u=64,d=l===1?"vec2f":`mat2x${l}f`,h=l===1?"f32":`vec${l}f`,f=(z,R)=>`${d}(${z}, ${R})`,g=a*i/l,p=Math.ceil(s/u),w=["type"],v=[{type:12,data:p},{type:12,data:s},{type:12,data:Math.floor(i/l)},{type:12,data:Math.floor(s*i/l)}],S=z=>{let R=Z("input",e.dataType,e.dims,l);return`
  ${z.declareVariables(R)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${z.mainStart(u)}
    let currentImageNumber = global_idx / ${u} / uniforms.C;
    let currentChannelNumber = (global_idx / ${u}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${xr("f32",l)};
    var squaredSum = ${xr("f32",l)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${h}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${f("sum","squaredSum")};
  }`},$=t.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${l}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:[a,i,u,2],dataType:1}],dispatchGroup:{x:a*i/l},programUniforms:v}),getShaderSource:S},{inputs:[e],outputs:[-1]})[0],E=[{type:12,data:g},{type:12,data:s},{type:12,data:Math.floor(i/l)},{type:12,data:Math.floor(u*i/l)}],T=["type","type","type"],A=z=>{let R=Z("scale",r.dataType,r.dims,l),G=Z("bias",n.dataType,n.dims,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${R.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${G.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${xr("f32",l)};
    var squaredSum = ${xr("f32",l)};
    for (var i: u32 = 0; i < min(${u}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${u}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${o}));
    let channelScale = invStdDev * ${h}(scale[currentChannelNumber]);
    let channelShift = ${h}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${f("channelScale","channelShift")};
  }`};return t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:[a,i,2],dataType:1}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:E}),getShaderSource:A},{inputs:[$,r,n],outputs:[-1]})[0]},sh=(t,e,r)=>{let n=e[0].dims,a=n,s=n[0],i=n[n.length-1],o=X.sizeFromDimension(n,1)/i,l=st(i),u=X.size(a)/l,d=[{type:12,data:o},{type:12,data:Math.floor(i/l)}],h=["type","type"],f=ih(t,e[0],e[1],e[2],s,o,i,r.epsilon),g=p=>{let w=yt(e[0].dataType),v=l===1?"vec2f":`mat2x${l}f`,S=l===1?w:`vec${l}<${w}>`,$=Z("input",e[0].dataType,e[0].dims,l),E=_e("output",e[0].dataType,a,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${$.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${v}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${p.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${S}(scale[0]), ${S}(scale[1]));
  }`};t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:g},{inputs:[e[0],f]})},oh=(t,e)=>{e.format==="NHWC"?sh(t,t.inputs,e):t.compute(ah(t.inputs,e))}}),lh,uh,dh,rw=te(()=>{xe(),Oe(),Ie(),lh=t=>{if(!t||t.length<2)throw new Error("layerNorm requires at least 2 inputs.")},uh=(t,e,r)=>{let n=e.simplified,a=t[0].dims,s=t[1],i=!n&&t[2],o=a,l=X.normalizeAxis(e.axis,a.length),u=X.sizeToDimension(a,l),d=X.sizeFromDimension(a,l),h=X.size(s.dims),f=i?X.size(i.dims):0;if(h!==d||i&&f!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${h} and bias size of ${f}`);let g=[];for(let A=0;A<a.length;++A)A<l?g.push(a[A]):g.push(1);let p=st(d),w=["type","type"],v=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/p)},{type:1,data:e.epsilon}];i&&w.push("type");let S=r>1,$=r>2,E=A=>{let z=yt(t[0].dataType),R=[Z("x",t[0].dataType,t[0].dims,p),Z("scale",s.dataType,s.dims,p)];i&&R.push(Z("bias",i.dataType,i.dims,p)),R.push(_e("output",t[0].dataType,o,p)),S&&R.push(_e("mean_data_output",1,g)),$&&R.push(_e("inv_std_output",1,g));let G=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${A.registerUniforms(G).declareVariables(...R)}
  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${xr("f32",p)};
    var mean_square_vector = ${xr("f32",p)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${kn(z,p,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Dr("mean_vector",p)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Dr("mean_square_vector",p)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${kn(z,p,"x[j + offset]")};
      let f32scale = ${kn(z,p,"scale[j]")};
      output[j + offset] = ${R[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${kn(z,p,"bias[j]")}`:""}
      );
    }

    ${S?"mean_data_output[global_idx] = mean":""};
    ${$?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},T=[{dims:o,dataType:t[0].dataType}];return S&&T.push({dims:g,dataType:1}),$&&T.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${p};${r};${n}`,inputDependencies:w},getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:v}),getShaderSource:E}},dh=(t,e)=>{lh(t.inputs),t.compute(uh(t.inputs,e,t.outputCount))}}),ch,ph,hh,fh,nw=te(()=>{xe(),Oe(),ct(),Ie(),ch=(t,e)=>{if(t.length<3||t.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=t[0],n=r.dims.length;if(r.dims[n-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let a=Math.floor((e.k+e.blockSize-1)/e.blockSize),s=e.blockSize/8*e.bits,i=t[1];if(!X.areEqual(i.dims,[e.n,a,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=t[2].dims;if(X.size(o)!==e.n*a)throw new Error("scales input size error.");if(t.length===4){let l=t[3].dims,u=e.bits>4?e.n*a:e.n*Math.floor((a+1)/2);if(X.size(l)!==u)throw new Error("zeroPoints input size error.")}},ph=(t,e,r,n)=>{let a=t[0].dims,s=a.length,i=Math.floor((e.k+e.blockSize-1)/e.blockSize),o=a[s-2],l=e.k,u=e.n,d=a.slice(0,s-2),h=X.size(d),f=e.blockSize/8*e.bits/4,g=t[0].dataType,p=st(o),w=st(e.k),v=st(f),S=na(g),$=o*i*S,E=Math.floor(n/$),T=i<=r[0]&&E>0,A=!T||E>=4?st(u):E>=2&&st(u)>=2?2:1,z=d.concat([o,u]),R=X.size(z)/A/p,G=T?[]:[{type:12,data:R},{type:12,data:e.blockSize}],j=[h,o,l/w],q=X.convertShape(t[1].dims).slice();q.splice(-1,1,f/v),G.push(...we(j)),G.push(...we(q)),G.push(...we(t[2].dims)),t.length===4&&G.push(...we(X.convertShape(t[3].dims)));let ue=[h,o,u/A];G.push(...we(ue));let re=ee=>{let le=j.length,N=Z("a",t[0].dataType,le,w),O=Z("b",12,q.length,v),V=Z("scales",t[2].dataType,t[2].dims.length),K=[N,O,V],de=t.length===4?Z("zero_points",12,t[3].dims.length):void 0;de&&K.push(de);let ae=ue.length,D=_e("output",t[0].dataType,ae,A),ie=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],he=yt(t[0].dataType),Se=(()=>{switch(w){case 1:return`array<${he}, 8>`;case 2:return`mat4x2<${he}>`;case 4:return`mat2x4<${he}>`;default:throw new Error(`${w}-component is not supported.`)}})(),Te=`
        for (var word: u32 = 0; word < ${f}; word += ${v}) {
          ${O.indicesSet("b_indices","2","word")};
          let b_data = ${O.getByIndices("b_indices")};
          for (var i: u32 = 0; i < ${v}; i++) {
            let b_value: u32 = ${v===1?"b_data":"b_data[word + i]"};
            let b_mask: u32 = 0x0F0F0F0Fu;
            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);
            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);
            let b_quantized_values = ${Se}(${Array.from({length:4},(ot,je)=>`${he}(b_value_lower[${je}]), ${he}(b_value_upper[${je}])`).join(", ")});
            let b_dequantized_values = ${(()=>w===1?`${Se}(${Array.from({length:8},(ot,je)=>`(b_quantized_values[${je}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${Se}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};
            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
            for (var m: u32 = 0; m < ${T?o:p}u; m++) {
              ${N.indicesSet("a_indices",le-2,T?"m":`row * ${p} + m`)};
              ${N.indicesSet("a_indices",le-1,"word_offset")};
              var input_offset = ${N.indicesToOffset("a_indices")};
              var a_data: ${Se};
              for (var j: u32 = 0; j < ${8/w}; j++) {
                a_data[j] = ${N.getByOffset("input_offset")};
                input_offset++;
              }
              ${T?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${A>1?"[c]":""} += ${Array.from({length:8/w},(ot,je)=>`${w===1?`a_data[${je}] * b_dequantized_values[${je}]`:`dot(a_data[${je}], b_dequantized_values[${je}])`}`).join(" + ")};
            }
            word_offset += ${8/w};
          }
        }`,Xe=de?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${de.getByOffset("zero_point_index")};
          }`:"";return T?`
        var<workgroup> workgroup_shared: array<${D.type.value}, ${o*i}>;
        ${ee.declareVariables(...K,D)}
        ${ee.mainStart([i,1,1])}
          var a_indices: ${N.type.indices};
          var block = local_id.x;
          var col = workgroup_id.y;
          var batch = workgroup_id.z;
          ${N.indicesSet("a_indices","0","batch")};
          // Two zero points are packed into one byte when uniforms.bits is 4.
          for (var c: u32 = 0; c < ${A}; c++) {
            let col_times_components_plus_c = col * ${A} + c;
              ${de?`
            var zero_point_bytes_per_col: u32 = (${i} + 1) / 2;
            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);
            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;
            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;
            var zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            var zero_point_word: u32 = ${de.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}
            var b_indices: ${O.type.indices};
            ${O.indicesSet("b_indices","0","col_times_components_plus_c")};
            // The scale and zero points are computed per block.
            var scales_index = col_times_components_plus_c * ${i} + block;
            let scale = ${V.getByOffset("scales_index")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${he}(${de?"(zero_point_word) & 0xFu":8});
            ${O.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block * ${e.blockSize/w};
            var workgroup_shared_offset: u32 = block * ${o};
            ${Te}
          }
          workgroupBarrier();
          if (local_id.x == 0u) {
            var output_indices: ${D.type.indices};
            ${D.indicesSet("output_indices","0","batch")};
            ${D.indicesSet("output_indices",ae-1,"col")};
            ${D.indicesSet("output_indices",ae-2,"0")};
            var output_offset = ${D.indicesToOffset("output_indices")};
            for (var m: u32 = 0u; m < ${o}u; m++) {
              var output_value: ${D.type.value} = ${D.type.value}(0);
              var workgroup_shared_offset: u32 = m;
              for (var b: u32 = 0u; b < ${i}u; b++) {
                output_value += workgroup_shared[workgroup_shared_offset];
                workgroup_shared_offset += ${o};
              }
              ${D.setByOffset("output_offset","output_value")};
              output_offset += ${u/A};
            }
          }
        }`:`
        ${ee.registerUniforms(ie).declareVariables(...K,D)}
        ${ee.mainStart()}
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${D.type.value}, ${p}>;
          var output_indices = ${D.offsetToIndices("global_idx")};
          var col = ${D.indicesGet("output_indices",ae-1)};
          var row = ${D.indicesGet("output_indices",ae-2)};
          var a_indices: ${N.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${de?`
          var zero_point_abs_offset = col * ${A} * ((${i} + 1) / 2);
          var zero_point_index: u32 = zero_point_abs_offset / 4;
          var zero_point_word: u32 = ${de.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}
          var scale_index = col * ${i*A};
          var b_indices: ${O.type.indices};
          for (var c: u32 = 0; c < ${A}; c++) {
            ${O.indicesSet("b_indices","0",`col * ${A} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${i}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${V.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${he}(${de?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${O.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              ${Te}
              scale_index++;
              ${Xe}
              block_offset += uniforms.block_size / ${w};
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${de?`if (zero_point_offset % 8 > 0) {
                ${Xe}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${p}u; k++) {
              ${D.indicesSet("output_indices",ae-2,`${p} * row + k`)};
              ${D.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:T?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${e.cacheKey};${o};${g};${t.length}`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:z,dataType:g}],name:T?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:T?{x:1,y:Math.ceil(u/A),z:h}:{x:Math.ceil(R/64)},programUniforms:G}),getShaderSource:re}},hh=(t,e)=>{ch(t.inputs,e);let r=t.getMaxComputeWorkgroupSizes(),n=t.getMaxComputeWorkgroupStoragesize();t.compute(ph(t.inputs,e,r,n))},fh=t=>Ke(t)}),Tt,mh,gh,So,_h,Ai,yh,aw=te(()=>{xe(),Oe(),ct(),Hs(),qd(),Ie(),ia(),Tt=(t,e)=>t.length>e&&t[e].dims.length>0&&X.size(t[e].dims)>0?t[e]:void 0,mh=(t,e)=>{let r=t[0],n=Tt(t,1),a=Tt(t,2),s=Tt(t,3),i=Tt(t,4),o=Tt(t,5),l=Tt(t,6),u=Tt(t,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,h=r.dims[0],f=r.dims[1],g=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:e.numHeads*r.dims[4],p=f,w=0,v=0,S=Math.floor(g/e.numHeads);if(l&&u){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==h||l.dims[1]!==e.numHeads||l.dims[3]!==S)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==h||u.dims[1]!==e.numHeads||u.dims[3]!==S)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(u.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');w=l.dims[2],v=l.dims[2]}else if(l||u)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let $;if(n){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');$=2,p=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==e.numHeads||n.dims[3]!==2||n.dims[4]!==S)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect "value" be none when "key" has packed kv format.');$=5,p=n.dims[1]}else{if(n.dims[1]!==e.numHeads||n.dims[3]!==S)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');$=0,p=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==e.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');$=3}if(s){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(a&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(i){E=8;let G=i.dims;throw G.length===1?G[0]===h?E=1:G[0]===3*h+2&&(E=3):G.length===2&&G[0]===h&&G[1]===p&&(E=5),E===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let T=!1,A=g;if(a){if(a.dims.length!==3&&a.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==a.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(a.dims.length===3){if(p!==a.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');A=a.dims[2]}else{if(p!==a.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');A=a.dims[1]*a.dims[3],T=!0}}let z=w+p,R=!1;if(i)throw new Error("Key padding mask is not supported");if(o){if(o.dims.length!==4)throw new Error('Input "relative_position_bias" is expected to have 4 dimensions');if(o.dims[0]!==h&&o.dims[0]!==1||o.dims[1]!==e.numHeads||o.dims[2]!==f||o.dims[3]!==z)throw new Error('Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)')}return{batchSize:h,sequenceLength:f,pastSequenceLength:w,kvSequenceLength:p,totalSequenceLength:z,maxSequenceLength:v,inputHiddenSize:0,hiddenSize:g,vHiddenSize:A,headSize:S,vHeadSize:Math.floor(A/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:E,scale:e.scale,broadcastResPosBias:R,passPastInKv:T,qkvFormat:$}},gh=t=>Ke({...t}),So=Ke({perm:[0,2,1,3]}),_h=(t,e,r,n,a,s,i)=>{let o=[n,a,s],l=X.size(o),u=[{type:12,data:l},{type:12,data:i},{type:12,data:s}],d=h=>{let f=_e("qkv_with_bias",e.dataType,o),g=Z("qkv",e.dataType,o),p=Z("bias",r.dataType,o),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${h.registerUniforms(w).declareVariables(g,p,f)}
  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return t.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:d},{inputs:[e,r],outputs:[-1]})[0]},Ai=(t,e,r,n,a,s,i,o)=>{let l=s;if(i){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=_h(t,s,i,e,n,r*a,o),l=l.reshape([e,n,r,a]),t.compute(Sr(l,So.perm),{inputs:[l],outputs:[-1]})[0]}else return s.dims.length===3&&(l=s.reshape([e,n,r,a])),t.compute(Sr(l,So.perm),{inputs:[l],outputs:[-1]})[0]},yh=(t,e)=>{let r=mh(t.inputs,e),n=t.inputs[0],a=Tt(t.inputs,1),s=Tt(t.inputs,2),i=Tt(t.inputs,3),o=Tt(t.inputs,4),l=Tt(t.inputs,5),u=Tt(t.inputs,6),d=Tt(t.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if((a==null?void 0:a.dims.length)===5)throw new Error("Packed KV is not implemented");let h=a&&s&&a.dims.length===4&&s.dims.length===4,f=Ai(t,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,i,0);if(h)return bi(t,f,a,s,o,void 0,u,d,l,r,e);if(!a||!s)throw new Error("key and value must be provided");let g=Ai(t,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,a,i,r.hiddenSize),p=Ai(t,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,i,2*r.hiddenSize);bi(t,f,g,p,o,void 0,u,d,l,r,e)}}),wh,bh,vh,$h,xh,Sh,kh,Eh,Ch,iw=te(()=>{xe(),Oe(),Ie(),wh=t=>{if(!t||t.length<1)throw new Error("Too few inputs");if(t[0].dataType!==1&&t[0].dataType!==10)throw new Error("Input type must be float or float16.");if(t.length>=2){let e=t[0].dims.length*2===t[1].dims[0];if(t.length===4&&(e=t[3].dims[0]*2===t[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},bh=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
            k = i32(${t.indicesGet("indices",a)}) - ${ke("uniforms.pads",a,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ke("uniforms.x_shape",a,e)})) {
              break;
            }
            offset += k * i32(${ke("uniforms.x_strides",a,e)});
        `;return`
          value = ${t.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},vh=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${ke("uniforms.pads",a,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ke("uniforms.x_shape",a,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ke("uniforms.x_shape",a,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ke("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},$h=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${ke("uniforms.pads",a,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ke("uniforms.x_shape",a,e)})) {
                  k = i32(${ke("uniforms.x_shape",a,e)}) - 1;
                }
                offset += k * i32(${ke("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},xh=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${ke("uniforms.pads",a,r)};
                if (k < 0)  {
                  k += i32(${ke("uniforms.x_shape",a,e)}]);
                }
                if (k >= i32(${ke("uniforms.x_shape",a,e)})) {
                  k -= i32(${ke("uniforms.x_shape",a,e)});
                }
                offset += k * i32(${ke("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Sh=(t,e,r)=>{switch(r.mode){case 0:return bh(t,e,r.pads.length);case 1:return vh(t,e,r.pads.length);case 2:return $h(t,e,r.pads.length);case 3:return xh(t,e,r.pads.length);default:throw new Error("Invalid mode")}},kh=(t,e)=>{let r=X.padShape(t[0].dims.slice(),e.pads),n=t[0].dims,a=X.size(r),s=[{type:12,data:a},{type:6,data:e.pads}];e.mode===0&&s.push({type:t[0].dataType,data:e.value}),s.push(...we(t[0].dims,r));let i=["rank"],o=l=>{let u=_e("output",t[0].dataType,r.length),d=Z("x",t[0].dataType,n.length),h=d.type.value,f=Sh(u,n.length,e),g=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&g.push({name:"constant_value",type:h}),`
            ${l.registerUniforms(g).declareVariables(d,u)}
            ${l.mainStart()}
            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${u.offsetToIndices("global_idx")};

            var value = ${h}(0);
            ${f}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:i},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(X.size(r)/64)},programUniforms:s}),getShaderSource:o}},Eh=(t,e)=>{if(t.length>1){let r=t[1].getBigInt64Array(),n=t.length>=3&&t[2].data?t[2].getFloat32Array()[0]:0,a=t[0].dims.length,s=new Int32Array(2*a).fill(0);if(t.length>=4){let o=t[3].getBigInt64Array();for(let l=0;l<o.length;l++)s[Number(o[l])]=Number(r[l]),s[Number(o[l])+a]=Number(r[l+o.length])}else r.forEach((o,l)=>s[Number(l)]=Number(o));let i=[];return s.forEach(o=>i.push(o)),{mode:e.mode,value:n,pads:i}}else return e},Ch=(t,e)=>{wh(t.inputs);let r=Eh(t.inputs,e);t.compute(kh(t.inputs,r),{inputs:[0]})}}),oa,ko,Eo,Co,To,Th,Ah,Ao,Io,Ih,Mh,Mo,Oh,zh,Oo,Ph,Rh,Bh,Dh,sw=te(()=>{rr(),xe(),Oe(),Ie(),oa=t=>{if(Ue.webgpu.validateInputContent&&(!t||t.length!==1))throw new Error("Pool ops requires 1 input.")},ko=(t,e,r)=>{let n=e.format==="NHWC",a=t.dims.slice();n&&a.splice(1,0,a.pop());let s=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),o=e.strides.slice(),l=s?e.dilations.slice():[],u=e.pads.slice();mi.adjustPoolAttributes(r,a,i,o,l,u);let d=mi.computePoolOutputShape(r,a,o,l,i,u,e.autoPad),h=Object.assign({},e);s?Object.assign(h,{kernelShape:i,strides:o,pads:u,dilations:l,cacheKey:e.cacheKey}):Object.assign(h,{kernelShape:i,strides:o,pads:u,cacheKey:e.cacheKey});let f=d.slice();return f.push(f.splice(1,1)[0]),[h,n?f:d]},Eo=(t,e)=>{let r=e.format==="NHWC",n=X.size(t),a=X.size(e.kernelShape),s=[{type:12,data:n},{type:12,data:a}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let o=e.kernelShape[e.kernelShape.length-1],l=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],h=!!(u+d);s.push({type:12,data:o},{type:12,data:l},{type:12,data:u},{type:12,data:d}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let f=!1;if(e.kernelShape.length===2){let g=e.kernelShape[e.kernelShape.length-2],p=e.strides[e.strides.length-2],w=e.pads[e.pads.length/2-2],v=e.pads[e.pads.length-2];f=!!(w+v),s.push({type:12,data:g},{type:12,data:p},{type:12,data:w},{type:12,data:v}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,i,!0,h,f]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=X.computeStrides(e.kernelShape);s.push({type:12,data:o},{type:12,data:e.pads},{type:12,data:e.strides}),i.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let l=e.pads.reduce((u,d)=>u+d);return[s,i,!!l,!1,!1]}},Co=(t,e,r,n,a,s,i,o,l,u,d,h)=>{let f=a.format==="NHWC",g=e.type.value,p=_e("output",e.type.tensor,n);if(a.kernelShape.length<=2){let w="",v="",S="",$=r-(f?2:1);if(d?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${$}] < 0 || xIndices[${$}]
                      >= uniforms.x_shape[${$}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${s}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${s}
                }`,a.kernelShape.length===2){let E=r-(f?3:2);h?v=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${E}] < 0 || xIndices[${E}] >= uniforms.x_shape[${E}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:v=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;
                `,S=`
              }
            `}return`
            ${t.registerUniforms(l).declareVariables(e,p)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${p.offsetToIndices("global_idx")};
              var xIndices = ${p.offsetToIndices("global_idx")};

              var value = ${g}(${o});
              var pad = 0;
              ${v}
              ${w}
              ${S}
              ${i}

              output[global_idx] = value;
            }`}else{if(f)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=a.kernelShape.length,v=a.pads.length,S="";return u?S=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${s}
              }`:S=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${t.registerUniforms(l).declareVariables(e,p)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${p.offsetToIndices("global_idx")};
              var xIndices = ${p.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${g}(${o});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${ke("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${ke("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${r-w}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${ke("uniforms.strides",`j - ${r-w}u`,w)}
                    + offsets[j - ${r-w}u] - ${ke("uniforms.pads","j - 2u",v)};
                  ${S}
              }
              ${i}

              output[global_idx] = value;
            }`}},To=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,Th=t=>`${To(t)};${t.countIncludePad}`,Ah=t=>`${To(t)};${t.storageOrder};${t.dilations}`,Ao=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),Io=(t,e,r,n)=>{let[a,s]=ko(e,n,r),i=Z("x",e.dataType,e.dims.length),o=i.type.value,l="value += x_val;",u="";a.countIncludePad?u+=`value /= ${o}(uniforms.kernelSize);`:u+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[d,h,f,g,p]=Eo(s,a);d.push(...we(e.dims,s));let w=["rank"];return{name:t,shaderCache:{hint:`${n.cacheKey};${f};${g};${p}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(X.size(s)/64)},programUniforms:d}),getShaderSource:v=>Co(v,i,e.dims.length,s.length,a,l,u,0,h,f,g,p)}},Ih=t=>{let e=t.count_include_pad!==0,r=Ao(t);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:e,...r,cacheKey:""};return{...n,cacheKey:Th(n)}},Mh=(t,e)=>{oa(t.inputs),t.compute(Io("AveragePool",t.inputs[0],!1,e))},Mo={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Oh=t=>{let e=t.format;return{format:e,...Mo,cacheKey:e}},zh=(t,e)=>{oa(t.inputs),t.compute(Io("GlobalAveragePool",t.inputs[0],!0,e))},Oo=(t,e,r,n)=>{let[a,s]=ko(e,n,r),i=`
      value = max(x_val, value);
    `,o="",l=Z("x",e.dataType,e.dims.length),u=["rank"],[d,h,f,g,p]=Eo(s,a);return d.push(...we(e.dims,s)),{name:t,shaderCache:{hint:`${n.cacheKey};${f};${g};${p}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(X.size(s)/64)},programUniforms:d}),getShaderSource:w=>Co(w,l,e.dims.length,s.length,a,i,o,e.dataType===10?-65504:-1e5,h,f,g,p)}},Ph=(t,e)=>{oa(t.inputs),t.compute(Oo("MaxPool",t.inputs[0],!1,e))},Rh=t=>{let e=t.storage_order,r=t.dilations,n=Ao(t);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let a={storageOrder:e,dilations:r,...n,cacheKey:""};return{...a,cacheKey:Ah(a)}},Bh=t=>{let e=t.format;return{format:e,...Mo,cacheKey:e}},Dh=(t,e)=>{oa(t.inputs),t.compute(Oo("GlobalMaxPool",t.inputs[0],!0,e))}}),Nh,Fh,Lh,ow=te(()=>{rr(),xe(),Ie(),Nh=(t,e,r)=>{let n=t===e,a=t<e&&r<0,s=t>e&&r>0;if(n||a||s)throw new Error("Range these inputs' contents are invalid.")},Fh=(t,e,r,n)=>{let a=Math.abs(Math.ceil((e-t)/r)),s=[a],i=a,o=[{type:12,data:i},{type:n,data:t},{type:n,data:r},...we(s)],l=u=>{let d=_e("output",n,s.length),h=d.type.value,f=[{name:"outputSize",type:"u32"},{name:"start",type:h},{name:"delta",type:h}];return`
        ${u.registerUniforms(f).declareVariables(d)}
        ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${h}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:o})}},Lh=t=>{let e=0,r=0,n=0;t.inputs[0].dataType===6?(e=t.inputs[0].getInt32Array()[0],r=t.inputs[1].getInt32Array()[0],n=t.inputs[2].getInt32Array()[0]):t.inputs[0].dataType===1&&(e=t.inputs[0].getFloat32Array()[0],r=t.inputs[1].getFloat32Array()[0],n=t.inputs[2].getFloat32Array()[0]),Ue.webgpu.validateInputContent&&Nh(e,r,n),t.compute(Fh(e,r,n,t.inputs[0].dataType),{inputs:[]})}}),Uh,Wh,Vh,Gh,Hh,jh,qh,Kh,Yh,Xh,Qh,zo,Zh,Jh,ef,tf,rf,nf,af,lw=te(()=>{xe(),Oe(),ct(),Ie(),Uh=(t,e)=>{if(t.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),t.length>0){if(e.mode==="linear"){if(!(t.length===2||t.length===3||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1||t.length===5&&t[0]===1&&t[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(t.length===2||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Wh=(t,e,r)=>{e.every(a=>a>=0&&a<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return e.forEach((a,s)=>n[a]=t[s]),n},Vh=(t,e,r,n,a,s)=>{let[i,o,l]=r>10?[1,2,3]:[-1,t.length>1?1:-1,-1],u=t[0].dims.length;if(i>0&&t.length>i&&t[i].dims.length>0)t[i].getFloat32Array().forEach(d=>s.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&t.length>o&&t[o].dims.length>0){if(t[o].getFloat32Array().forEach(d=>n.push(d)),n.length!==0&&n.length!==u&&r>=18&&n.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Uh(n,e),e.axes.length>0&&Wh(n,e.axes,u).forEach((d,h)=>n[h]=d)}if(l>0&&t.length>l&&(t[l].getBigInt64Array().forEach(d=>a.push(Number(d))),a.length!==u||r>=18&&a.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(n.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(a.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof a<"u"&&n.length>0&&a.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},Gh=(t,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(t){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}",Hh=(t,e,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(t){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${t} is not supported`)}})()+"}",jh=(t,e,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),a=t.length===0?n:t.slice();return e.length>0?(e.forEach((s,i)=>{n[s]=a[i],n[i+r]=a[e.length+i]}),n):a},qh=(t,e,r,n)=>{let a=[];if(r.length>0)if(n.length>0){if(t.forEach(s=>a.push(s)),Math.max(...n)>t.length)throw new Error("axes is out of bound");n.forEach((s,i)=>a[s]=r[i])}else r.forEach(s=>a.push(s));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");a=t.map((s,i)=>Math.round(s*e[i]))}return a},Kh=(t,e,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>e[s]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>e[s]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let a=t.slice();return r.axes.length>0?(r.axes.forEach(s=>e[s]=n),r.axes.forEach(s=>a[s]=Math.round(t[s]*e[s]))):(e.fill(n,0,e.length),a.forEach((s,i)=>a[i]=Math.round(s*e[i]))),a},Yh=(t,e,r,n,a)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> array<${t.type.value}, ${r.length}> {
      var original_indices: array<${t.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var scale = ${ke("uniforms.scales","i",n)};
        var roi_low = ${ke("uniforms.roi","i",a)};
        var roi_hi = ${ke("uniforms.roi",`i + ${e.length}`,a)};
        if (scale == 1.0) {
          original_indices[i] = ${t.type.value}(output_index);
        } else {
          var input_shape_i = ${ke("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${ke("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Xh=(t,e,r,n,a,s,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${t.type.indices} {
      var input_indices: ${t.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ke("uniforms.scales","i",a)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ke("uniforms.roi","i",s)};
          var roi_hi = ${ke("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${ke("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${ke("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${t.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Qh=(t,e)=>`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ke("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,zo=(t,e,r,n)=>t.rank>n?`
    ${t.indicesSet("input_indices",e,"channel")};
    ${t.indicesSet("input_indices",r,"batch")};
`:"",Zh=(t,e,r,n,a)=>{let[s,i,o,l]=r.length===2?[-1,0,1,-1]:[0,2,3,1],u=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",i,`max(0, min(row, ${r[i]} - 1))`)};
      ${t.indicesSet("input_indices",o,`max(0, min(col, ${r[o]} - 1))`)};
      ${zo(t,l,s,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${u} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${u} = originalIndices[${i}];
      var col:${u} = originalIndices[${o}];
      ${n?`if (row < 0 || row > (${r[i]} - 1) || col < 0 || col > (${r[o]} - 1)) {
        return ${a};
      }`:""};
      row = max(0, min(row, ${r[i]} - 1));
      col = max(0, min(col, ${r[o]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${u} = getInputValue(batch, channel, row1, col1);
      var x12: ${u} = getInputValue(batch, channel, row1, col2);
      var x21: ${u} = getInputValue(batch, channel, row2, col1);
      var x22: ${u} = getInputValue(batch, channel, row2, col2);
      var dx1: ${u} = abs(row - ${u}(row1));
      var dx2: ${u} = abs(${u}(row2) - row);
      var dy1: ${u} = abs(col - ${u}(col1));
      var dy2: ${u} = abs(${u}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Jh=(t,e,r,n,a,s,i,o,l,u)=>{let d=r.length===2,[h,f]=d?[0,1]:[2,3],g=t.type.value,p=w=>{let v=w===h?"row":"col";return`
      fn ${v}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${e.type.indices}) -> ${g} {
        var output_index = ${e.indicesGet("output_indices",w)};
        var originalIdx: ${g} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[w]},
        ${n[w]}, ${r[w]}, ${s[w]}, ${s[w]} + ${r.length});
        var fractOriginalIdx: ${g} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${o} && (originalIdx < 0 || originalIdx > (${r[w]} - 1))) {
          return ${l};
        }
        var data: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${v}: ${g} = originalIdx + ${g}(i);
          if (${v} < 0 || ${v} >= ${r[w]}) {
            ${(()=>u?`coefs[i + 1] = 0.0;
                        continue;`:o?`return ${l};`:`${v} = max(0, min(${v}, ${r[w]} - 1));`)()};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",w,`u32(${v})`)};
          data[i + 1] = ${w===h?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${p(h)};
    ${p(f)};
  fn getCubicInterpolationCoefs(s: ${g}) -> array<${g}, 4> {
    var absS = abs(s);
    var coeffs: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${g} = 1.0 - absS;
    var twoMinusAbsS: ${g} = 2.0 - absS;
    var onePlusAbsS: ${g} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${g}, 4>, coefs: array<${g}, 4>) -> ${g} {
    var coefsSum: ${g} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${g} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},ef=(t,e,r,n,a)=>{let[s,i,o,l,u]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],d=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",i,`max(0, min(depth, ${r[i]} - 1))`)};
      ${t.indicesSet("input_indices",o,`max(0, min(height, ${r[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(width, ${r[l]} - 1))`)};
      ${zo(t,u,s,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${d} = originalIndices[${i}];
      var height:${d} = originalIndices[${o}];
      var width:${d} = originalIndices[${l}];
      ${n?`if (depth < 0 || depth > (${r[i]} - 1) || height < 0 || height > (${r[o]} - 1) || width < 0 || (width > ${r[l]} - 1)) {
      return ${a};
        }`:""};

    depth = max(0, min(depth, ${r[i]} - 1));
      height = max(0, min(height, ${r[o]} - 1));
      width = max(0, min(width, ${r[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${d} = abs(depth - ${d}(depth1));
      var dx2: ${d} = abs(${d}(depth2) - depth);
      var dy1: ${d} = abs(height - ${d}(height1));
      var dy2: ${d} = abs(${d}(height2) - height);
      var dz1: ${d} = abs(width - ${d}(width1));
      var dz2: ${d} = abs(${d}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},tf=(t,e,r,n,a,s)=>{let i=t.dims,o=jh(s,e.axes,i.length),l=qh(i,n,a,e.axes),u=n.slice();n.length===0&&(u=i.map(($,E)=>$===0?1:l[E]/$),e.keepAspectRatioPolicy!=="stretch"&&(l=Kh(i,u,e)));let d=_e("output",t.dataType,l.length),h=Z("input",t.dataType,i.length),f=X.size(l),g=i.length===l.length&&i.every(($,E)=>$===l[E]),p=e.coordinateTransformMode==="tf_crop_and_resize",w=e.extrapolationValue,v=h.type.value,S=$=>`
      ${g?"":`
      ${Gh(e.coordinateTransformMode,v)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${Qh(h,i)};
              ${Hh(e.nearestMode,r,v)};
              ${Xh(h,d,i,l,u.length,o.length,p)};
              `;case"linear":return`
              ${Yh(d,i,l,u.length,o.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${Zh(h,d,i,p,w)}`;if(i.length===3||i.length===5)return`${ef(h,d,i,p,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${Jh(h,d,i,l,u,o,e.cubicCoeffA,p,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${$.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(h,d)}
      ${$.mainStart()}
        ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${h.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${h.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${r}|${u.length>0?u:""}|${a.length>0?a:""}|${o.length>0?o:""}|${g}|${i}`,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:l,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},{type:1,data:u},{type:1,data:o},...we(i,l)]})}},rf=t=>{let e=t.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},nf=(t,e)=>{let r=[],n=[],a=[],s=rf(t);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Vh(t.inputs,e,s,r,n,a),t.compute(tf(t.inputs[0],e,s,r,n,a),{inputs:[0]})},af=t=>{let e=t.antialias,r=t.axes,n=t.coordinateTransformMode,a=t.cubicCoeffA,s=t.excludeOutside!==0,i=t.extrapolationValue,o=t.keepAspectRatioPolicy,l=t.mode,u=t.nearestMode===""?"simple":t.nearestMode;return Ke({antialias:e,axes:r,coordinateTransformMode:n,cubicCoeffA:a,excludeOutside:s,extrapolationValue:i,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}}),sf,of,lf,uw=te(()=>{xe(),Oe(),ct(),Ie(),sf=(t,e)=>{let[r,n,a,s]=t,{numHeads:i,rotaryEmbeddingDim:o}=e;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!X.areEqual(n.dims,[])&&!X.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!X.areEqual(a.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=r.dims[0],u=r.dims[r.dims.length-2],d=a.dims[0],h=X.sizeFromDimension(r.dims,1)/u,f=o===0?a.dims[1]*2:h/i;if(o>f)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(l!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(u!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(f/2!==a.dims[1]&&o/2!==a.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(u>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},of=(t,e)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:a,scale:s}=e,i=t[0].dims[0],o=X.sizeFromDimension(t[0].dims,1),l=t[0].dims[t[0].dims.length-2],u=o/l,d=t[2].dims[1],h=a===0?d*2:u/n,f=new Array(i,l,u/h,h-d),g=X.computeStrides(f),p=[{type:1,data:s},{type:12,data:f},{type:12,data:g},...t[0].dims.length===3?new Array({type:12,data:[o,u,h,1]}):[],...t[0].dims.length===4?new Array({type:12,data:[o,h,l*h,1]}):[],...we(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)],w=v=>{let S=Z("input",t[0].dataType,t[0].dims.length),$=Z("position_ids",t[1].dataType,t[1].dims.length),E=Z("cos_cache",t[2].dataType,t[2].dims.length),T=Z("sin_cache",t[3].dataType,t[3].dims.length),A=_e("output",t[0].dataType,t[0].dims.length);return v.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:f.length},{name:"global_strides",type:"u32",length:g.length},{name:"input_output_strides",type:"u32",length:g.length}]),`
        ${v.declareVariables(S,$,E,T,A)}

        ${v.mainStart(Sn)}
          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${v.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${$.broadcastedIndicesToOffset("bsnh.xy",_e("",$.type.tensor,2))};
            let position_id =
                u32(${$.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${S.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -
                ${S.getByOffset("j")} * ${T.get("position_id","bsnh[3]")};
            ${A.setByOffset("i","re")}
            let im = ${S.getByOffset("i")} * ${T.get("position_id","bsnh[3]")} +
                ${S.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};
            ${A.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${A.setByOffset("k",S.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ke({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/Sn)},programUniforms:p})}},lf=(t,e)=>{sf(t.inputs,e),t.compute(of(t.inputs,e))}}),uf,df,cf,dw=te(()=>{xe(),Oe(),Ie(),uf=t=>{if(!t||t.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=t[0],r=t[1],n=t[2];if(e.dataType!==r.dataType||e.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let a=e.dims[e.dims.length-1],s=e.dims[e.dims.length-2];if(r.dims[r.dims.length-1]!==a)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==a)throw new Error("Gamma must have the same hidden size as input");if(t.length>3){let i=t[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==a)throw new Error("Beta must have the same hidden size as input")}if(t.length>4){let i=t[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==a)throw new Error("Bias must have the same hidden size as input")}},df=(t,e,r,n)=>{let a=e.simplified,s=t[0].dims,i=X.size(s),o=s,l=i,u=s.slice(-1)[0],d=n?s.slice(0,-1).concat(1):[],h=!a&&t.length>3,f=t.length>4,g=n&&r>1,p=n&&r>2,w=r>3,v=st(u),S=[{type:12,data:l},{type:12,data:v},{type:12,data:u},{type:1,data:e.epsilon}],$=T=>{let A=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],z=[Z("x",t[0].dataType,t[0].dims,v),Z("skip",t[1].dataType,t[1].dims,v),Z("gamma",t[2].dataType,t[2].dims,v)];h&&z.push(Z("beta",t[3].dataType,t[3].dims,v)),f&&z.push(Z("bias",t[4].dataType,t[4].dims,v)),z.push(_e("output",t[0].dataType,o,v)),g&&z.push(_e("mean_output",1,d)),p&&z.push(_e("inv_std_output",1,d)),w&&z.push(_e("input_skip_bias_sum",t[0].dataType,o,v));let R=yt(t[0].dataType);return`

      ${T.registerUniforms(A).declareVariables(...z)}

      ${T.mainStart()}
        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${xr("f32",v)};
        var squareSum = ${xr("f32",v)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${f?"bias[i]":R+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${w?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${kn(R,v,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Dr("sum",v)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Dr("squareSum",v)} / f32(uniforms.hidden_size) ${a?"":"- mean * mean"} + uniforms.epsilon);
        ${g?"mean_output[global_idx] = mean;":""}
        ${p?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] ${a?"":`- ${R}(mean)`}) * ${R}(inv_std_dev) * gamma[i] ${h?"+ beta[i]":""};
        }
      }`},E=[{dims:o,dataType:t[0].dataType}];return r>1&&E.push({dims:d,dataType:1}),r>2&&E.push({dims:d,dataType:1}),r>3&&E.push({dims:s,dataType:t[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${v};${g};${p};${w}`,inputDependencies:t.map((T,A)=>"type")},getShaderSource:$,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(l/u/64)},programUniforms:S})}},cf=(t,e)=>{uf(t.inputs);let r=[0];t.outputCount>1&&r.push(-3),t.outputCount>2&&r.push(-3),t.outputCount>3&&r.push(3),t.compute(df(t.inputs,e,t.outputCount,!1),{outputs:r})}}),pf,la,hf,Po,ff,mf,gf,_f,cw=te(()=>{xe(),Oe(),ct(),Ie(),pf=(t,e)=>{if(!t||t.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");t.slice(1).forEach((r,n)=>{if(t[n+1].dataType!==6&&t[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},la=(t,e)=>{let r=[];if(t.length>e)if(t[e].dataType===7)t[e].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(t[e].dataType===6)t[e].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return r},hf=(t,e)=>{if(t.length>1){let r=la(t,1),n=la(t,2),a=la(t,3);return a.length===0&&(a=[...Array(t[0].dims.length).keys()]),Ke({starts:r,ends:n,axes:a})}else return e},Po=(t,e,r,n,a)=>{let s=t;return t<0&&(s+=r[n[e]]),a[e]<0?Math.max(0,Math.min(s,r[n[e]]-1)):Math.max(0,Math.min(s,r[n[e]]))},ff=(t,e,r)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${t.type.indices} {
          var input_indices: ${t.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${ke("uniforms.input_shape","i",r.length)};
            let steps_i = ${ke("uniforms.steps","i",r.length)};
            let signs_i = ${ke("uniforms.signs","i",r.length)};
            let starts_i = ${ke("uniforms.starts","i",r.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${t.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,mf=(t,e)=>{let r=t[0].dims,n=X.size(r),a=e.axes.length>0?X.normalizeAxes(e.axes,r.length):[...Array(r.length).keys()],s=la(t,4);s.forEach(S=>S!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(a.length).fill(1));let i=e.starts.map((S,$)=>Po(S,$,r,a,s)),o=e.ends.map((S,$)=>Po(S,$,r,a,s));if(a.length!==i.length||a.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(a.length!==r.length)for(let S=0;S<r.length;++S)a.includes(S)||(i.splice(S,0,0),o.splice(S,0,r[S]),s.splice(S,0,1));let l=s.map(S=>Math.sign(S));s.forEach((S,$,E)=>{if(S<0){let T=(o[$]-i[$])/S,A=i[$],z=A+T*s[$];i[$]=z,o[$]=A,E[$]=-S}});let u=r.slice(0);a.forEach((S,$)=>{u[S]=Math.ceil((o[S]-i[S])/s[S])});let d={dims:u,dataType:t[0].dataType},h=_e("output",t[0].dataType,u.length),f=Z("input",t[0].dataType,t[0].dims.length),g=X.size(u),p=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:s.length}],w=[{type:12,data:g},{type:12,data:i},{type:6,data:l},{type:12,data:s},...we(t[0].dims,u)],v=S=>`
      ${S.registerUniforms(p).declareVariables(f,h)}
        ${ff(f,h,r)}
        ${S.mainStart()}
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${h.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${h.setByOffset("global_idx",f.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:v,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:w})}},gf=(t,e)=>{pf(t.inputs,e);let r=hf(t.inputs,e);t.compute(mf(t.inputs,r),{inputs:[0]})},_f=t=>{let e=t.starts,r=t.ends,n=t.axes;return Ke({starts:e,ends:r,axes:n})}}),yf,wf,bf,vf,pw=te(()=>{xe(),Oe(),ct(),Ie(),yf=t=>{if(!t||t.length!==1)throw new Error("Softmax op requires 1 input.")},wf=(t,e)=>{let r=t.dims,n=X.size(r),a=64,s=e.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let i=r[s],o=n/i,l=st(i),u=i/l,d=(v,S)=>S===4?`max(max(${v}.x, ${v}.y), max(${v}.z, ${v}.w))`:S===2?`max(${v}.x, ${v}.y)`:S===3?`max(max(${v}.x, ${v}.y), ${v}.z)`:v,h=Z("x",t.dataType,t.dims,l),f=_e("result",t.dataType,t.dims,l),g=h.type.value,p=yt(t.dataType)==="f32"?`var threadMax = ${g}(-3.402823e+38f);`:`var threadMax = ${g}(-65504.0h);`,w=v=>`
      var<workgroup> rowMaxShared : ${g};
      var<workgroup> rowSumShared : ${g};
      var<workgroup> threadShared : array<${g}, ${a}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${g} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${g}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${v.registerUniform("packedCols","i32").declareVariables(h,f)}
      ${v.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${a};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${p}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${g}(${d("threadShared[0]",l)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${g}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${g}(${Dr("threadShared[0]",l)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${l}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.dataType}],dispatchGroup:{x:o},programUniforms:[{type:6,data:u}]}),getShaderSource:w}},bf=(t,e)=>{yf(t.inputs),t.compute(wf(t.inputs[0],e))},vf=t=>Ke({axis:t.axis})}),$f,xf,Sf,kf,Ef,Cf,Tf,hw=te(()=>{xe(),Oe(),ct(),Ie(),$f=t=>{if(!t||t.length<1)throw new Error("too few inputs")},xf=(t,e)=>{let r=[],n=e.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(a=>r.push(Number(a))),n=r.length),Ke({numOutputs:n,axis:e.axis,splitSizes:r})},Sf=t=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {
    if (index < ${ke("uniforms.size_in_split_axis","i",t)}) {
        return i;
    }
    }
    return ${t}u;
}`,kf=t=>{let e=t.length,r=[];for(let n=0;n<e;++n){let a=t[n].setByIndices("indices","input[global_idx]");e===1?r.push(a):n===0?r.push(`if (output_number == ${n}u) { ${a} }`):n===e-1?r.push(`else { ${a} }`):r.push(`else if (output_number == ${n}) { ${a} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Ef=(t,e)=>{let r=t[0].dims,n=X.size(r),a=t[0].dataType,s=X.normalizeAxis(e.axis,r.length),i=new Array(e.numOutputs),o=Z("input",a,r.length),l=new Array(e.numOutputs),u=[],d=[],h=0,f=[{type:12,data:n}];for(let p=0;p<e.numOutputs;p++){h+=e.splitSizes[p],l[p]=h;let w=r.slice();w[e.axis]=e.splitSizes[p],d.push(w),i[p]=_e(`output${p}`,a,w.length),u.push({dims:d[p],dataType:t[0].dataType})}f.push({type:12,data:l},...we(r,...d));let g=p=>`
  ${p.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...i)}
  ${Sf(l.length)}
  ${kf(i)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${o.offsetToIndices("global_idx")};
    var index = ${o.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ke("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${o.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:f})}},Cf=(t,e)=>{$f(t.inputs);let r=t.inputs.length===1?e:xf(t.inputs,e);t.compute(Ef(t.inputs,r),{inputs:[0]})},Tf=t=>{let e=t.axis,r=t.splitSizes,n=t.numOutputs<0?r.length:t.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ke({axis:e,numOutputs:n,splitSizes:r})}}),Ro,Af,If,Mf,Of,fw=te(()=>{xe(),Oe(),Ie(),Ro=t=>Array.from(t.getBigInt64Array(),Number),Af=t=>{if(!t||t.length!==2)throw new Error("Tile requires 2 inputs.");if(t[0].dataType!==1&&t[0].dataType!==6&&t[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(t[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(t[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Ro(t[1]).length!==t[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},If=(t,e)=>{let r=[];for(let n=0;n<t.length;++n)r.push(t[n]*e[n]);return r},Mf=t=>{let e=t[0].dims,r=Ro(t[1]),n=If(e,r),a=X.size(n),s=t[0].dataType,i=Z("input",s,e.length),o=_e("output",s,n.length),l=u=>`
      const inputShape = ${i.indices(...e)};
      ${u.registerUniform("output_size","u32").declareVariables(i,o)}
      ${u.mainStart()}
      ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${o.offsetToIndices("global_idx")};
      var input_indices: ${i.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${i.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${o.indicesGet("output_indices","i")}  % input_dim_i;

        ${i.indicesSet("input_indices","i","input_dim_value")}
      }
      ${o.setByOffset("global_idx",i.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...we(t[0].dims,n)]}),getShaderSource:l}},Of=t=>{Af(t.inputs),t.compute(Mf(t.inputs),{inputs:[0]})}}),zf,Pf,Rf,mw=te(()=>{xe(),Oe(),Ie(),zf=(t,e,r,n,a)=>{let s=_e("output_data",a,r.length,4),i=Z("a_data",e[1].dataType,e[1].dims.length,4),o=Z("b_data",e[2].dataType,e[2].dims.length,4),l=Z("c_data",e[0].dataType,e[0].dims.length,4),u,d=(h,f,g)=>`select(${f}, ${h}, ${g})`;if(!n)u=s.setByOffset("global_idx",d(i.getByOffset("global_idx"),o.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let h=(f,g,p="")=>{let w=`a_data[index_a${g}][component_a${g}]`,v=`b_data[index_b${g}][component_b${g}]`,S=`bool(c_data[index_c${g}] & (0xffu << (component_c${g} * 8)))`;return`
            let output_indices${g} = ${s.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${i.broadcastedIndicesToOffset(`output_indices${g}`,s)};
            let offset_b${g} = ${o.broadcastedIndicesToOffset(`output_indices${g}`,s)};
            let offset_c${g} = ${l.broadcastedIndicesToOffset(`output_indices${g}`,s)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            let component_c${g} = offset_c${g} % 4u;
            ${f}[${g}] = ${p}(${d(w,v,S)});
          `};a===9?u=`
            var data = vec4<u32>(0);
            ${h("data",0,"u32")}
            ${h("data",1,"u32")}
            ${h("data",2,"u32")}
            ${h("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:u=`
            ${h("output_data[global_idx]",0)}
            ${h("output_data[global_idx]",1)}
            ${h("output_data[global_idx]",2)}
            ${h("output_data[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(l,i,o,s)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${u}
      }`},Pf=t=>{let e=t[1].dims,r=t[2].dims,n=t[0].dims,a=t[1].dataType,s=!(X.areEqual(e,r)&&X.areEqual(r,n)),i=e,o=X.size(e);if(s){let u=xn.calcShape(xn.calcShape(e,r,!1),n,!1);if(!u)throw new Error("Can't perform where op on the given tensors");i=u,o=X.size(i)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:u=>zf(u,t,i,s,a),getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...we(n,e,r,i)]})}},Rf=t=>{t.compute(Pf(t.inputs))}}),Bf,gw=te(()=>{Dy(),qd(),Ny(),Fy(),Ly(),Uy(),Ld(),pp(),jy(),qy(),Ky(),Yy(),Xy(),Qy(),Zy(),Jy(),ew(),tw(),rw(),lp(),nw(),aw(),iw(),sw(),ow(),eo(),lw(),uw(),dw(),cw(),pw(),hw(),fw(),ia(),so(),mw(),Bf=new Map([["Abs",[rc]],["Acos",[nc]],["Acosh",[ac]],["Add",[Wc]],["ArgMax",[Pd,ro]],["ArgMin",[zd,ro]],["Asin",[ic]],["Asinh",[sc]],["Atan",[oc]],["Atanh",[lc]],["Attention",[jd]],["AveragePool",[Mh,Ih]],["BatchNormalization",[Qd]],["BiasAdd",[ec]],["BiasSplitGelu",[Fc]],["Cast",[dc,uc]],["Ceil",[hc]],["Clip",[pc]],["Concat",[Nd,Fd]],["Conv",[yo,_o]],["ConvTranspose",[Sp,wp]],["Cos",[fc]],["Cosh",[mc]],["CumSum",[Ep,Cp]],["DepthToSpace",[Mp,Op]],["Div",[Vc]],["Einsum",[Np,Fp]],["Elu",[gc,vi]],["Equal",[Gc]],["Erf",[_c]],["Exp",[yc]],["Expand",[Vp]],["FastGelu",[Hp]],["Floor",[wc]],["FusedConv",[yo,_o]],["Gather",[Yp,Kp]],["GatherElements",[Jp,Zp]],["Gelu",[bc]],["Gemm",[nh,rh]],["GlobalAveragePool",[zh,Oh]],["GlobalMaxPool",[Dh,Bh]],["Greater",[Kc]],["GreaterOrEqual",[Xc]],["HardSigmoid",[Tc,Cc]],["InstanceNormalization",[oh]],["LayerNormalization",[dh]],["LeakyRelu",[vc,vi]],["Less",[Yc]],["LessOrEqual",[Qc]],["Log",[Bc]],["MatMul",[op]],["MatMulNBits",[hh,fh]],["MaxPool",[Ph,Rh]],["Mul",[Hc]],["MultiHeadAttention",[yh,gh]],["Neg",[xc]],["Not",[$c]],["Pad",[Ch]],["Pow",[jc]],["Range",[Lh]],["Reciprocal",[Sc]],["ReduceMin",[Td]],["ReduceMean",[xd]],["ReduceMax",[Cd]],["ReduceSum",[Id]],["ReduceProd",[Ad]],["ReduceL1",[Sd]],["ReduceL2",[kd]],["ReduceLogSum",[Od]],["ReduceLogSumExp",[Ed]],["ReduceSumSquare",[Md]],["Relu",[kc]],["Resize",[nf,af]],["RotaryEmbedding",[lf]],["Sigmoid",[Ec]],["Sin",[Ac]],["Sinh",[Ic]],["Slice",[gf,_f]],["SkipLayerNormalization",[cf]],["Split",[Cf,Tf]],["Sqrt",[Mc]],["Softmax",[bf,vf]],["Sub",[qc]],["Tan",[Oc]],["Tanh",[zc]],["ThresholdedRelu",[Rc,vi]],["Tile",[Of]],["Transpose",[Gu,Hu]],["Where",[Rf]]])}),Df,_w=te(()=>{rr(),Qr(),Ie(),Df=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,e){this.repo.set(t,e)}run(t,e,r,n,a){tr(t.programInfo.name);let s=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let o=[];for(let u of e)o.push({binding:o.length,resource:{buffer:u.buffer}});for(let u of r)o.push({binding:o.length,resource:{buffer:u.buffer}});a&&o.push({binding:o.length,resource:a});let l=s.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:o,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let u={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:l,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(u)}i.setPipeline(t.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Xt(t.programInfo.name)}dispose(){}build(t,e){tr(t.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let a=Lu(e,this.backend.device.limits),s=t.getShaderSource(a),i=`${n.join(`
`)}
${a.additionalImplementations}
${s}`,o=r.createShaderModule({code:i,label:t.name});nt("verbose",()=>`[WebGPU] ${t.name} shader code: ${i}`);let l=r.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:t.name});return Xt(t.name),{programInfo:t,computePipeline:l,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(t){let e=typeof t=="number"?t:t.x,r=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=a&&r<=a&&n<=a)return[e,r,n];let s=e*r*n,i=Math.ceil(Math.sqrt(s));if(i>a){if(i=Math.ceil(Math.cbrt(s)),i>a)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),Nf,Ff,Lf,Uf,yw=te(()=>{rr(),xe(),Qr(),Py(),Ry(),gw(),_w(),Nf=(t,e)=>{if(e.length!==t.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${t.length}.`);let r=[];for(let n=0;n<t.length;++n){let a=t[n].dataType;switch(e[n]){case"none":{r.push("");break}case"type":{r.push(`${a}`);break}case"rank":{let s=t[n].dims.length;r.push(`${a};${s}`);break}case"dims":{let s=t[n].dims.join(",");r.push(`${a};${s}`);break}default:throw new Error(`unsupported input dependency: ${e[n]}`)}}return r.join("|")},Ff=(t,e,r)=>{var a,s;let n=t.name;return(a=t.shaderCache)!=null&&a.hint&&(n+="["+t.shaderCache.hint+"]"),n+=":"+r+`:${Nf(e,((s=t.shaderCache)==null?void 0:s.inputDependencies)??new Array(e.length).fill("dims"))}`,n},Lf=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Uf=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,e){this.env=t;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize,maxBufferSize:e.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:e.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:e.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:e.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:e.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};e.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):e.features.has("timestamp-query")&&r.push("timestamp-query"),e.features.has("shader-f16")&&r.push("shader-f16"),this.device=await e.requestDevice(n),this.adapterInfo=new Lf(await e.requestAdapterInfo()),this.gpuDataManager=Ru(this),this.programManager=new Df(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Au(t.logLevel,!!t.debug),this.device.onuncapturederror=a=>{a.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${a.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;tr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{var n;let e=new BigUint64Array(t.getMappedRange()),r=this.pendingQueries.get(t);for(let a=0;a<e.length/2;a++){let s=r[a],i=s.kernelId,o=this.kernels.get(i),l=o.kernelType,u=o.kernelName,d=s.programName,h=s.inputTensorViews,f=s.outputTensorViews,g=e[a*2],p=e[a*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let w=Number(g-this.queryTimeBase),v=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(v))throw new RangeError("incorrect timestamp range");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:h.map(S=>({dims:S.dims,dataType:Xr(S.dataType)})),outputsMetadata:f.map(S=>({dims:S.dims,dataType:Xr(S.dataType)})),kernelId:i,kernelType:l,kernelName:u,programName:d,startTime:w,endTime:v});else{let S="";h.forEach((E,T)=>{S+=`input[${T}]: [${E.dims}] | ${Xr(E.dataType)}, `});let $="";f.forEach((E,T)=>{$+=`output[${T}]: [${E.dims}] | ${Xr(E.dataType)}, `}),console.log(`[profiling] kernel "${i}|${l}|${u}|${d}" ${S}${$}execution time: ${v-w} ns`)}ea("GPU",`${d}::${g}::${p}`)}t.unmap(),this.pendingQueries.delete(t)}),Xt()}run(t,e,r,n,a,s){tr(t.name);let i=[];for(let $=0;$<e.length;++$){let E=e[$].data;if(E===0)continue;let T=this.gpuDataManager.get(E);if(!T)throw new Error(`no GPU data for input: ${E}`);i.push(T)}let{outputs:o,dispatchGroup:l,programUniforms:u}=t.getRunData(e),d=r.length===0?o.map(($,E)=>E):r;if(d.length!==o.length)throw new Error(`Output size ${d.length} must be equal to ${o.length}.`);let h=[],f=[];for(let $=0;$<o.length;++$){if(!Number.isInteger(d[$])||d[$]<-3||d[$]>=s)throw new Error(`Invalid output index: ${d[$]}`);if(d[$]===-3)continue;let E=d[$]===-1,T=d[$]===-2,A=E||T?a(o[$].dataType,o[$].dims):n(d[$],o[$].dataType,o[$].dims);if(h.push(A),A.data===0)continue;let z=this.gpuDataManager.get(A.data);if(!z)throw new Error(`no GPU data for output: ${A.data}`);if(E&&this.temporaryData.push(z),T){let R=this.kernelPersistentData.get(this.currentKernelId);R||(R=[],this.kernelPersistentData.set(this.currentKernelId,R)),R.push(z)}f.push(z)}if(i.length!==e.length||f.length!==h.length){if(f.length===0)return Xt(t.name),h;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let g;if(u){let $=0,E=[];u.forEach(R=>{let G=typeof R.data=="number"?[R.data]:R.data;if(G.length===0)return;let j=R.type===10?2:4,q,ue;R.type===10?(ue=G.length>4?16:G.length>2?8:G.length*j,q=G.length>4?16:j*G.length):(ue=G.length<=2?G.length*j:16,q=16),$=Math.ceil($/ue)*ue,E.push($);let re=R.type===10?8:4;$+=G.length>4?Math.ceil(G.length/re)*q:G.length*j});let T=16;$=Math.ceil($/T)*T;let A=new ArrayBuffer($);u.forEach((R,G)=>{let j=E[G],q=typeof R.data=="number"?[R.data]:R.data;if(R.type===6)new Int32Array(A,j,q.length).set(q);else if(R.type===12)new Uint32Array(A,j,q.length).set(q);else if(R.type===10)new Uint16Array(A,j,q.length).set(q);else if(R.type===1)new Float32Array(A,j,q.length).set(q);else throw new Error(`Unsupported uniform type: ${Xr(R.type)}`)});let z=this.gpuDataManager.create($,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(z.buffer,0,A,0,$),this.gpuDataManager.release(z.id),g={offset:0,size:$,buffer:z.buffer}}let p=this.programManager.normalizeDispatchGroupSize(l),w=p[1]===1&&p[2]===1,v=Ff(t,e,w),S=this.programManager.getArtifact(v);if(S||(S=this.programManager.build(t,p),this.programManager.setArtifact(v,S),nt("info",()=>`[artifact] key: ${v}, programName: ${t.name}`)),u&&S.uniformVariablesInfo){if(u.length!==S.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${S.uniformVariablesInfo.length}, got ${u.length} in program "${S.programInfo.name}".`);for(let $=0;$<u.length;$++){let E=u[$],T=E.type,A=typeof E.data=="number"?1:E.data.length,[z,R]=S.uniformVariablesInfo[$];if(T!==z||A!==R)throw new Error(`Uniform variable ${$} mismatch: expect type ${z} with size ${R}, got type ${T} with size ${A} in program "${S.programInfo.name}".`)}}if(nt("info",()=>`[ProgramManager] run "${t.name}" (key=${v}) with ${p[0]}x${p[1]}x${p[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let $={kernelId:this.currentKernelId,programName:S.programInfo.name,inputTensorViews:e,outputTensorViews:h};this.pendingKernels.push($),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push($)}return this.programManager.run(S,i,f,p,g),Xt(t.name),h}upload(t,e){this.gpuDataManager.upload(t,e)}memcpy(t,e){this.gpuDataManager.memcpy(t,e)}async download(t,e){await this.gpuDataManager.download(t,e)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,e,r,n){let a=Bf.get(t);if(!a)throw new Error(`kernel not implemented: ${t}`);let s={kernelType:t,kernelName:n,kernelEntry:a[0],attributes:[a[1],r]};this.kernels.set(e,s)}releaseKernel(t){let e=this.kernelPersistentData.get(t);if(e){for(let r of e)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,e,r){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let a=n.kernelType,s=n.kernelName,i=n.kernelEntry,o=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${a}] ${s}" is not allowed to be called recursively`);this.currentKernelId=t,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),nt("info",()=>`[WebGPU] Start to run kernel "[${a}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(e,o[1]),0}catch(u){return r.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${s}" failed. ${u}`)),1}finally{l&&r.push(this.device.popErrorScope().then(u=>u?`GPU validation error for kernel "[${a}] ${s}": ${u.message}`:null));for(let u of this.temporaryData)this.gpuDataManager.release(u.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,e,r,n){let a=this.sessionExternalDataMapping.get(t);a||(a=new Map,this.sessionExternalDataMapping.set(t,a));let s=a.get(e),i=this.gpuDataManager.registerExternalBuffer(r,n,s==null?void 0:s[1]);return a.set(e,[i,r]),i}unregisterBuffers(t){let e=this.sessionExternalDataMapping.get(t);e&&(e.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let e=this.gpuDataManager.get(t);if(!e)throw new Error(`no GPU data for buffer: ${t}`);return e.buffer}createDownloader(t,e,r){return async()=>{let n=await Ks(this,t,e);return Mu(n.buffer,r)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){var t;this.queryType="none",(((t=this.env.webgpu.profiling)==null?void 0:t.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){nt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){nt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){nt("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),e=this.capturedPendingKernels.get(this.currentSessionId),r=t.length;this.pendingKernels=[];for(let n=0;n<r;n++){let a=this.getComputePassEncoder(),s=t[n];this.writeTimestamp(this.pendingDispatchNumber*2),a.setPipeline(s.computePipeline),a.setBindGroup(0,s.bindGroup),a.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(e[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),Wf={};$n(Wf,{init:()=>Gf});var Ii,Vf,Gf,ww=te(()=>{xe(),yw(),Qr(),Oe(),Ii=class L0{constructor(e,r,n,a){this.module=e,this.dataType=r,this.data=n,this.dims=a}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=X.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=X.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=X.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(X.size(e)!==X.size(this.dims))throw new Error("Invalid new shape");return new L0(this.module,this.dataType,this.data,e)}},Vf=class{constructor(t,e,r){this.module=t,this.backend=e,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=e.adapterInfo;let n=t.HEAPU32,a=r>>>2;this.opKernelContext=n[a++];let s=n[a++];this.outputCount=n[a++],this.customDataOffset=n[a++],this.customDataSize=n[a++];let i=[];for(let o=0;o<s;o++){let l=n[a++],u=n[a++],d=n[a++],h=[];for(let f=0;f<d;f++)h.push(n[a++]);i.push(new Ii(t,l,u,h))}this.inputs=i}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,e){var i;let r=((i=e==null?void 0:e.inputs)==null?void 0:i.map(o=>typeof o=="number"?this.inputs[o]:o))??this.inputs,n=(e==null?void 0:e.outputs)??[],a=(o,l,u)=>new Ii(this.module,l,this.output(o,u),u),s=(o,l)=>{let u=na(o);if(!u)throw new Error(`Unsupported data type: ${o}`);let d=u*X.size(l),h=d>0?this.backend.gpuDataManager.create(d).id:0;return new Ii(this.module,o,h,l)};return this.backend.run(t,r,n,a,s,this.outputCount)}output(t,e){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+e.length)*4),a=n>>2;this.module.HEAPU32[a++]=e.length;for(let s=0;s<e.length;s++)this.module.HEAPU32[a++]=e[s];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel's output[${t}] with dims [${e}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},Gf=async(t,e,r,n)=>{let a=e.jsepInit;if(!a)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(t==="webgpu"){let s=new Uf;await s.initialize(r,n),a("webgpu",[s,i=>s.alloc(i),i=>s.free(i),(i,o,l,u=!1)=>{if(u)nt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${o}, size=${l}`),s.memcpy(i,o);else{nt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${o}, size=${l}`);let d=e.HEAPU8.subarray(i>>>0,(i>>>0)+l);s.upload(o,d)}},async(i,o,l)=>{nt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${o}, size=${l}`),await s.download(i,()=>e.HEAPU8.subarray(o>>>0,(o>>>0)+l))},(i,o,l)=>s.createKernel(i,o,l,e.UTF8ToString(e._JsepGetNodeName(o))),i=>s.releaseKernel(i),(i,o,l,u)=>{nt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${l}, kernel=${i}, contextDataOffset=${o}`);let d=new Vf(e,s,o);return s.computeKernel(i,d,u)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else a("webnn")}}),Hf,jf,qf,Nr,Kf,Bo,Yf,Xf,Do,Qf,Zf,Jf,bw=te(()=>{Oy(),zy(),xe(),ra(),Ls(),Su(),Hf=(t,e)=>{it()._OrtInit(t,e)!==0&&qe("Can't initialize onnxruntime.")},jf=async t=>{Hf(t.wasm.numThreads,ci(t.logLevel))},qf=async(t,e)=>{{let r=(ww(),qr(Wf)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=t.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let a=t.webgpu.powerPreference;if(a!==void 0&&a!=="low-power"&&a!=="high-performance")throw new Error(`Invalid powerPreference setting: "${a}"`);let s=t.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:a,forceFallbackAdapter:s}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",it(),t,n)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",it(),t)}}},Nr=new Map,Kf=t=>{let e=it(),r=e.stackSave();try{let n=e.stackAlloc(8);return e._OrtGetInputOutputCount(t,n,n+4)!==0&&qe("Can't get session input/output count."),[e.HEAP32[n/4],e.HEAP32[n/4+1]]}finally{e.stackRestore(r)}},Bo=t=>{let e=it(),r=e._malloc(t.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return e.HEAPU8.set(t,r),[r,t.byteLength]},Yf=async(t,e)=>{var h,f;let r,n,a=it();Array.isArray(t)?[r,n]=t:t.buffer===a.HEAPU8.buffer?[r,n]=[t.byteOffset,t.byteLength]:[r,n]=Bo(t);let s=0,i=0,o=0,l=[],u=[],d=[];try{if([i,l]=xu(e),(e==null?void 0:e.externalData)&&a.mountExternalData){let T=[];for(let A of e.externalData){let z=typeof A=="string"?A:A.path;T.push(pi(typeof A=="string"?A:A.data).then(R=>{a.mountExternalData(z,R)}))}await Promise.all(T)}s=await a._OrtCreateSession(r,n,i),s===0&&qe("Can't create a session.");let[g,p]=Kf(s),w=!!(e!=null&&e.enableGraphCapture),v=[],S=[],$=[];for(let T=0;T<g;T++){let A=a._OrtGetInputName(s,T);A===0&&qe("Can't get an input name."),u.push(A),v.push(a.UTF8ToString(A))}for(let T=0;T<p;T++){let A=a._OrtGetOutputName(s,T);A===0&&qe("Can't get an output name."),d.push(A);let z=a.UTF8ToString(A);S.push(z);{if(w&&(e==null?void 0:e.preferredOutputLocation)===void 0){$.push("gpu-buffer");continue}let R=typeof(e==null?void 0:e.preferredOutputLocation)=="string"?e.preferredOutputLocation:((h=e==null?void 0:e.preferredOutputLocation)==null?void 0:h[z])??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}.`);if(w&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);$.push(R)}}let E=null;return $.some(T=>T==="gpu-buffer")&&(o=a._OrtCreateBinding(s),o===0&&qe("Can't create IO binding."),E={handle:o,outputPreferredLocations:$,outputPreferredLocationsEncoded:$.map(T=>Gs(T))}),Nr.set(s,[s,u,d,E,w,!1]),[s,v,S]}catch(g){throw u.forEach(p=>a._OrtFree(p)),d.forEach(p=>a._OrtFree(p)),o!==0&&a._OrtReleaseBinding(o),s!==0&&a._OrtReleaseSession(s),g}finally{a._free(r),i!==0&&a._OrtReleaseSessionOptions(i),l.forEach(g=>a._free(g)),(f=a.unmountExternalData)==null||f.call(a)}},Xf=t=>{var l;let e=it(),r=Nr.get(t);if(!r)throw new Error(`cannot release session. invalid session id: ${t}`);let[n,a,s,i,o]=r;i&&(o&&e._OrtClearBoundOutputs(i.handle),e._OrtReleaseBinding(i.handle)),(l=e.jsepOnReleaseSession)==null||l.call(e,t),a.forEach(u=>e._OrtFree(u)),s.forEach(u=>e._OrtFree(u)),e._OrtReleaseSession(n),Nr.delete(t)},Do=(t,e,r,n,a,s=!1)=>{if(!t){e.push(0);return}let i=it(),o=t[0],l=t[1],u=t[3],d,h;if(o==="string"&&u==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s&&u!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if(u==="gpu-buffer"){let p=t[2].gpuBuffer,w=na(Us(o));h=l.reduce((S,$)=>S*$,1)*w;let v=i.jsepRegisterBuffer;if(!v)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');d=v(n,a,p,h)}else{let p=t[2];if(Array.isArray(p)){h=4*p.length,d=i._malloc(h),r.push(d);let w=d/4;for(let v=0;v<p.length;v++){if(typeof p[v]!="string")throw new TypeError(`tensor data at index ${v} is not a string`);i.HEAPU32[w++]=rt(p[v],r)}}else h=p.byteLength,d=i._malloc(h),r.push(d),i.HEAPU8.set(new Uint8Array(p.buffer,p.byteOffset,h),d)}let f=i.stackSave(),g=i.stackAlloc(4*l.length);try{let p=g/4;l.forEach(v=>i.HEAP32[p++]=v);let w=i._OrtCreateTensor(Us(o),d,h,g,l.length,Gs(u));w===0&&qe(`Can't create tensor for input/output. session=${n}, index=${a}.`),e.push(w)}finally{i.stackRestore(f)}},Qf=async(t,e,r,n,a,s)=>{var q,ue;let i=it(),o=Nr.get(t);if(!o)throw new Error(`cannot run inference. invalid session id: ${t}`);let l=o[0],u=o[1],d=o[2],h=o[3],f=o[4],g=o[5],p=e.length,w=n.length,v=0,S=[],$=[],E=[],T=[],A=i.stackSave(),z=i.stackAlloc(p*4),R=i.stackAlloc(p*4),G=i.stackAlloc(w*4),j=i.stackAlloc(w*4);try{[v,S]=yu(s);for(let K=0;K<p;K++)Do(r[K],$,T,t,e[K],f);for(let K=0;K<w;K++)Do(a[K],E,T,t,p+n[K],f);let re=z/4,ee=R/4,le=G/4,N=j/4;for(let K=0;K<p;K++)i.HEAPU32[re++]=$[K],i.HEAPU32[ee++]=u[e[K]];for(let K=0;K<w;K++)i.HEAPU32[le++]=E[K],i.HEAPU32[N++]=d[n[K]];if(h&&!g){let{handle:K,outputPreferredLocations:de,outputPreferredLocationsEncoded:ae}=h;if(u.length!==p)throw new Error(`input count from feeds (${p}) is expected to be always equal to model's input count (${u.length}).`);for(let D=0;D<p;D++){let ie=e[D];await i._OrtBindInput(K,u[ie],$[D])!==0&&qe(`Can't bind input[${D}] for session=${t}.`)}for(let D=0;D<w;D++){let ie=n[D];(q=a[D])!=null&&q[3]?i._OrtBindOutput(K,d[ie],E[D],0)!==0&&qe(`Can't bind pre-allocated output[${D}] for session=${t}.`):i._OrtBindOutput(K,d[ie],0,ae[ie])!==0&&qe(`Can't bind output[${D}] to ${de[D]} for session=${t}.`)}Nr.set(t,[l,u,d,h,f,!0])}(ue=i.jsepOnRunStart)==null||ue.call(i,l);let O;h?O=await i._OrtRunWithBinding(l,h.handle,w,G,v):O=await i._OrtRun(l,R,z,p,j,w,G,v),O!==0&&qe("failed to call OrtRun().");let V=[];for(let K=0;K<w;K++){let de=i.HEAPU32[G/4+K];if(de===E[K]){V.push(a[K]);continue}let ae=i.stackSave(),D=i.stackAlloc(4*4),ie=!1,he,Se=0;try{i._OrtGetTensorData(de,D,D+4,D+8,D+12)!==0&&qe(`Can't access output tensor data on index ${K}.`);let Te=D/4,Xe=i.HEAPU32[Te++];Se=i.HEAPU32[Te++];let ot=i.HEAPU32[Te++],je=i.HEAPU32[Te++],ht=[];for(let We=0;We<je;We++)ht.push(i.HEAPU32[ot/4+We]);i._OrtFree(ot);let ut=ht.reduce((We,Ze)=>We*Ze,1);he=Xr(Xe);let bt=h==null?void 0:h.outputPreferredLocations[n[K]];if(he==="string"){if(bt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let We=[],Ze=Se/4;for(let Rt=0;Rt<ut;Rt++){let dt=i.HEAPU32[Ze++],Ar=Rt===ut-1?void 0:i.HEAPU32[Ze]-dt;We.push(i.UTF8ToString(dt,Ar))}V.push([he,ht,We,"cpu"])}else if(bt==="gpu-buffer"&&ut>0){let We=i.jsepGetBuffer;if(!We)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Ze=We(Se),Rt=na(Xe);if(Rt===void 0||!Vs(he))throw new Error(`Unsupported data type: ${he}`);ie=!0,V.push([he,ht,{gpuBuffer:Ze,download:i.jsepCreateDownloader(Ze,ut*Rt,he),dispose:()=>{i._OrtReleaseTensor(de)}},"gpu-buffer"])}else{let We=Ws(he),Ze=new We(ut);new Uint8Array(Ze.buffer,Ze.byteOffset,Ze.byteLength).set(i.HEAPU8.subarray(Se,Se+Ze.byteLength)),V.push([he,ht,Ze,"cpu"])}}finally{i.stackRestore(ae),he==="string"&&Se&&i._free(Se),ie||i._OrtReleaseTensor(de)}}return h&&!f&&(i._OrtClearBoundOutputs(h.handle),Nr.set(t,[l,u,d,h,f,!1])),V}finally{i.stackRestore(A),$.forEach(re=>i._OrtReleaseTensor(re)),E.forEach(re=>i._OrtReleaseTensor(re)),T.forEach(re=>i._free(re)),v!==0&&i._OrtReleaseRunOptions(v),S.forEach(re=>i._free(re))}},Zf=t=>{let e=it(),r=Nr.get(t);if(!r)throw new Error("invalid session id");let n=r[0],a=e._OrtEndProfiling(n);a===0&&qe("Can't get an profile file name."),e._OrtFree(a)},Jf=t=>{let e=[];for(let r of t){let n=r[2];!Array.isArray(n)&&"buffer"in n&&e.push(n.buffer)}return e}}),vw=vn((t,e)=>{e.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var nl=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var il=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ol(t))!il.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=nl(t,i))||o.enumerable});return e};var wr=e=>al(ao({},"__esModule",{value:!0}),e);var so={};gn(so,{createReadStream:()=>Ai,readFile:()=>sl,readFileSync:()=>ul});var sl,ul,Ai,uo=Y(()=>{sl=void 0,ul=void 0,Ai=void 0});var lo={};gn(lo,{join:()=>dl});var dl,co=Y(()=>{dl=void 0});var Ei=Wr((Ti,po)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){var r=t,o,i,u=new Promise((s,m)=>{o=s,i=m});r.mountExternalData=(s,m)=>{(r.eb||(r.eb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.eb};let a=()=>{let s=(g,$,T)=>(...B)=>{let H=dt,q=$?.();B=g(...B);let te=$?.();return q!==te&&(g=te,T(q),$=T=null),dt!=H?tn():B},m=g=>async(...$)=>{try{if(r.cb)throw Error("Session already started");let T=r.cb={xb:$[0],errors:[]},B=await g(...$);if(r.cb!==T)throw Error("Session mismatch");r.kb?.flush();let H=T.errors;if(0<H.length){let q=await Promise.all(H);if(q=q.filter(te=>te),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.cb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),a=void 0};r.jsepInit=(s,m)=>{if(a?.(),s==="webgpu"){[r.kb,r.pb,r.tb,r.lb,r.sb,r.Ra,r.ub,r.wb,r.qb,r.rb,r.vb]=m;let g=r.kb;r.jsepRegisterBuffer=($,T,B,H)=>g.registerBuffer($,T,B,H),r.jsepGetBuffer=$=>g.getBuffer($),r.jsepCreateDownloader=($,T,B)=>g.createDownloader($,T,B),r.jsepOnReleaseSession=$=>{g.onReleaseSession($)},r.jsepOnRunStart=$=>g.onRunStart($)}};var c=Object.assign({},r),p="./this.program",h=(s,m)=>{throw m},d=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="",v,S,A;if(w){var I=(uo(),wr(so)),x=(co(),wr(lo));_=y?x.dirname(_)+"/":__dirname+"/",v=(s,m)=>(s=Ke(s)?new URL(s):x.normalize(s),I.readFileSync(s,m?void 0:"utf8")),A=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,m,g,$=!0)=>{s=Ke(s)?new URL(s):x.normalize(s),I.readFile(s,$?void 0:"utf8",(T,B)=>{T?g(T):m($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(s,m)=>{throw process.exitCode=s,m}}else(d||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),v=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},y&&(A=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),S=(s,m,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):g()},$.onerror=g,$.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,c),c=null;var O,R=!1,L,N,K,Q,he,W,se,Ce,We,ee,ae;function Ae(){var s=O.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=Q=new Int16Array(s),r.HEAPU8=K=new Uint8Array(s),r.HEAPU16=he=new Uint16Array(s),r.HEAP32=W=new Int32Array(s),r.HEAPU32=se=new Uint32Array(s),r.HEAPF32=Ce=new Float32Array(s),r.HEAPF64=ae=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var me=[],ie=[],ue=[],le=0,qe=null,G=null;function ne(s){throw s="Aborted("+s+")",P(s),R=!0,L=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var xe=s=>s.startsWith("data:application/octet-stream;base64,"),Ke=s=>s.startsWith("file://"),Be;if(Be="ort-wasm-simd.wasm",!xe(Be)){var Ge=Be;Be=r.locateFile?r.locateFile(Ge,_):_+Ge}function Ut(s){if(A)return A(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(d||y){if(typeof fetch=="function"&&!Ke(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at \'${s}\'`;return m.arrayBuffer()}).catch(()=>Ut(s));if(S)return new Promise((m,g)=>{S(s,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Ut(s))}function Ye(s,m,g){return Ne(s).then($=>WebAssembly.instantiate($,m)).then(g,$=>{P(`failed to asynchronously prepare wasm: ${$}`),ne($)})}function mt(s,m){var g=Be;return typeof WebAssembly.instantiateStreaming!="function"||xe(g)||Ke(g)||w||typeof fetch!="function"?Ye(g,s,m):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(m,function(T){return P(`wasm streaming compile failed: ${T}`),P("falling back to ArrayBuffer instantiation"),Ye(g,s,m)}))}var Rt={824920:(s,m,g,$)=>{if(typeof r>"u"||!r.eb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.eb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return K.set(s.subarray(m,m+g),$>>>0>>>0),0}catch{return 4}},825421:()=>{r.qb()},825452:()=>{r.rb()},825481:()=>{r.vb()},825506:s=>r.pb(s),825539:s=>r.tb(s),825571:(s,m,g)=>{r.lb(s,m,g,!0)},825610:(s,m,g)=>{r.lb(s,m,g)},825643:s=>{r.Ra("Abs",s,void 0)},825694:s=>{r.Ra("Neg",s,void 0)},825745:s=>{r.Ra("Floor",s,void 0)},825798:s=>{r.Ra("Ceil",s,void 0)},825850:s=>{r.Ra("Reciprocal",s,void 0)},825908:s=>{r.Ra("Sqrt",s,void 0)},825960:s=>{r.Ra("Exp",s,void 0)},826011:s=>{r.Ra("Erf",s,void 0)},826062:s=>{r.Ra("Sigmoid",s,void 0)},826117:(s,m,g)=>{r.Ra("HardSigmoid",s,{alpha:m,beta:g})},826196:s=>{r.Ra("Log",s,void 0)},826247:s=>{r.Ra("Sin",s,void 0)},826298:s=>{r.Ra("Cos",s,void 0)},826349:s=>{r.Ra("Tan",s,void 0)},826400:s=>{r.Ra("Asin",s,void 0)},826452:s=>{r.Ra("Acos",s,void 0)},826504:s=>{r.Ra("Atan",s,void 0)},826556:s=>{r.Ra("Sinh",s,void 0)},826608:s=>{r.Ra("Cosh",s,void 0)},826660:s=>{r.Ra("Asinh",s,void 0)},826713:s=>{r.Ra("Acosh",s,void 0)},826766:s=>{r.Ra("Atanh",s,void 0)},826819:s=>{r.Ra("Tanh",s,void 0)},826871:s=>{r.Ra("Not",s,void 0)},826922:(s,m,g)=>{r.Ra("Clip",s,{min:m,max:g})},826991:s=>{r.Ra("Clip",s,void 0)},827043:(s,m)=>{r.Ra("Elu",s,{alpha:m})},827101:s=>{r.Ra("Relu",s,void 0)},827153:(s,m)=>{r.Ra("LeakyRelu",s,{alpha:m})},827217:(s,m)=>{r.Ra("ThresholdedRelu",s,{alpha:m})},827287:(s,m)=>{r.Ra("Cast",s,{to:m})},827345:s=>{r.Ra("Add",s,void 0)},827396:s=>{r.Ra("Sub",s,void 0)},827447:s=>{r.Ra("Mul",s,void 0)},827498:s=>{r.Ra("Div",s,void 0)},827549:s=>{r.Ra("Pow",s,void 0)},827600:s=>{r.Ra("Equal",s,void 0)},827653:s=>{r.Ra("Greater",s,void 0)},827708:s=>{r.Ra("GreaterOrEqual",s,void 0)},827770:s=>{r.Ra("Less",s,void 0)},827822:s=>{r.Ra("LessOrEqual",s,void 0)},827881:(s,m,g,$,T)=>{r.Ra("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828040:(s,m,g,$,T)=>{r.Ra("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828198:(s,m,g,$,T)=>{r.Ra("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828356:(s,m,g,$,T)=>{r.Ra("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828515:(s,m,g,$,T)=>{r.Ra("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828673:(s,m,g,$,T)=>{r.Ra("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828830:(s,m,g,$,T)=>{r.Ra("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828987:(s,m,g,$,T)=>{r.Ra("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829148:(s,m,g,$,T)=>{r.Ra("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829312:(s,m,g,$,T)=>{r.Ra("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829476:s=>{r.Ra("Where",s,void 0)},829529:(s,m,g)=>{r.Ra("Transpose",s,{perm:m?Array.from(W.subarray(m>>>0,g>>>0)):[]})},829637:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829770:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829903:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},830304:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},830869:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},831270:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},831835:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},831926:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832210:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},832301:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832585:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},832672:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832952:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},833039:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},833319:(s,m,g,$,T)=>{r.Ra("Gemm",s,{alpha:m,beta:g,transA:$,transB:T})},833423:s=>{r.Ra("MatMul",s,void 0)},833477:(s,m,g,$)=>{r.Ra("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833585:(s,m,g,$)=>{r.Ra("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833693:(s,m)=>{r.Ra("Softmax",s,{axis:m})},833756:(s,m)=>{r.Ra("Concat",s,{axis:m})},833816:(s,m,g,$,T)=>{r.Ra("Split",s,{axis:m,numOutputs:g,splitSizes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},833956:s=>{r.Ra("Expand",s,void 0)},834010:(s,m)=>{r.Ra("Gather",s,{axis:Number(m)})},834081:(s,m)=>{r.Ra("GatherElements",s,{axis:Number(m)})},834160:(s,m,g,$,T,B,H,q,te,X,de)=>{r.Ra("Resize",s,{antialias:m,axes:g?Array.from(W.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:je(T),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:je(te),mode:je(X),nearestMode:je(de)})},834506:(s,m,g,$,T,B,H)=>{r.Ra("Slice",s,{starts:m?Array.from(W.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(W.subarray($>>>0,T>>>0)):[],axes:B?Array.from(W.subarray(B>>>0,H>>>0)):[]})},834722:s=>{r.Ra("Tile",s,void 0)},834774:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},834885:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},834999:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835113:s=>{r.Ra("Range",s,void 0)},835166:(s,m)=>{r.Ra("Einsum",s,{equation:je(m)})},835247:(s,m,g,$,T)=>{r.Ra("Pad",s,{mode:m,value:g,pads:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},835374:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835543:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835712:(s,m,g)=>{r.Ra("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},835809:(s,m,g,$,T,B,H,q,te)=>{r.Ra("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B,qkvHiddenSizes:H?Array.from(W.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!te})},836081:s=>{r.Ra("BiasAdd",s,void 0)},836136:s=>{r.Ra("BiasSplitGelu",s,void 0)},836197:s=>{r.Ra("FastGelu",s,void 0)},836253:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe)=>{r.Ra("Conv",s,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[T],pads:B?Array.from(W.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!N[X>>>0],activation:je(de),activation_params:Ee?Array.from(Ce.subarray(Ee>>>0,Oe>>>0)):[]})},836623:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("Conv",s,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:T,kernel_shape:[B,H],pads:q?Array.from(W.subarray(q>>>0,te>>>0)):[],strides:[X,de],w_is_const:()=>!!N[Oe>>>0],activation:je(D),activation_params:be?Array.from(Ce.subarray(be>>>0,Ie>>>0)):[]})},837014:s=>{r.Ra("Gelu",s,void 0)},837066:(s,m,g,$,T,B)=>{r.Ra("MatMulNBits",s,{k:m,n:g,accuracyLevel:$,bits:T,blockSize:B})},837193:(s,m,g,$,T,B)=>{r.Ra("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B})},837352:(s,m,g,$,T)=>{r.Ra("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:T})},837491:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837593:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837695:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},837806:s=>{r.ub(s)},837840:(s,m)=>r.wb(s,m,r.cb.xb,r.cb.errors)};function qt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}class Vt{constructor(m){this.hb=m-24}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(s,m,g)=>{m>>>=0;var $=m+g;for(g=m;s[g]&&!(g>=$);)++g;if(16<g-m&&s.buffer&&xr)return xr.decode(s.subarray(m,g));for($="";m<g;){var T=s[m++];if(T&128){var B=s[m++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|B);else{var H=s[m++]&63;T=(T&240)==224?(T&15)<<12|B<<6|H:(T&7)<<18|B<<12|H<<6|s[m++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},je=(s,m)=>(s>>>=0)?Kt(K,s,m):"",Wt=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++g):m+=3}return m},at=(s,m,g,$)=>{if(g>>>=0,!(0<$))return 0;var T=g;$=g+$-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=$)break;m[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;m[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;m[g++>>>0]=224|H>>12}else{if(g+3>=$)break;m[g++>>>0]=240|H>>18,m[g++>>>0]=128|H>>12&63}m[g++>>>0]=128|H>>6&63}m[g++>>>0]=128|H&63}}return m[g>>>0]=0,g-T},Cr,ft=s=>{for(var m="";K[s>>>0];)m+=Cr[K[s++>>>0]];return m},ur={},Ar={},Ir={},st;function Tr(s,m,g={}){var $=m.name;if(!s)throw new st(`type "${$}" must have a positive integer typeid pointer`);if(Ar.hasOwnProperty(s)){if(g.nb)return;throw new st(`Cannot register type \'${$}\' twice`)}Ar[s]=m,delete Ir[s],ur.hasOwnProperty(s)&&(m=ur[s],delete ur[s],m.forEach(T=>T()))}function ht(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Tr(s,m,g)}var bt=(s,m,g)=>{switch(m){case 1:return g?$=>N[$>>>0]:$=>K[$>>>0];case 2:return g?$=>Q[$>>>1>>>0]:$=>he[$>>>1>>>0];case 4:return g?$=>W[$>>>2>>>0]:$=>se[$>>>2>>>0];case 8:return g?$=>We[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}},Er=[],Te=[];function dr(s){s>>>=0,9<s&&--Te[s+1]===0&&(Te[s]=void 0,Er.push(s))}var Xe=s=>{if(!s)throw new st("Cannot use deleted val. handle = "+s);return Te[s]},ut=s=>{switch(s){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Er.pop()||Te.length;return Te[m]=s,Te[m+1]=1,m}};function lr(s){return this.fromWireType(se[s>>>2>>>0])}var Fn={name:"emscripten::val",fromWireType:s=>{var m=Xe(s);return dr(s),m},toWireType:(s,m)=>ut(m),argPackAdvance:8,readValueFromPointer:lr,bb:null},ge=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Ce[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(ae[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}},Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(s,m)=>{for(var g=s>>1,$=g+m/2;!(g>=$)&&he[g>>>0];)++g;if(g<<=1,32<g-s&&Yt)return Yt.decode(K.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=m/2);++$){var T=Q[s+2*$>>>1>>>0];if(T==0)break;g+=String.fromCharCode(T)}return g},qn=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=m;g=g<2*s.length?g/2:s.length;for(var T=0;T<g;++T)Q[m>>>1>>>0]=s.charCodeAt(T),m+=2;return Q[m>>>1>>>0]=0,m-$},Kr=s=>2*s.length,jn=(s,m)=>{for(var g=0,$="";!(g>=m/4);){var T=W[s+4*g>>>2>>>0];if(T==0)break;++g,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},Yr=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var $=m;g=$+g-4;for(var T=0;T<s.length;++T){var B=s.charCodeAt(T);if(55296<=B&&57343>=B){var H=s.charCodeAt(++T);B=65536+((B&1023)<<10)|H&1023}if(W[m>>>2>>>0]=B,m+=4,m+4>g)break}return W[m>>>2>>>0]=0,m-$},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,m+=4}return m},cr=(s,m)=>{var g=Ar[s];if(g===void 0)throw s=Mr(s),g=ft(s),rt(s),new st(`${m} has unknown type ${g}`);return g},Pr=(s,m,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(se[m>>>2>>>0]=ut($)),s},He=s=>{try{s()}catch(m){ne(m)}},Xr=s=>{if(!R)try{s();try{L=L=s=L,r.onExit?.(s),R=!0,h(s,new qt(s))}catch(m){m instanceof qt||m=="unwind"||h(1,m)}}catch(m){m instanceof qt||m=="unwind"||h(1,m)}};function Qr(){var s=pe,m={};for(let[g,$]of Object.entries(s))m[g]=typeof $=="function"?(...T)=>{Zt.push(g);try{return $(...T)}finally{R||(Zt.pop(),dt&&gt===1&&Zt.length===0&&(gt=0,He(dn),typeof Fibers<"u"&&Fibers.Db()))}}:$;return m}var gt=0,dt=null,Bt=0,Zt=[],kr={},Or={},Jr=0,pr=null,en=[];function tn(){return new Promise((s,m)=>{pr={resolve:s,reject:m}})}function rn(){var s=Nt(65548),m=s+12;se[s>>>2>>>0]=m,se[s+4>>>2>>>0]=m+65536,m=Zt[0];var g=kr[m];return g===void 0&&(g=Jr++,kr[m]=g,Or[g]=m),W[s+8>>>2>>>0]=g,s}function nn(s){if(!R){if(gt===0){var m=!1,g=!1;s(($=0)=>{if(!R&&(Bt=$,m=!0,g)){gt=2,He(()=>vt(dt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),$=!1;try{var T=(0,pe[Or[W[dt+8>>>2>>>0]]])()}catch(q){T=q,$=!0}var B=!1;if(!dt){var H=pr;H&&(pr=null,($?H.reject:H.resolve)(T),B=!0)}if($&&!B)throw T}}),g=!0,m||(gt=1,dt=rn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),He(()=>Jt(dt)))}else gt===2?(gt=0,He(ct),rt(dt),dt=null,en.forEach(Xr)):ne(`invalid state: ${gt}`);return Bt}}function Rr(s){return nn(m=>{s().then(m)})}var Xt=[],on={},nt=s=>{var m=on[s];return m===void 0?ft(s):m},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Br=s=>{var m=Xt.length;return Xt.push(s),m},Kn=(s,m)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=cr(se[m+4*$>>>2>>>0],"parameter "+$);return g},wt=(s,m)=>Object.defineProperty(m,"name",{value:s});function Yn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=wt(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var Je=s=>s%4===0&&(s%100!==0||s%400===0),Dr=[0,31,60,91,121,152,182,213,244,274,305,335],fr=[0,31,59,90,120,151,181,212,243,273,304,334],lt=[],hr=(s,m)=>{lt.length=0;for(var g;g=K[s++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,lt.push(g==112?se[m>>>2>>>0]:g==106?We[m>>>3]:g==105?W[m>>>2>>>0]:ae[m>>>3>>>0]),m+=$?8:4}return lt},Qe={},ot=()=>{if(!Qt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in Qe)Qe[m]===void 0?delete s[m]:s[m]=Qe[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);Qt=g}return Qt},Qt,Zn=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],zr=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(s){var m=Array(Wt(s)+1);return at(s,m,0,m.length),m}function sn(s,m,g,$){function T(D,be,Ie){for(D=typeof D=="number"?D.toString():D||"";D.length<be;)D=Ie[0]+D;return D}function B(D,be){return T(D,be,"0")}function H(D,be){function Ie(Mt){return 0>Mt?-1:0<Mt?1:0}var zt;return(zt=Ie(D.getFullYear()-be.getFullYear()))===0&&(zt=Ie(D.getMonth()-be.getMonth()))===0&&(zt=Ie(D.getDate()-be.getDate())),zt}function q(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function te(D){var be=D.$a;for(D=new Date(new Date(D.ab+1900,0,1).getTime());0<be;){var Ie=D.getMonth(),zt=(Je(D.getFullYear())?an:zr)[Ie];if(be>zt-D.getDate())be-=zt-D.getDate()+1,D.setDate(1),11>Ie?D.setMonth(Ie+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+be);break}}return Ie=new Date(D.getFullYear()+1,0,4),be=q(new Date(D.getFullYear(),0,4)),Ie=q(Ie),0>=H(be,D)?0>=H(Ie,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,$>>>=0;var X=se[$+40>>>2>>>0];$={Ab:W[$>>>2>>>0],zb:W[$+4>>>2>>>0],fb:W[$+8>>>2>>>0],jb:W[$+12>>>2>>>0],gb:W[$+16>>>2>>>0],ab:W[$+20>>>2>>>0],Va:W[$+24>>>2>>>0],$a:W[$+28>>>2>>>0],Cb:W[$+32>>>2>>>0],yb:W[$+36>>>2>>>0],Bb:X?je(X):""},g=je(g),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in X)g=g.replace(new RegExp(de,"g"),X[de]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");X={"%a":D=>Ee[D.Va].substring(0,3),"%A":D=>Ee[D.Va],"%b":D=>Oe[D.gb].substring(0,3),"%B":D=>Oe[D.gb],"%C":D=>B((D.ab+1900)/100|0,2),"%d":D=>B(D.jb,2),"%e":D=>T(D.jb,2," "),"%g":D=>te(D).toString().substring(2),"%G":te,"%H":D=>B(D.fb,2),"%I":D=>(D=D.fb,D==0?D=12:12<D&&(D-=12),B(D,2)),"%j":D=>{for(var be=0,Ie=0;Ie<=D.gb-1;be+=(Je(D.ab+1900)?an:zr)[Ie++]);return B(D.jb+be,3)},"%m":D=>B(D.gb+1,2),"%M":D=>B(D.zb,2),"%n":()=>`\n`,"%p":D=>0<=D.fb&&12>D.fb?"AM":"PM","%S":D=>B(D.Ab,2),"%t":()=>"	","%u":D=>D.Va||7,"%U":D=>B(Math.floor((D.$a+7-D.Va)/7),2),"%V":D=>{var be=Math.floor((D.$a+7-(D.Va+6)%7)/7);if(2>=(D.Va+371-D.$a-2)%7&&be++,be)be==53&&(Ie=(D.Va+371-D.$a)%7,Ie==4||Ie==3&&Je(D.ab)||(be=1));else{be=52;var Ie=(D.Va+7-D.$a-1)%7;(Ie==4||Ie==5&&Je(D.ab%400-1))&&be++}return B(be,2)},"%w":D=>D.Va,"%W":D=>B(Math.floor((D.$a+7-(D.Va+6)%7)/7),2),"%y":D=>(D.ab+1900).toString().substring(2),"%Y":D=>D.ab+1900,"%z":D=>{D=D.yb;var be=0<=D;return D=Math.abs(D)/60,(be?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.Bb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in X)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),X[de]($)));return g=g.replace(/\\0\\0/g,"%"),de=Xn(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var un=Array(256),gr=0;256>gr;++gr)un[gr]=String.fromCharCode(gr);Cr=un,st=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Te.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>Te.length/2-5-Er.length;var Qn={ia:function(s,m,g){return Rr(async()=>{await r.sb(s,m,g)})},a:function(s,m,g){s>>>=0;var $=new Vt(s);throw se[$.hb+16>>>2>>>0]=0,se[$.hb+4>>>2>>>0]=m>>>0,se[$.hb+8>>>2>>>0]=g>>>0,sr=s,jt++,sr},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:bt(m,g>>>0,m.indexOf("u")==-1),bb:null})},K:function(s,m,g,$){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:function(T){return!!T},toWireType:function(T,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(K[T>>>0])},bb:null})},J:function(s){return ht(s>>>0,Fn)},B:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:ge(m,g>>>0),bb:null})},s:function(s,m,g,$,T){if(s>>>=0,g>>>=0,m=ft(m>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var B=32-8*g;T=q=>q<<B>>>B}var H=m.includes("unsigned")?function(q,te){return te>>>0}:function(q,te){return te};ht(s,{name:m,fromWireType:T,toWireType:H,argPackAdvance:8,readValueFromPointer:bt(m,g,$!==0),bb:null})},o:function(s,m,g){function $(B){return new T(N.buffer,se[B+4>>>2>>>0],se[B>>>2>>>0])}var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=ft(g>>>0),ht(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{nb:!0})},D:function(s,m){m=ft(m>>>0);var g=m==="std::string";ht(s>>>0,{name:m,fromWireType:function($){var T=se[$>>>2>>>0],B=$+4;if(g)for(var H=B,q=0;q<=T;++q){var te=B+q;if(q==T||K[te>>>0]==0){if(H=je(H,te-H),X===void 0)var X=H;else X+=String.fromCharCode(0),X+=H;H=te+1}}else{for(X=Array(T),q=0;q<T;++q)X[q]=String.fromCharCode(K[B+q>>>0]);X=X.join("")}return rt($),X},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var B=typeof T=="string";if(!(B||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var H=g&&B?Wt(T):T.length,q=Nt(4+H+1),te=q+4;if(se[q>>>2>>>0]=H,g&&B)at(T,K,te,H+1);else if(B)for(B=0;B<H;++B){var X=T.charCodeAt(B);if(255<X)throw rt(te),new st("String has UTF-16 code units that do not fit in 8 bits");K[te+B>>>0]=X}else for(B=0;B<H;++B)K[te+B>>>0]=T[B];return $!==null&&$.push(rt,q),q},argPackAdvance:8,readValueFromPointer:lr,bb($){rt($)}})},x:function(s,m,g){if(m>>>=0,g>>>=0,g=ft(g),m===2)var $=jr,T=qn,B=Kr,H=q=>he[q>>>1>>>0];else m===4&&($=jn,T=Yr,B=Zr,H=q=>se[q>>>2>>>0]);ht(s>>>0,{name:g,fromWireType:q=>{for(var te=se[q>>>2>>>0],X,de=q+4,Ee=0;Ee<=te;++Ee){var Oe=q+4+Ee*m;(Ee==te||H(Oe)==0)&&(de=$(de,Oe-de),X===void 0?X=de:(X+=String.fromCharCode(0),X+=de),de=Oe+m)}return rt(q),X},toWireType:(q,te)=>{if(typeof te!="string")throw new st(`Cannot pass non-string to C++ string type ${g}`);var X=B(te),de=Nt(4+X+m);return se[de>>>2>>>0]=X/m,T(te,de+4,X+m),q!==null&&q.push(rt,de),de},argPackAdvance:8,readValueFromPointer:lr,bb(q){rt(q)}})},L:function(s,m){m=ft(m>>>0),ht(s>>>0,{ob:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=Xe(s>>>0),m=cr(m,"emval::as"),Pr(m,g,s)},w:function(s){return s>>>=0,Rr(()=>(s=Xe(s),s.then(ut)))},n:function(s,m,g,$){return g>>>=0,$>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),s(null,m,g,$)},j:function(s,m,g,$,T){return g>>>=0,$>>>=0,T>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),g=nt(g),s(m,m[g],$,T)},b:dr,A:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),s==m},m:function(s){return s>>>=0,s===0?ut(mr()):(s=nt(s),ut(mr()[s]))},i:function(s,m,g){m=Kn(s,m>>>0);var $=m.shift();s--;var T=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],te=[$],X=0;X<s;++X)H.push("arg"+X),q.push("argType"+X),te.push(m[X]),T+=`  var arg${X} = argType${X}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[X].argPackAdvance;return T+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,$.ob||(q.push("emval_returnValue"),te.push(Pr),T+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(T+`};\n`),s=Yn(q)(...te),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${$.name}>`,Br(wt(g,s))},r:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),ut(s[m])},e:function(s){s>>>=0,9<s&&(Te[s+1]+=1)},t:function(){return ut([])},l:function(s){s=Xe(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return ut(m)},f:function(s){return ut(nt(s>>>0))},k:function(){return ut({})},h:function(s){s>>>=0;for(var m=Xe(s);m.length;){var g=m.pop();m.pop()(g)}dr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=Xe(s>>>0),m=Xe(m),g=Xe(g),s[m]=g},c:function(s,m){return m>>>=0,s=cr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),ut(s)},W:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getUTCSeconds(),W[m+4>>>2>>>0]=s.getUTCMinutes(),W[m+8>>>2>>>0]=s.getUTCHours(),W[m+12>>>2>>>0]=s.getUTCDate(),W[m+16>>>2>>>0]=s.getUTCMonth(),W[m+20>>>2>>>0]=s.getUTCFullYear()-1900,W[m+24>>>2>>>0]=s.getUTCDay(),W[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getSeconds(),W[m+4>>>2>>>0]=s.getMinutes(),W[m+8>>>2>>>0]=s.getHours(),W[m+12>>>2>>>0]=s.getDate(),W[m+16>>>2>>>0]=s.getMonth(),W[m+20>>>2>>>0]=s.getFullYear()-1900,W[m+24>>>2>>>0]=s.getDay(),W[m+28>>>2>>>0]=(Je(s.getFullYear())?Dr:fr)[s.getMonth()]+s.getDate()-1|0,W[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();W[m+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},Y:function(s){s>>>=0;var m=new Date(W[s+20>>>2>>>0]+1900,W[s+16>>>2>>>0],W[s+12>>>2>>>0],W[s+8>>>2>>>0],W[s+4>>>2>>>0],W[s>>>2>>>0],0),g=W[s+32>>>2>>>0],$=m.getTimezoneOffset(),T=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,T);return 0>g?W[s+32>>>2>>>0]=+(T!=B&&H==$):0<g!=(H==$)&&(T=Math.max(B,T),m.setTime(m.getTime()+6e4*((0<g?H:T)-$))),W[s+24>>>2>>>0]=m.getDay(),W[s+28>>>2>>>0]=(Je(m.getFullYear())?Dr:fr)[m.getMonth()]+m.getDate()-1|0,W[s>>>2>>>0]=m.getSeconds(),W[s+4>>>2>>>0]=m.getMinutes(),W[s+8>>>2>>>0]=m.getHours(),W[s+12>>>2>>>0]=m.getDate(),W[s+16>>>2>>>0]=m.getMonth(),W[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),BigInt(isNaN(s)?-1:s/1e3)},U:function(){return-52},V:function(){},N:function(s,m,g,$){g>>>=0,$>>>=0;var T=new Date().getFullYear(),B=new Date(T,0,1),H=new Date(T,6,1);T=B.getTimezoneOffset();var q=H.getTimezoneOffset();se[s>>>0>>>2>>>0]=60*Math.max(T,q),W[m>>>0>>>2>>>0]=+(T!=q),s=te=>te.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=s(B),H=s(H),q<T?(at(B,K,g,17),at(H,K,$,17)):(at(B,K,$,17),at(H,K,g,17))},v:()=>{ne("")},d:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},I:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(s){s>>>=0;var m=K.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=m*(1+.2/g);$=Math.min($,s+100663296);var T=Math;$=Math.max(s,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(T),Ae();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(s,m){s>>>=0,m>>>=0;var g=0;return ot().forEach(($,T)=>{var B=m+g;for(T=se[s+4*T>>>2>>>0]=B,B=0;B<$.length;++B)N[T++>>>0]=$.charCodeAt(B);N[T>>>0]=0,g+=$.length+1}),0},aa:function(s,m){s>>>=0,m>>>=0;var g=ot();se[s>>>2>>>0]=g.length;var $=0;return g.forEach(T=>$+=T.length+1),se[m>>>2>>>0]=$,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(s,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var T=0,B=0;B<g;B++){var H=se[m>>>2>>>0],q=se[m+4>>>2>>>0];m+=8;for(var te=0;te<q;te++){var X=K[H+te>>>0],de=Zn[s];X===0||X===10?((s===1?E:P)(Kt(de,0)),de.length=0):de.push(X)}T+=q}return se[$>>>2>>>0]=T,0},fa:sn,p:function(s,m,g,$){return sn(s>>>0,m>>>0,g>>>0,$>>>0)}},pe=function(){function s(g){return pe=g.exports,pe=Qr(),pe=ln(),O=pe.ja,Ae(),ie.unshift(pe.ka),le--,le==0&&(qe!==null&&(clearInterval(qe),qe=null),G&&(g=G,G=null,g())),pe}var m={a:Qn};if(le++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return mt(m,function(g){s(g.instance)}).catch(i),{}}(),Mr=s=>(Mr=pe.la)(s);r._OrtInit=(s,m)=>(r._OrtInit=pe.ma)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=pe.na)(s,m),r._OrtCreateSessionOptions=(s,m,g,$,T,B,H,q,te,X)=>(r._OrtCreateSessionOptions=pe.oa)(s,m,g,$,T,B,H,q,te,X),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=pe.pa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=pe.qa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=pe.ra)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=pe.sa)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=pe.ta)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=pe.ua)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=pe.va)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=pe.wa)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=pe.xa)(s,m),r._OrtFree=s=>(r._OrtFree=pe.ya)(s),r._OrtCreateTensor=(s,m,g,$,T,B)=>(r._OrtCreateTensor=pe.za)(s,m,g,$,T,B),r._OrtGetTensorData=(s,m,g,$,T)=>(r._OrtGetTensorData=pe.Aa)(s,m,g,$,T),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=pe.Ba)(s),r._OrtCreateRunOptions=(s,m,g,$)=>(r._OrtCreateRunOptions=pe.Ca)(s,m,g,$),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=pe.Da)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=pe.Ea)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=pe.Fa)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=pe.Ga)(s,m,g),r._OrtBindOutput=(s,m,g,$)=>(r._OrtBindOutput=pe.Ha)(s,m,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=pe.Ia)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=pe.Ja)(s),r._OrtRunWithBinding=(s,m,g,$,T)=>(r._OrtRunWithBinding=pe.Ka)(s,m,g,$,T),r._OrtRun=(s,m,g,$,T,B,H,q)=>(r._OrtRun=pe.La)(s,m,g,$,T,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=pe.Ma)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=pe.Na)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=pe.Oa)(s);var Nt=r._malloc=s=>(Nt=r._malloc=pe.Pa)(s),rt=r._free=s=>(rt=r._free=pe.Qa)(s),yr=s=>(yr=pe.Sa)(s),br=s=>(br=pe.Ta)(s),Ur=()=>(Ur=pe.Ua)(),Jt=s=>(Jt=pe.Wa)(s),dn=()=>(dn=pe.Xa)(),vt=s=>(vt=pe.Ya)(s),ct=()=>(ct=pe.Za)();r.___start_em_js=837952,r.___stop_em_js=838113;function ln(){var s=pe;s=Object.assign({},s);var m=g=>$=>g($)>>>0;return s.la=m(s.la),s.Pa=m(s.Pa),s.Ta=m(s.Ta),s.Ua=(g=>()=>g()>>>0)(s.Ua),s}r.stackSave=()=>Ur(),r.stackRestore=s=>yr(s),r.stackAlloc=s=>br(s),r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>at(s,K,m,g),r.lengthBytesUTF8=Wt;var Dt;G=function s(){Dt||Vr(),Dt||(G=s)};function Vr(){if(!(0<le)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();me.unshift(s)}for(;0<me.length;)me.shift()(r);if(!(0<le||Dt||(Dt=!0,r.calledRun=!0,R))){for(;0<ie.length;)ie.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return Vr(),u}})();typeof Ti=="object"&&typeof po=="object"?po.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Wr(()=>{});var ki=Wr(()=>{});var Oi={};gn(Oi,{cpus:()=>ll});var ll,Ri=Y(()=>{ll=void 0});var zi=Wr((Di,mo)=>{"use strict";var Bi=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){function r(){return ae.buffer!=ue.buffer&&Ne(),ue}function o(){return ae.buffer!=ue.buffer&&Ne(),le}function i(){return ae.buffer!=ue.buffer&&Ne(),qe}function u(){return ae.buffer!=ue.buffer&&Ne(),G}function a(){return ae.buffer!=ue.buffer&&Ne(),ne}function c(){return ae.buffer!=ue.buffer&&Ne(),xe}function p(){return ae.buffer!=ue.buffer&&Ne(),Ke}function h(){return ae.buffer!=ue.buffer&&Ne(),Ut}var d=t,y,w,_=new Promise((n,l)=>{y=n,w=l});d.mountExternalData=(n,l)=>{(d.Db||(d.Db=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Db};let v=()=>{let n=(f,b,C)=>(...k)=>{let V=ct,F=b?.();k=f(...k);let re=b?.();return F!==re&&(f=re,C(F),b=C=null),ct!=V?T():k},l=f=>async(...b)=>{try{if(d.Cb)throw Error("Session already started");let C=d.Cb={ec:b[0],errors:[]},k=await f(...b);if(d.Cb!==C)throw Error("Session mismatch");d.Kb?.flush();let V=C.errors;if(0<V.length){let F=await Promise.all(V);if(F=F.filter(re=>re),0<F.length)throw Error(F.join(`\n`))}return k}finally{d.Cb=null}};d._OrtCreateSession=n(d._OrtCreateSession,()=>d._OrtCreateSession,f=>d._OrtCreateSession=f),d._OrtRun=l(n(d._OrtRun,()=>d._OrtRun,f=>d._OrtRun=f)),d._OrtRunWithBinding=l(n(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,f=>d._OrtRunWithBinding=f)),d._OrtBindInput=n(d._OrtBindInput,()=>d._OrtBindInput,f=>d._OrtBindInput=f),v=void 0};d.jsepInit=(n,l)=>{if(v?.(),n==="webgpu"){[d.Kb,d.Wb,d.$b,d.Lb,d.Zb,d.ob,d.ac,d.cc,d.Xb,d.Yb,d.bc]=l;let f=d.Kb;d.jsepRegisterBuffer=(b,C,k,V)=>f.registerBuffer(b,C,k,V),d.jsepGetBuffer=b=>f.getBuffer(b),d.jsepCreateDownloader=(b,C,k)=>f.createDownloader(b,C,k),d.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},d.jsepOnRunStart=b=>f.onRunStart(b)}};var S=Object.assign({},d),A="./this.program",I=(n,l)=>{throw l},x=typeof window=="object",E=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function L(n){return d.locateFile?d.locateFile(n,R):R+n}var N,K,Q;if(P){var he=(uo(),wr(so)),W=(co(),wr(lo));R=E?W.dirname(R)+"/":__dirname+"/",N=(n,l)=>(n=Wt(n)?new URL(n):W.normalize(n),he.readFileSync(n,l?void 0:"utf8")),Q=n=>(n=N(n,!0),n.buffer||(n=new Uint8Array(n)),n),K=(n,l,f,b=!0)=>{n=Wt(n)?new URL(n):W.normalize(n),he.readFile(n,b?void 0:"utf8",(C,k)=>{C?f(C):l(b?k.buffer:k)})},!d.thisProgram&&1<process.argv.length&&(A=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),I=(n,l)=>{throw process.exitCode=n,l},global.Worker=Pi().Worker}else(x||E)&&(E?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.startsWith("blob:")?R="":R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1),P||(N=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},E&&(Q=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),K=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=ki().performance);var se=console.log.bind(console),Ce=console.error.bind(console);P&&(se=(...n)=>he.writeSync(1,n.join(" ")+`\n`),Ce=(...n)=>he.writeSync(2,n.join(" ")+`\n`));var We=se,ee=Ce;Object.assign(d,S),S=null;var ae,Ae,me=!1,ie,ue,le,qe,G,ne,xe,Ke,Be,Ge,Ut;function Ne(){var n=ae.buffer;d.HEAP8=ue=new Int8Array(n),d.HEAP16=qe=new Int16Array(n),d.HEAPU8=le=new Uint8Array(n),d.HEAPU16=G=new Uint16Array(n),d.HEAP32=ne=new Int32Array(n),d.HEAPU32=xe=new Uint32Array(n),d.HEAPF32=Ke=new Float32Array(n),d.HEAPF64=Ut=new Float64Array(n),d.HEAP64=Be=new BigInt64Array(n),d.HEAPU64=Ge=new BigUint64Array(n)}var Ye=16777216;if(O)ae=d.wasmMemory;else if(d.wasmMemory)ae=d.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Ye=ae.buffer.byteLength;var mt=[],Rt=[],qt=[],Vt=0,sr=null,jt=null;function xr(){if(Vt--,Vt==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Kt(n){throw n="Aborted("+n+")",ee(n),me=!0,ie=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Wt=n=>n.startsWith("file://"),at;at="ort-wasm-simd-threaded.wasm",je(at)||(at=L(at));function Cr(n){if(Q)return Q(n);throw"both async and sync fetching of the wasm failed"}function ft(n){if(x||E){if(typeof fetch=="function"&&!Wt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw`failed to load wasm binary file at \'${n}\'`;return l.arrayBuffer()}).catch(()=>Cr(n));if(K)return new Promise((l,f)=>{K(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>Cr(n))}function ur(n,l,f){return ft(n).then(b=>WebAssembly.instantiate(b,l)).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Kt(b)})}function Ar(n,l){var f=at;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Wt(f)||P||typeof fetch!="function"?ur(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(C){return ee(`wasm streaming compile failed: ${C}`),ee("falling back to ArrayBuffer instantiation"),ur(f,n,l)}))}var Ir={826468:(n,l,f,b)=>{if(typeof d>"u"||!d.Db)return 1;if(n=He(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Db.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},826969:()=>{d.Xb()},827e3:()=>{d.Yb()},827029:()=>{d.bc()},827054:n=>d.Wb(n),827087:n=>d.$b(n),827119:(n,l,f)=>{d.Lb(n,l,f,!0)},827158:(n,l,f)=>{d.Lb(n,l,f)},827191:n=>{d.ob("Abs",n,void 0)},827242:n=>{d.ob("Neg",n,void 0)},827293:n=>{d.ob("Floor",n,void 0)},827346:n=>{d.ob("Ceil",n,void 0)},827398:n=>{d.ob("Reciprocal",n,void 0)},827456:n=>{d.ob("Sqrt",n,void 0)},827508:n=>{d.ob("Exp",n,void 0)},827559:n=>{d.ob("Erf",n,void 0)},827610:n=>{d.ob("Sigmoid",n,void 0)},827665:(n,l,f)=>{d.ob("HardSigmoid",n,{alpha:l,beta:f})},827744:n=>{d.ob("Log",n,void 0)},827795:n=>{d.ob("Sin",n,void 0)},827846:n=>{d.ob("Cos",n,void 0)},827897:n=>{d.ob("Tan",n,void 0)},827948:n=>{d.ob("Asin",n,void 0)},828e3:n=>{d.ob("Acos",n,void 0)},828052:n=>{d.ob("Atan",n,void 0)},828104:n=>{d.ob("Sinh",n,void 0)},828156:n=>{d.ob("Cosh",n,void 0)},828208:n=>{d.ob("Asinh",n,void 0)},828261:n=>{d.ob("Acosh",n,void 0)},828314:n=>{d.ob("Atanh",n,void 0)},828367:n=>{d.ob("Tanh",n,void 0)},828419:n=>{d.ob("Not",n,void 0)},828470:(n,l,f)=>{d.ob("Clip",n,{min:l,max:f})},828539:n=>{d.ob("Clip",n,void 0)},828591:(n,l)=>{d.ob("Elu",n,{alpha:l})},828649:n=>{d.ob("Relu",n,void 0)},828701:(n,l)=>{d.ob("LeakyRelu",n,{alpha:l})},828765:(n,l)=>{d.ob("ThresholdedRelu",n,{alpha:l})},828835:(n,l)=>{d.ob("Cast",n,{to:l})},828893:n=>{d.ob("Add",n,void 0)},828944:n=>{d.ob("Sub",n,void 0)},828995:n=>{d.ob("Mul",n,void 0)},829046:n=>{d.ob("Div",n,void 0)},829097:n=>{d.ob("Pow",n,void 0)},829148:n=>{d.ob("Equal",n,void 0)},829201:n=>{d.ob("Greater",n,void 0)},829256:n=>{d.ob("GreaterOrEqual",n,void 0)},829318:n=>{d.ob("Less",n,void 0)},829370:n=>{d.ob("LessOrEqual",n,void 0)},829429:(n,l,f,b,C)=>{d.ob("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829588:(n,l,f,b,C)=>{d.ob("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829746:(n,l,f,b,C)=>{d.ob("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829904:(n,l,f,b,C)=>{d.ob("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830063:(n,l,f,b,C)=>{d.ob("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830221:(n,l,f,b,C)=>{d.ob("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830378:(n,l,f,b,C)=>{d.ob("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830535:(n,l,f,b,C)=>{d.ob("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830696:(n,l,f,b,C)=>{d.ob("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830860:(n,l,f,b,C)=>{d.ob("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},831024:n=>{d.ob("Where",n,void 0)},831077:(n,l,f)=>{d.ob("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},831185:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831318:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831451:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},831852:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},832417:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},832818:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},833383:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833474:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},833758:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833849:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834133:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834220:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834500:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834587:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834867:(n,l,f,b,C)=>{d.ob("Gemm",n,{alpha:l,beta:f,transA:b,transB:C})},834971:n=>{d.ob("MatMul",n,void 0)},835025:(n,l,f,b)=>{d.ob("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835133:(n,l,f,b)=>{d.ob("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835241:(n,l)=>{d.ob("Softmax",n,{axis:l})},835304:(n,l)=>{d.ob("Concat",n,{axis:l})},835364:(n,l,f,b,C)=>{d.ob("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},835504:n=>{d.ob("Expand",n,void 0)},835558:(n,l)=>{d.ob("Gather",n,{axis:Number(l)})},835629:(n,l)=>{d.ob("GatherElements",n,{axis:Number(l)})},835708:(n,l,f,b,C,k,V,F,re,J,ce)=>{d.ob("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:He(C),cubicCoeffA:k,excludeOutside:V,extrapolationValue:F,keepAspectRatioPolicy:He(re),mode:He(J),nearestMode:He(ce)})},836054:(n,l,f,b,C,k,V)=>{d.ob("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:k?Array.from(a().subarray(k>>>0,V>>>0)):[]})},836270:n=>{d.ob("Tile",n,void 0)},836322:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},836433:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836547:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836661:n=>{d.ob("Range",n,void 0)},836714:(n,l)=>{d.ob("Einsum",n,{equation:He(l)})},836795:(n,l,f,b,C)=>{d.ob("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},836922:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837091:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837260:(n,l,f)=>{d.ob("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},837357:(n,l,f,b,C,k,V,F,re)=>{d.ob("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k,qkvHiddenSizes:V?Array.from(a().subarray(Number(F)>>>0,Number(F)+V>>>0)):[],pastPresentShareBuffer:!!re})},837629:n=>{d.ob("BiasAdd",n,void 0)},837684:n=>{d.ob("BiasSplitGelu",n,void 0)},837745:n=>{d.ob("FastGelu",n,void 0)},837801:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze)=>{d.ob("Conv",n,{format:re?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[C],pads:k?Array.from(a().subarray(k>>>0,V>>>0)):[],strides:[F],w_is_const:()=>!!r()[J>>>0],activation:He(ce),activation_params:Re?Array.from(p().subarray(Re>>>0,ze>>>0)):[]})},838171:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("Conv",n,{format:Re?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:C,kernel_shape:[k,V],pads:F?Array.from(a().subarray(F>>>0,re>>>0)):[],strides:[J,ce],w_is_const:()=>!!r()[ze>>>0],activation:He(z),activation_params:we?Array.from(p().subarray(we>>>0,Pe>>>0)):[]})},838562:n=>{d.ob("Gelu",n,void 0)},838614:(n,l,f,b,C,k)=>{d.ob("MatMulNBits",n,{k:l,n:f,accuracyLevel:b,bits:C,blockSize:k})},838741:(n,l,f,b,C,k)=>{d.ob("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k})},838900:(n,l,f,b,C)=>{d.ob("RotaryEmbedding",n,{interleaved:!!l,numHeads:f,rotaryEmbeddingDim:b,scale:C})},839039:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839141:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839243:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},839354:n=>{d.ac(n)},839388:(n,l)=>d.cc(n,l,d.Cb.ec,d.Cb.errors)};function st(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var Tr=n=>{n.terminate(),n.onmessage=()=>{}},ht=n=>{ge.xb.length==0&&(lr(),ge.Mb(ge.xb[0]));var l=ge.xb.pop();if(!l)return 6;ge.yb.push(l),ge.ub[n.wb]=l,l.wb=n.wb;var f={cmd:"run",start_routine:n.fc,arg:n.Rb,pthread_ptr:n.wb};return P&&l.unref(),l.postMessage(f,n.mc),0},bt=0,Er=n=>{var l=io();return n=n(),fn(l),n},Te=(n,l,...f)=>Er(()=>{for(var b=2*f.length,C=oo(8*b),k=C>>>3,V=0;V<f.length;V++){var F=f[V];typeof F=="bigint"?(Be[k+2*V]=1n,Be[k+2*V+1]=F):(Be[k+2*V]=0n,h()[k+2*V+1>>>0]=F)}return gi(n,0,b,C,l)});function dr(n){if(O)return Te(0,1,n);ie=n,0<bt||(ge.hc(),d.onExit?.(n),me=!0),I(n,new st(n))}var Xe=n=>{if(ie=n,O)throw jr(n),"unwind";dr(n)};function ut(){for(var n=d.numThreads;n--;)lr();mt.unshift(()=>{Vt++,Fn(()=>xr())})}function lr(){var n=L("ort-wasm-simd-threaded.worker.js");n=new Worker(n),ge.xb.push(n)}function Fn(n){O?n():Promise.all(ge.xb.map(ge.Mb)).then(n)}var ge={xb:[],yb:[],Qb:[],ub:{},Gb(){O?(ge.receiveObjectTransfer=ge.dc,ge.threadInitTLS=ge.Pb,ge.setExitStatus=ge.Ob):ut()},Ob:n=>ie=n,pc:["$terminateWorker"],hc:()=>{for(var n of ge.yb)Tr(n);for(n of ge.xb)Tr(n);ge.xb=[],ge.yb=[],ge.ub=[]},Nb:n=>{var l=n.wb;delete ge.ub[l],ge.xb.push(n),ge.yb.splice(ge.yb.indexOf(n),1),n.wb=0,ro(l)},dc(){},Pb(){ge.Qb.forEach(n=>n())},Mb:n=>new Promise(l=>{n.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=pn()){var F=ge.ub[k.targetThread];F?F.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${V}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?rt():V==="spawnThread"?ht(k):V==="cleanupThread"?ge.Nb(ge.ub[k.thread]):V==="killThread"?(k=k.thread,V=ge.ub[k],delete ge.ub[k],Tr(V),ro(k),ge.yb.splice(ge.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?ge.ub[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.wb&&n.unref(),l(n)):V==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):V==="callHandler"?d[k.handler](...k.args):V&&ee(`worker sent an unknown command ${V}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},P&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var f=[],b=["onExit"],C;for(C of b)d.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:ae,wasmModule:Ae})})};d.PThread=ge;var Yt=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],bi(l,l-n),fn(l)};function jr(n){if(O)return Te(1,0,n);Xe(n)}d.invokeEntryPoint=(n,l)=>{bt=0,n=wi(n,l),0<bt?ge.Ob(n):no(n)};class qn{constructor(l){this.Ib=l-24}Gb(l,f){c()[this.Ib+16>>>2>>>0]=0,c()[this.Ib+4>>>2>>>0]=l,c()[this.Ib+8>>>2>>>0]=f}}var Kr=0,jn=0;function Yr(n,l,f,b){return O?Te(2,1,n,l,f,b):Zr(n,l,f,b)}function Zr(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?Yr(n,l,f,b):(n={fc:f,wb:n,Rb:b,mc:C},O?(n.oc="spawnThread",postMessage(n,C),0):ht(n))}var cr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Pr=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&cr)return cr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var C=n[l++];if(C&128){var k=n[l++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|k);else{var V=n[l++]&63;C=(C&240)==224?(C&15)<<12|k<<6|V:(C&7)<<18|k<<12|V<<6|n[l++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},He=(n,l)=>(n>>>=0)?Pr(o(),n,l):"";function Xr(n,l,f){return O?Te(3,1,n,l,f):0}function Qr(n,l){if(O)return Te(4,1,n,l)}var gt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},dt=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var k=0;k<n.length;++k){var V=n.charCodeAt(k);if(55296<=V&&57343>=V){var F=n.charCodeAt(++k);V=65536+((V&1023)<<10)|F&1023}if(127>=V){if(f>=b)break;l[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;l[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;l[f++>>>0]=224|V>>12}else{if(f+3>=b)break;l[f++>>>0]=240|V>>18,l[f++>>>0]=128|V>>12&63}l[f++>>>0]=128|V>>6&63}l[f++>>>0]=128|V&63}}return l[f>>>0]=0,f-C},Bt=(n,l,f)=>dt(n,o(),l,f);function Zt(n,l){if(O)return Te(5,1,n,l)}function kr(n,l,f){if(O)return Te(6,1,n,l,f)}function Or(n,l,f){return O?Te(7,1,n,l,f):0}function Jr(n,l){if(O)return Te(8,1,n,l)}function pr(n,l,f){if(O)return Te(9,1,n,l,f)}function en(n,l,f,b){if(O)return Te(10,1,n,l,f,b)}function tn(n,l,f,b){if(O)return Te(11,1,n,l,f,b)}function rn(n,l,f,b){if(O)return Te(12,1,n,l,f,b)}function nn(n){if(O)return Te(13,1,n)}function Rr(n,l){if(O)return Te(14,1,n,l)}function Xt(n,l,f){if(O)return Te(15,1,n,l,f)}var on,nt=n=>{for(var l="";o()[n>>>0];)l+=on[o()[n++>>>0]];return l},mr={},Br={},Kn={},wt;function Yn(n,l,f={}){var b=l.name;if(!n)throw new wt(`type "${b}" must have a positive integer typeid pointer`);if(Br.hasOwnProperty(n)){if(f.Ub)return;throw new wt(`Cannot register type \'${b}\' twice`)}Br[n]=l,delete Kn[n],mr.hasOwnProperty(n)&&(l=mr[n],delete mr[n],l.forEach(C=>C()))}function Je(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Yn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0]:b=>o()[b>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>Be[b>>>3]:b=>Ge[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}},fr=[],lt=[];function hr(n){n>>>=0,9<n&&--lt[n+1]===0&&(lt[n]=void 0,fr.push(n))}var Qe=n=>{if(!n)throw new wt("Cannot use deleted val. handle = "+n);return lt[n]},ot=n=>{switch(n){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let l=fr.pop()||lt.length;return lt[l]=n,lt[l+1]=1,l}};function Qt(n){return this.fromWireType(c()[n>>>2>>>0])}var Zn={name:"emscripten::val",fromWireType:n=>{var l=Qe(n);return hr(n),l},toWireType:(n,l)=>ot(l),argPackAdvance:8,readValueFromPointer:Qt,Bb:null},an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}},zr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xn=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&zr)return zr.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var k=n.charCodeAt(C);i()[l>>>1>>>0]=k,l+=2}return i()[l>>>1>>>0]=0,l-b},un=n=>2*n.length,gr=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},Qn=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var C=0;C<n.length;++C){var k=n.charCodeAt(C);if(55296<=k&&57343>=k){var V=n.charCodeAt(++C);k=65536+((k&1023)<<10)|V&1023}if(a()[l>>>2>>>0]=k,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},pe=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mr=n=>{if(!me)try{if(n(),!(0<bt))try{O?no(ie):Xe(ie)}catch(l){l instanceof st||l=="unwind"||I(1,l)}}catch(l){l instanceof st||l=="unwind"||I(1,l)}};function Nt(n){n>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(a(),n>>>2,n).value.then(rt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=Nt;var rt=()=>{var n=pn();n&&(Nt(n),Mr(yi))};d.checkMailbox=rt;var yr=[],br=(n,l)=>{var f=Br[n];if(f===void 0)throw n=fi(n),f=nt(n),At(n),new wt(`${l} has unknown type ${f}`);return f},Ur=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[l>>>2>>>0]=ot(b)),n},Jt=n=>{try{n()}catch(l){Kt(l)}};function dn(){var n=oe,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?(...C)=>{Dt.push(f);try{return b(...C)}finally{me||(Dt.pop(),ct&&vt===1&&Dt.length===0&&(vt=0,bt+=1,Jt($i),typeof Fibers<"u"&&Fibers.rc()))}}:b;return l}var vt=0,ct=null,ln=0,Dt=[],Vr={},s={},m=0,g=null,$=[];function T(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=mn(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Dt[0];var f=Vr[l];return f===void 0&&(f=m++,Vr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[ct+8>>>2>>>0];return n=oe[s[n]],--bt,n()}function q(n){if(!me){if(vt===0){var l=!1,f=!1;n((b=0)=>{if(!me&&(ln=b,l=!0,f)){vt=2,Jt(()=>_i(ct)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),b=!1;try{var C=H()}catch(F){C=F,b=!0}var k=!1;if(!ct){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),k=!0)}if(b&&!k)throw C}}),f=!0,l||(vt=1,ct=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Jt(()=>vi(ct)))}else vt===2?(vt=0,Jt(Si),At(ct),ct=null,$.forEach(Mr)):Kt(`invalid state: ${vt}`);return ln}}function te(n){return q(l=>{n().then(l)})}var X=[],de={},Ee=n=>{var l=de[n];return l===void 0?nt(n):l},Oe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),D=n=>{var l=X.length;return X.push(n),l},be=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=br(c()[l+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function zt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var Mt=n=>n%4===0&&(n%100!==0||n%400===0),Qo=[0,31,60,91,121,152,182,213,244,274,305,335],Jo=[0,31,59,90,120,151,181,212,243,273,304,334];function ei(n,l,f,b,C,k,V){return O?Te(16,1,n,l,f,b,C,k,V):-52}function ti(n,l,f,b,C,k){if(O)return Te(17,1,n,l,f,b,C,k)}var Jn=[],ri=(n,l)=>{Jn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Jn.push(f==112?c()[l>>>2>>>0]:f==106?Be[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Jn},eo={},ni=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:A||"./this.program"},l;for(l in eo)eo[l]===void 0?delete n[l]:n[l]=eo[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);to=f}return to},to;function oi(n,l){if(O)return Te(18,1,n,l);n>>>=0,l>>>=0;var f=0;return ni().forEach((b,C)=>{var k=l+f;for(C=c()[n+4*C>>>2>>>0]=k,k=0;k<b.length;++k)r()[C++>>>0]=b.charCodeAt(k);r()[C>>>0]=0,f+=b.length+1}),0}function ii(n,l){if(O)return Te(19,1,n,l);n>>>=0,l>>>=0;var f=ni();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[l>>>2>>>0]=b,0}function ai(n){return O?Te(20,1,n):52}function si(n,l,f,b){return O?Te(21,1,n,l,f,b):52}function ui(n,l,f,b){return O?Te(22,1,n,l,f,b):70}var Xd=[null,[],[]];function di(n,l,f,b){if(O)return Te(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var C=0,k=0;k<f;k++){var V=c()[l>>>2>>>0],F=c()[l+4>>>2>>>0];l+=8;for(var re=0;re<F;re++){var J=o()[V+re>>>0],ce=Xd[n];J===0||J===10?((n===1?We:ee)(Pr(ce,0)),ce.length=0):ce.push(J)}C+=F}return c()[b>>>2>>>0]=C,0}var li=[31,29,31,30,31,30,31,31,30,31,30,31],ci=[31,28,31,30,31,30,31,31,30,31,30,31];function Qd(n){var l=Array(gt(n)+1);return dt(n,l,0,l.length),l}var Jd=(n,l)=>{r().set(n,l>>>0)};function pi(n,l,f,b){function C(z,we,Pe){for(z=typeof z=="number"?z.toString():z||"";z.length<we;)z=Pe[0]+z;return z}function k(z,we){return C(z,we,"0")}function V(z,we){function Pe(Ci){return 0>Ci?-1:0<Ci?1:0}var er;return(er=Pe(z.getFullYear()-we.getFullYear()))===0&&(er=Pe(z.getMonth()-we.getMonth()))===0&&(er=Pe(z.getDate()-we.getDate())),er}function F(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function re(z){var we=z.zb;for(z=new Date(new Date(z.Ab+1900,0,1).getTime());0<we;){var Pe=z.getMonth(),er=(Mt(z.getFullYear())?li:ci)[Pe];if(we>er-z.getDate())we-=er-z.getDate()+1,z.setDate(1),11>Pe?z.setMonth(Pe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+we);break}}return Pe=new Date(z.getFullYear()+1,0,4),we=F(new Date(z.getFullYear(),0,4)),Pe=F(Pe),0>=V(we,z)?0>=V(Pe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={kc:a()[b>>>2>>>0],jc:a()[b+4>>>2>>>0],Eb:a()[b+8>>>2>>>0],Jb:a()[b+12>>>2>>>0],Fb:a()[b+16>>>2>>>0],Ab:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],zb:a()[b+28>>>2>>>0],qc:a()[b+32>>>2>>>0],ic:a()[b+36>>>2>>>0],lc:J?He(J):""},f=He(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in J)f=f.replace(new RegExp(ce,"g"),J[ce]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");J={"%a":z=>Re[z.vb].substring(0,3),"%A":z=>Re[z.vb],"%b":z=>ze[z.Fb].substring(0,3),"%B":z=>ze[z.Fb],"%C":z=>k((z.Ab+1900)/100|0,2),"%d":z=>k(z.Jb,2),"%e":z=>C(z.Jb,2," "),"%g":z=>re(z).toString().substring(2),"%G":re,"%H":z=>k(z.Eb,2),"%I":z=>(z=z.Eb,z==0?z=12:12<z&&(z-=12),k(z,2)),"%j":z=>{for(var we=0,Pe=0;Pe<=z.Fb-1;we+=(Mt(z.Ab+1900)?li:ci)[Pe++]);return k(z.Jb+we,3)},"%m":z=>k(z.Fb+1,2),"%M":z=>k(z.jc,2),"%n":()=>`\n`,"%p":z=>0<=z.Eb&&12>z.Eb?"AM":"PM","%S":z=>k(z.kc,2),"%t":()=>"	","%u":z=>z.vb||7,"%U":z=>k(Math.floor((z.zb+7-z.vb)/7),2),"%V":z=>{var we=Math.floor((z.zb+7-(z.vb+6)%7)/7);if(2>=(z.vb+371-z.zb-2)%7&&we++,we)we==53&&(Pe=(z.vb+371-z.zb)%7,Pe==4||Pe==3&&Mt(z.Ab)||(we=1));else{we=52;var Pe=(z.vb+7-z.zb-1)%7;(Pe==4||Pe==5&&Mt(z.Ab%400-1))&&we++}return k(we,2)},"%w":z=>z.vb,"%W":z=>k(Math.floor((z.zb+7-(z.vb+6)%7)/7),2),"%y":z=>(z.Ab+1900).toString().substring(2),"%Y":z=>z.Ab+1900,"%z":z=>{z=z.ic;var we=0<=z;return z=Math.abs(z)/60,(we?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.lc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ce in J)f.includes(ce)&&(f=f.replace(new RegExp(ce,"g"),J[ce](b)));return f=f.replace(/\\0\\0/g,"%"),ce=Qd(f),ce.length>l?0:(Jd(ce,n),ce.length-1)}ge.Gb();for(var mi=Array(256),cn=0;256>cn;++cn)mi[cn]=String.fromCharCode(cn);on=mi,wt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},lt.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>lt.length/2-5-fr.length;var el=[dr,jr,Yr,Xr,Qr,Zt,kr,Or,Jr,pr,en,tn,rn,nn,Rr,Xt,ei,ti,oi,ii,ai,si,ui,di],tl={ua:function(n,l,f){return te(async()=>{await d.Zb(n,l,f)})},b:function(n,l,f){throw n>>>=0,new qn(n).Gb(l>>>0,f>>>0),Kr=n,jn++,Kr},ia:function(n){hi(n>>>0,!E,1,!x,131072,!1),ge.Pb()},G:function(n){n>>>=0,O?postMessage({cmd:"cleanupThread",thread:n}):ge.Nb(ge.ub[n])},_:Zr,A:Xr,pa:Qr,W:Zt,Y:kr,qa:Or,na:Jr,fa:pr,ma:en,K:tn,X:rn,U:nn,oa:Rr,V:Xt,E:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:function(b,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":(b=typeof C,C=b==="object"||b==="array"||b==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:Dr(l,f,l.indexOf("u")==-1),Bb:null})},O:function(n,l,f,b){n>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:function(C){return!!C},toWireType:function(C,k){return k?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(n){return Je(n>>>0,Zn)},D:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:an(l,f),Bb:null})},t:function(n,l,f,b,C){if(n>>>=0,f>>>=0,l=nt(l>>>0),C===-1&&(C=4294967295),C=F=>F,b===0){var k=32-8*f;C=F=>F<<k>>>k}var V=l.includes("unsigned")?function(F,re){return re>>>0}:function(F,re){return re};Je(n,{name:l,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Bb:null})},p:function(n,l,f){function b(k){var V=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new C(r().buffer,k,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=nt(f>>>0),Je(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Ub:!0})},F:function(n,l){n>>>=0,l=nt(l>>>0);var f=l==="std::string";Je(n,{name:l,fromWireType:function(b){var C=c()[b>>>2>>>0],k=b+4;if(f)for(var V=k,F=0;F<=C;++F){var re=k+F;if(F==C||o()[re>>>0]==0){if(V=He(V,re-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=re+1}}else{for(J=Array(C),F=0;F<C;++F)J[F]=String.fromCharCode(o()[k+F>>>0]);J=J.join("")}return At(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var k=typeof C=="string";if(!(k||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new wt("Cannot pass non-string to std::string");var V=f&&k?gt(C):C.length,F=mn(4+V+1),re=F+4;if(c()[F>>>2>>>0]=V,f&&k)Bt(C,re,V+1);else if(k)for(k=0;k<V;++k){var J=C.charCodeAt(k);if(255<J)throw At(re),new wt("String has UTF-16 code units that do not fit in 8 bits");o()[re+k>>>0]=J}else for(k=0;k<V;++k)o()[re+k>>>0]=C[k];return b!==null&&b.push(At,F),F},argPackAdvance:8,readValueFromPointer:Qt,Bb(b){At(b)}})},z:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=nt(f),l===2)var b=Xn,C=sn,k=un,V=F=>u()[F>>>1>>>0];else l===4&&(b=gr,C=Qn,k=pe,V=F=>c()[F>>>2>>>0]);Je(n,{name:f,fromWireType:F=>{for(var re=c()[F>>>2>>>0],J,ce=F+4,Re=0;Re<=re;++Re){var ze=F+4+Re*l;(Re==re||V(ze)==0)&&(ce=b(ce,ze-ce),J===void 0?J=ce:(J+=String.fromCharCode(0),J+=ce),ce=ze+l)}return At(F),J},toWireType:(F,re)=>{if(typeof re!="string")throw new wt(`Cannot pass non-string to C++ string type ${f}`);var J=k(re),ce=mn(4+J+l);return c()[ce>>>2>>>0]=J/l,C(re,ce+4,J+l),F!==null&&F.push(At,ce),ce},argPackAdvance:8,readValueFromPointer:Qt,Bb(F){At(F)}})},P:function(n,l){n>>>=0,l=nt(l>>>0),Je(n,{Vb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(n,l){n>>>=0,n==l>>>0?setTimeout(rt):O?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=ge.ub[n])&&n.postMessage({cmd:"checkMailbox"})},$:function(n,l,f,b,C){l>>>=0,f>>>=0,b/=2,yr.length=b,C=C>>>0>>>3;for(var k=0;k<b;k++)yr[k]=Be[C+2*k]?Be[C+2*k+1]:h()[C+2*k+1>>>0];return n=l?Ir[l]:el[n],ge.Sb=f,f=n(...yr),ge.Sb=0,f},ha:Nt,sa:function(n){P&&ge.ub[n>>>0].ref()},w:function(n,l,f){return l>>>=0,f>>>=0,n=Qe(n>>>0),l=br(l,"emval::as"),Ur(l,f,n)},y:function(n){return n>>>=0,te(()=>(n=Qe(n),n.then(ot)))},o:function(n,l,f,b){return f>>>=0,b>>>=0,n=X[n>>>0],l=Qe(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=X[n>>>0],l=Qe(l>>>0),f=Ee(f),n(l,l[f],b,C)},c:hr,C:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),n==l},n:function(n){return n>>>=0,n===0?ot(Oe()):(n=Ee(n),ot(Oe()[n]))},j:function(n,l,f){l=be(n,l>>>0);var b=l.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,k=0,V=[];f===0&&V.push("obj");for(var F=["retType"],re=[b],J=0;J<n;++J)V.push("arg"+J),F.push("argType"+J),re.push(l[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${k?"+"+k:""});\n`,k+=l[J].argPackAdvance;return C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,b.Vb||(F.push("emval_returnValue"),re.push(Ur),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(C+`};\n`),n=zt(F)(...re),f=`methodCaller<(${l.map(ce=>ce.name).join(", ")}) => ${b.name}>`,D(Ie(f,n))},s:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),ot(n[l])},d:function(n){n>>>=0,9<n&&(lt[n+1]+=1)},v:function(){return ot([])},m:function(n){n=Qe(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(Ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Qe(n);l.length;){var f=l.pop();l.pop()(f)}hr(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Qe(n>>>0),l=Qe(l),f=Qe(f),n[l]=f},e:function(n,l){return l>>>=0,n=br(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},ca:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},da:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(Mt(n.getFullYear())?Qo:Jo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ea:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),C=new Date(l.getFullYear(),6,1).getTimezoneOffset(),k=new Date(l.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=k&&V==b):0<f!=(V==b)&&(C=Math.max(k,C),l.setTime(l.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(Mt(l.getFullYear())?Qo:Jo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),BigInt(isNaN(n)?-1:n/1e3)},aa:ei,ba:ti,R:function(n,l,f,b){n>>>=0,l>>>=0,f>>>=0,b>>>=0;var C=new Date().getFullYear(),k=new Date(C,0,1),V=new Date(C,6,1);C=k.getTimezoneOffset();var F=V.getTimezoneOffset(),re=Math.max(C,F);c()[n>>>2>>>0]=60*re,a()[l>>>2>>>0]=+(C!=F),n=J=>J.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],k=n(k),V=n(V),F<C?(Bt(k,f,17),Bt(V,b,17)):(Bt(k,b,17),Bt(V,f,17))},q:()=>{Kt("")},f:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},M:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},H:()=>{},L:()=>Date.now(),ra:()=>{throw bt+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(Ri(),wr(Oi)).cpus().length:navigator.hardwareConcurrency,Q:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-ae.buffer.byteLength+65535)/65536;try{ae.grow(C),Ne();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ja:oi,la:ii,Z:Xe,B:ai,J:si,ga:ui,I:di,a:ae||d.wasmMemory,ka:pi,r:function(n,l,f,b){return pi(n>>>0,l>>>0,f>>>0,b>>>0)}},oe=function(){function n(f,b){return oe=f.exports,oe=dn(),oe=rl(),ge.Qb.push(oe.cb),Rt.unshift(oe.va),Ae=b,xr(),oe}var l={a:tl};if(Vt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return Ar(l,function(f){n(f.instance,f.module)}).catch(w),{}}(),fi=n=>(fi=oe.wa)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=oe.xa)(),d._OrtInit=(n,l)=>(d._OrtInit=oe.ya)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=oe.za)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,C,k,V,F,re,J)=>(d._OrtCreateSessionOptions=oe.Aa)(n,l,f,b,C,k,V,F,re,J),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=oe.Ba)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=oe.Ca)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=oe.Da)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=oe.Ea)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=oe.Fa)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=oe.Ga)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=oe.Ha)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=oe.Ia)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=oe.Ja)(n,l),d._OrtFree=n=>(d._OrtFree=oe.Ka)(n),d._OrtCreateTensor=(n,l,f,b,C,k)=>(d._OrtCreateTensor=oe.La)(n,l,f,b,C,k),d._OrtGetTensorData=(n,l,f,b,C)=>(d._OrtGetTensorData=oe.Ma)(n,l,f,b,C),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=oe.Na)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=oe.Oa)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=oe.Pa)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=oe.Qa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=oe.Ra)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=oe.Sa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=oe.Ta)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=oe.Ua)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=oe.Va)(n),d._OrtRunWithBinding=(n,l,f,b,C)=>(d._OrtRunWithBinding=oe.Wa)(n,l,f,b,C),d._OrtRun=(n,l,f,b,C,k,V,F)=>(d._OrtRun=oe.Xa)(n,l,f,b,C,k,V,F),d._OrtEndProfiling=n=>(d._OrtEndProfiling=oe.Ya)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=oe.Za)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=oe._a)(n);var pn=d._pthread_self=()=>(pn=d._pthread_self=oe.$a)(),mn=d._malloc=n=>(mn=d._malloc=oe.ab)(n),At=d._free=n=>(At=d._free=oe.bb)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=oe.cb)();var hi=d.__emscripten_thread_init=(n,l,f,b,C,k)=>(hi=d.__emscripten_thread_init=oe.eb)(n,l,f,b,C,k);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=oe.fb)();var gi=(n,l,f,b,C)=>(gi=oe.gb)(n,l,f,b,C),ro=n=>(ro=oe.hb)(n),no=d.__emscripten_thread_exit=n=>(no=d.__emscripten_thread_exit=oe.ib)(n),yi=()=>(yi=oe.jb)(),bi=(n,l)=>(bi=oe.kb)(n,l),fn=n=>(fn=oe.lb)(n),oo=n=>(oo=oe.mb)(n),io=()=>(io=oe.nb)(),wi=d.dynCall_ii=(n,l)=>(wi=d.dynCall_ii=oe.pb)(n,l),vi=n=>(vi=oe.qb)(n),$i=()=>($i=oe.rb)(),_i=n=>(_i=oe.sb)(n),Si=()=>(Si=oe.tb)();d.___start_em_js=839500,d.___stop_em_js=839661;function rl(){var n=oe;n=Object.assign({},n);var l=b=>C=>b(C)>>>0,f=b=>()=>b()>>>0;return n.wa=l(n.wa),n.$a=f(n.$a),n.ab=l(n.ab),n.emscripten_main_runtime_thread_id=f(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.nb=f(n.nb),n}d.wasmMemory=ae,d.stackSave=()=>io(),d.stackRestore=n=>fn(n),d.stackAlloc=n=>oo(n),d.keepRuntimeAlive=()=>0<bt,d.UTF8ToString=He,d.stringToUTF8=Bt,d.lengthBytesUTF8=gt,d.ExitStatus=st,d.PThread=ge;var hn;jt=function n(){hn||xi(),hn||(jt=n)};function xi(){if(!(0<Vt))if(O)y(d),O||Yt(Rt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)mt.unshift(d.preRun.shift());Yt(mt),0<Vt||hn||(hn=!0,d.calledRun=!0,me||(O||Yt(Rt),y(d),O||Yt(qt)))}}return xi(),_}})();typeof Di=="object"&&typeof mo=="object"?mo.exports=Bi:typeof define=="function"&&define.amd&&define([],()=>Bi)});var Mi=Wr((gm,cl)=>{cl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\\n\'});var go,Gt,tr,bn,Gr,Hi,yo,ye=Y(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Gt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=Y(()=>{"use strict"});var Fi=Y(()=>{"use strict";wn()});var qi,ji=Y(()=>{"use strict";qi="1.18.0"});var Ki,pt,bo=Y(()=>{"use strict";ji();Ki="warning",pt={wasm:{},webgl:{},webgpu:{},versions:{common:qi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ki=e}},get logLevel(){return Ki}};Object.defineProperty(pt,"logLevel",{enumerable:!0})});var vr,Yi=Y(()=>{"use strict";bo();vr=pt});var Zi=Y(()=>{"use strict"});var Xi=Y(()=>{"use strict";vn()});var Ji=Y(()=>{"use strict"});var ea=Y(()=>{"use strict";vn()});var vn=Y(()=>{"use strict";Zi();Xi();Ji();ea()});var $n=Y(()=>{"use strict";vn()});var wo,ta,rr,Ht,vo=Y(()=>{"use strict";bo();wo=(e,t)=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},ta=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},rr=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("BEGIN",e)},Ht=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("END",e)}});var ra=Y(()=>{"use strict";wn();$n();vo()});var na=Y(()=>{"use strict";ra()});var oa=Y(()=>{"use strict"});var ia=Y(()=>{"use strict"});var aa=Y(()=>{"use strict"});var sa=Y(()=>{"use strict"});var ua=Y(()=>{"use strict";wn();$n()});var da=Y(()=>{"use strict";ua()});var $r=Y(()=>{"use strict";Fi();Yi();na();$n();oa();ia();vo();aa();sa();da()});var _l,Sl,la,ca,pa,xl,Ve,Lt=Y(()=>{"use strict";ye();_l=["V","I","W","E","F"],Sl=(e,t)=>{console.log(`[${_l[e]},${new Date().toISOString()}]${t}`)},pa=(e,t)=>{la=e,ca=t},xl=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&Sl(r,typeof t=="function"?t():t)},Ve=(...e)=>{ca&&xl(...e)}});var ma,fa=Y(()=>{"use strict";ye();ma=(e,t)=>new(bn(t))(e)});var _n=Y(()=>{"use strict"});var ha,$o,_o,Cl,Al,ga,xo,So,ba,wa=Y(()=>{"use strict";Lt();_n();ha=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),$o=[],_o=e=>Math.ceil(e/16)*16,Cl=e=>{for(let t=0;t<$o.length;t++){let r=$o[t];if(e<=r)return r}return Math.ceil(e/16)*16},Al=1,ga=()=>Al++,xo=async(e,t,r,o)=>{let i=_o(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},So=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[r]of ha)$o.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_o(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_o(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ga();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cl(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let h=(u?this.freeBuffers:this.freeUniformBuffers).get(o);h?h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r}):i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:ga(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=ha.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=this.freeUniformBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ba=(...e)=>new So(...e)});var Co,ve,Ze=Y(()=>{"use strict";Co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ve=e=>new Co(e)});var Ao,It,M,nr,Sn,xn,Cn,Se=Y(()=>{"use strict";Ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},It=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=Ao.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],d=u-p<0?1:r[u-p];if(h!==d&&h>1&&d>1)return;let y=Math.max(h,d);if(h&&d)c[a-p]=Math.max(h,d);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},nr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!It.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var or,To,De,et,Z,Me,$t,ir,_t,fe,Eo,U,j,An,Io,va,_r,_e=Y(()=>{"use strict";ye();Se();or=64,To=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},De=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[0]},et=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},Me=e=>e%4===0?4:e%2===0?2:1,$t=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ir=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,_t=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Eo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=To(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:d,storage:y,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",A=`${S}${e}_shape`,I=`${S}${e}_strides`,x="";for(let G=0;G<a-1;G++)x+=`\n    let dim${G} = current / ${fe(I,G,a)};\n    let rest${G} = current % ${fe(I,G,a)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,P=G=>(v.offsetToIndices=!0,a<2?G:`o2i_${e}(${G})`),O=[];if(a>=2)for(let G=a-1;G>=0;G--)O.push(`${fe(I,G,a)} * (indices[${G}])`);let R=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${O.join("+")};\n  }`,L=G=>(v.indicesToOffset=!0,a<2?G:`i2o_${e}(${G})`),N=(...G)=>a===0?"0u":`${w.indices}(${G.map(_).join(",")})`,K=(G,ne)=>a<2?`${G}`:`${fe(G,ne,a)}`,Q=(G,ne,xe)=>a<2?`${G}=${xe};`:`${fe(G,ne,a)}=${xe};`,he={},W=(G,ne)=>{v.broadcastedIndicesToOffset=!0;let xe=`${ne.name}broadcastedIndicesTo${e}Offset`;if(xe in he)return`${xe}(${G})`;let Ke=[];for(let Be=a-1;Be>=0;Be--){let Ge=ne.indicesGet("outputIndices",Be+ne.rank-a);Ke.push(`${K(I,Be)} * (${Ge} % ${K(A,Be)})`)}return he[xe]=`fn ${xe}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${Ke.length>0?Ke.join("+"):"0u"};\n           }`,`${xe}(${G})`},se=(G,ne)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ne};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ne}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ce=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),We=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ee=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${G}) -> ${d} {\n    return get_${e}ByIndices(${N(ne)});\n  }`})(),ae=(...G)=>{if(G.length!==a)throw new Error(`indices length must be ${a}`);let ne=G.map(_).join(",");return a===0?Ce("0u"):a===1?Ce(ne[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=G=>a<2?Ce(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),me=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${se(`i2o_${e}(indices)`,"value")}\n  }`,ie=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${G}, value: ${d}) {\n    set_${e}ByIndices(${N(ne)}, value);\n  }`})();return{impl:()=>{let G=[],ne=!1;return v.offsetToIndices&&(G.push(E),ne=!0),v.indicesToOffset&&(G.push(R),ne=!0),v.broadcastedIndicesToOffset&&(Object.values(he).forEach(xe=>G.push(xe)),ne=!0),v.set&&(G.push(ie),ne=!0),v.setByIndices&&(G.push(me),ne=!0),v.get&&(G.push(ee),ne=!0),v.getByIndices&&(G.push(We),ne=!0),!u&&ne&&G.unshift(`const ${A} = ${w.indices}(${r.join(",")});`,`const ${I} = ${w.indices}(${M.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:P,indicesToOffset:L,broadcastedIndicesToOffset:W,indices:N,indicesGet:K,indicesSet:Q,set:(...G)=>{if(G.length!==a+1)throw new Error(`indices length must be ${a}`);let ne=G[a];if(typeof ne!="string")throw new Error("value must be string");let xe=G.slice(0,a).map(_).join(",");return a===0?se("0u",ne):a===1?se(xe[0],ne):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${xe}, ${ne})`)},setByOffset:se,setByIndices:(G,ne)=>a<2?se(G,ne):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ne});`),get:ae,getByOffset:Ce,getByIndices:Ae,usage:o,name:e,strides:I,shape:A,rank:a}},U=(e,t,r,o=1)=>Eo(e,t,r,"input",o),j=(e,t,r,o=1)=>Eo(e,t,r,"output",o),An=(e,t,r,o=1)=>Eo(e,t,r,"internal",o),Io=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=or){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},va=(e,t)=>new Io(e,t),_r=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var Il,$a,Tl,El,yt,_a,Sa,Sr=Y(()=>{"use strict";ye();Se();Ze();_e();Il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$a=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Tl=(e,t)=>M.sortBasedOnPerm(e,$a(e.length,t)),El=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=$a(o,t),u=Tl(e.dims,i),a=j("output",r,u.length),c=U("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${El(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Z(h[0].dims,u)]}},getShaderSource:p}},_a=(e,t)=>{Il(e.inputs),e.compute(yt(e.inputs[0],t.perm))},Sa=e=>ve({perm:e.perm})});var Pl,kl,Ol,Rl,Bl,Dl,zl,Ml,Ul,Vl,Tt,xa,Ca,Aa,Ia,Ta,Ea,Pa,ka,Oa,Ra,Ba=Y(()=>{"use strict";ye();Se();_e();In();Sr();Pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Rl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Bl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Dl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},zl=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},Ml=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ul=(e,t)=>{let r=[];if(!Ml(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Vl=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),d=U("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ol[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Pl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${kl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Rl[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Tt=(e,t,r,o)=>{let i=e.inputs.length===1?r:Po(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Ul(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Bl(c.length,p.dims.length));let[d,y]=Dl(p.dims,c),w=d;i.keepDims&&(w=zl(d,a)),e.compute(Vl(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},xa=(e,t)=>{Tt(e,"ReduceMeanShared",t,"mean")},Ca=(e,t)=>{Tt(e,"ReduceL1Shared",t,"l1")},Aa=(e,t)=>{Tt(e,"ReduceL2Shared",t,"l2")},Ia=(e,t)=>{Tt(e,"ReduceLogSumExpShared",t,"logSumExp")},Ta=(e,t)=>{Tt(e,"ReduceMaxShared",t,"max")},Ea=(e,t)=>{Tt(e,"ReduceMinShared",t,"min")},Pa=(e,t)=>{Tt(e,"ReduceProdShared",t,"prod")},ka=(e,t)=>{Tt(e,"ReduceSumShared",t,"sum")},Oa=(e,t)=>{Tt(e,"ReduceSumSquareShared",t,"sumSquare")},Ra=(e,t)=>{Tt(e,"ReduceLogSumShared",t,"logSum")}});var Et,Wl,Tn,Po,Pt,Nl,Gl,Hl,Ll,Fl,ql,jl,Kl,Yl,Zl,kt,Da,za,Ma,Ua,Va,Wa,Na,Ga,Ha,La,In=Y(()=>{"use strict";ye();Se();Ze();_e();Ba();Et=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Wl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,d=h.length,y=M.normalizeAxes(i,d),w=!c&&y.length===0;h.forEach((A,I)=>{w||y.indexOf(I)>=0?a&&p.push(1):p.push(A)});let _=p.length,v=M.size(p);return{name:e,shaderCache:t,getShaderSource:A=>{let I=[],x=U("_A",r[0].dataType,d),E=j("output",u,_),P=o(x,E,y),O=P[2];for(let R=0,L=0;R<d;R++)w||y.indexOf(R)>=0?(a&&L++,O=`for(var j${R}: u32 = 0; j${R} < ${h[R]}; j${R}++) {\n                  ${P[2].includes("last_index")?`let last_index = j${R};`:""}\n                  ${x.indicesSet("input_indices",R,`j${R}`)}\n                  ${O}\n                }`):(I.push(`${x.indicesSet("input_indices",R,E.indicesGet("output_indices",L))};`),L++);return`\n\n        ${A.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${I.join(`\n`)}\n          ${P[0]}       // init ops for reduce max/min\n          ${P[1]}\n          ${O}\n          ${P[3]}\n          ${P.length===4?E.setByOffset("global_idx","value"):P.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...Z(h,p)]})}},Po=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ve({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Pt=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Po(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Wl:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Nl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Gl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Hl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ll=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Fl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ql=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},jl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Kl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Yl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Zl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},kt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Da=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):xa(e,t)},za=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Ca(e,t)},Ma=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Aa(e,t)},Ua=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):Ia(e,t)},Va=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):Ta(e,t)},Wa=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ea(e,t)},Na=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Pa(e,t)},Ga=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yl(e,t):ka(e,t)},Ha=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zl(e,t):Oa(e,t)},La=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ra(e,t)}});var Fa,qa,ja,ko,Ka=Y(()=>{"use strict";ye();Ze();In();Fa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},qa=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ja=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ko=e=>ve(e)});var Xl,Ql,Jl,En,Ya,Za,Oo=Y(()=>{"use strict";ye();Se();Ze();_e();Xl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},Ql=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Jl=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},En=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],d=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=U(`input${S}`,o,h[S]),p.push("rank"),d.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)d.push(...Z(e[S].dims));d.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),v=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)S.registerUniform(`sizeInConcatAxis${A}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${Ql(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Jl(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:v}},Ya=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);Xl(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(En(a,i,u,r[0].dataType),{inputs:a})},Za=e=>ve({axis:e.axis})});var ec,tc,rc,nc,Pn,oc,Xa,Ro=Y(()=>{"use strict";ye();_n();_e();Oo();ec=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let A=v+S,I=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:A,maxSequenceLength:I,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},tc=(e,t,r,o)=>{let i=Me(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=De(t.dataType,i),d=et(1,i),y=w=>{let _=j("x",t.dataType,t.dims,i),S=[{name:"d_inv",type:et(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${w.registerUniforms(S).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${_.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${_.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})}},rc=(e,t,r,o,i,u,a)=>{let c=a+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],h=u.scale===0?1/Math.sqrt(i.headSize):u.scale,d=Me(i.headSize),y=i.headSize/d,w=12,_={x:Math.ceil(c/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:c},{type:12,data:i.numHeads},{type:1,data:h}],S=o?["type","type","type"]:["type","type"],A=I=>{let x=U("q",t.dataType,t.dims,d),E=U("key",r.dataType,r.dims,d),P=[x,E];o&&P.push(U("relative_position_bias",o.dataType,o.dims));let O=j("output",t.dataType,p),R=et(1,d),L=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`\n  const TILE_SIZE = ${w}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${w*w}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${w*w}>;\n  ${I.registerUniforms(L).declareVariables(...P,O)}\n  ${I.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${R}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${R}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${O.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:_,programUniforms:v}),getShaderSource:A}},nc=(e,t,r,o,i)=>{let u=i+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,p={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:u},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:w=>{let _=U("probs",t.dataType,t.dims),v=U("v",r.dataType,r.dims),S=j("output",t.dataType,a),A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${c}u;\n  var<workgroup> tileQ: array<${_.type.value}, ${c*c}>;\n  var<workgroup> tileK: array<${_.type.value}, ${c*c}>;\n  ${w.registerUniforms(A).declareVariables(_,v,S)}\n  ${w.mainStart([c,c,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${_.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Pn=(e,t,r,o,i,u,a,c,p,h,d)=>{let y=e.outputCount>1,w=e.outputCount>2,_=y&&w?h.pastSequenceLength:0,v=_+h.kvSequenceLength,S=[h.batchSize,h.numHeads,v,h.headSize],A=a?[a,r]:[r],I=y?e.compute(En(A,2,S,r.dataType),{inputs:A,outputs:[1]})[0]:r,x=[h.batchSize,h.numHeads,v,h.headSize],E=c?[c,o]:[o],P=w?e.compute(En(E,2,x,o.dataType),{inputs:E,outputs:[2]})[0]:o,O=[t,I];p&&O.push(p);let R=e.compute(rc(e,t,I,p,h,d,_),{inputs:O,outputs:[-1]})[0];e.compute(tc(e,R,h.batchSize*h.numHeads*h.sequenceLength,v),{inputs:[R],outputs:[]});let L=[R,P];e.compute(nc(e,R,P,h,_),{inputs:L,outputs:[0]})},oc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),v=j("output_v",p[0].dataType,r),S=U("input",p[0].dataType,p[0].dims),A=U("weight",p[1].dataType,p[1].dims),I=U("bias",p[2].dataType,p[2].dims),x=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(S,A,I,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:d},{inputs:p,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=ec(e.inputs,t),[o,i,u]=oc(e,r);return Pn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ic,ac,sc,Qa,Ja=Y(()=>{"use strict";$r();ye();Se();Ze();_e();ic=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},ac=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Me(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,d=h?u.length:u,y=U("x",e[0].dataType,e[0].dims,a),w=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),v=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),A=j("y",e[0].dataType,d,a),I=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${A.indicesSet("outputIndices","0","0")}\n            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let P=1;P<w.rank;P++)E+=`cIndices[${P}] = outputIndices[${P}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,S,A)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${A.offsetToIndices(`global_idx * ${a}`)};\n    ${I()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${A.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},sc=e=>ve(e),Qa=(e,t)=>{let{inputs:r,outputCount:o}=e,i=sc({...t,outputCount:o});if(vr.webgpu.validateInputContent&&ic(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ac(r,i))}});var uc,dc,es,ts=Y(()=>{"use strict";Se();_e();uc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,p)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},es=e=>{uc(e.inputs),e.compute(dc(e.inputs))}});var lc,ke,rs,ns,os,is,as,ss,us,ds,ls,cc,cs,ps,ms,fs,kn,hs,On,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,ks,Os,Rs,Bo,Do,Bs,Ds,zs,Rn=Y(()=>{"use strict";ye();Se();Ze();_e();lc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=U("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>lc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),rs=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},ns=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},os=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},is=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},as=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ss=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},ds=e=>ve(e),ls=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},cc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return ve({min:t,max:r})},cs=(e,t)=>{let r=e.inputs.length===1?t:cc(e.inputs),o=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ps=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ms=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},fs=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},kn=e=>ve(e),hs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,gs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},ys=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},bs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},ws=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},vs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},$s=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},_s=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},Ss=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},xs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Cs=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},As=e=>ve(e),Is=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ts=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Es=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},Ps=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},ks=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Rs=e=>{e.compute(ke(e.inputs[0],"Tanh",Os))},Bo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Os("v")};\n}\n`,Do=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Bs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",Do,Bo(t),void 0,e.inputs[0].dataType))},Ds=(e,t)=>{let r=et(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var pc,mc,Us,Vs=Y(()=>{"use strict";Se();_e();Rn();pc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=De(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${On(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Us=e=>{pc(e.inputs),e.compute(mc(e.inputs))}});var fc,hc,Ot,Ws,Ns,Gs,Hs,Ls,Fs,qs,js,Ks,Ys,Zs=Y(()=>{"use strict";ye();Se();_e();fc=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w,_;typeof c=="string"?w=_=(x,E)=>`${c}((${x}),(${E}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",d,o.length,4),S=U("aData",p,t.length,4),A=U("bData",h,r.length,4),I;if(i)if(u){let x=M.size(t)===1,E=M.size(r)===1,P=t.length>0&&t[t.length-1]%4===0,O=r.length>0&&r[r.length-1]%4===0;x||E?I=v.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):I=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||P?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||O?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else I=v.setByOffset("global_idx",_(S.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(E,P,O="")=>{let R=`aData[indexA${P}][componentA${P}]`,L=`bData[indexB${P}][componentB${P}]`;return`\n            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offsetA${P} = ${S.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let indexA${P} = offsetA${P} / 4u;\n            let indexB${P} = offsetB${P} / 4u;\n            let componentA${P} = offsetA${P} % 4u;\n            let componentB${P} = offsetB${P} % 4u;\n            ${E}[${P}] = ${O}(${w(R,L)});\n          `};d===9?I=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:I=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,A,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${I}\n      }`},hc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),d=!1,y=!1,w=[c];if(c){let _=It.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let v=M.size(r.dims)===1,S=M.size(o.dims)===1,A=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,I=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(S),w.push(A),w.push(I);let x=1;for(let E=1;E<p.length;E++){let P=r.dims[r.dims.length-E]??1,O=o.dims[o.dims.length-E]??1;if(P===O)x*=P;else break}x%4===0?(y=!0,d=!0):(v||S||A||I)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>fc(_,r.dims,o.dims,p,d,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},Ot=(e,t,r,o,i,u)=>{e.compute(hc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ws=e=>{Ot(e,"Add",(t,r)=>`${t}+${r}`)},Ns=e=>{Ot(e,"Div",(t,r)=>`${t}/${r}`)},Gs=e=>{Ot(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Hs=e=>{Ot(e,"Mul",(t,r)=>`${t}*${r}`)},Ls=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ot(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Fs=e=>{Ot(e,"Sub",(t,r)=>`${t}-${r}`)},qs=e=>{Ot(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},js=e=>{Ot(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ks=e=>{Ot(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ys=e=>{Ot(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var St,xt,Ct,Bn,Ft=Y(()=>{"use strict";ye();Se();St=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},xt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ct=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var tt,Dn,zn=Y(()=>{"use strict";tt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Dn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,zo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var yc,bc,Hr,Xs,wc,Lr,vc,Un,Fr=Y(()=>{"use strict";ye();Se();_e();Ft();zn();yc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,bc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],d=i?p:u,y=i?u:p,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${bc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],S=u/t[1],A=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${A}\n  }\n`},vc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,d,y,w]=o,_=_r(a,p),v=_r(c,p),S=De(o[0].type.tensor),A=()=>{let E=d.rank,P=h.rank,O=`var aIndices: ${d.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\naIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return _.forEach(R=>{O+=`\naIndices[${R}] = 0;`}),O+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,O},I=()=>{let E=y.rank,P=h.rank,O=`var bIndices: ${y.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\nbIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return v.forEach(R=>{O+=`\nbIndices[${R}] = 0;`}),O+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,O};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${A()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${I()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tt(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${tt(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Un=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],A=[8,8,1],I=[Math.ceil(_/A[0]/S[0]),Math.ceil(y/A[1]/S[1]),Math.ceil(d/A[2]/S[2])],x=v?4:1,E=[...c,y,w/x],P=E.length,O=[...p,w,_/x],R=O.length,L=[d,y,_/x],N=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];xt(t,N),N.push(...Z(h,E,O));let K=["rank","rank"],Q=e.length>2;Q&&(N.push(...Z(e[2].dims)),K.push("rank")),N.push(...Z(L));let he=W=>{let se=h.length,Ce=An("batchDims",e[0].dataType,se,1),We=De(e[0].dataType),ee=U("a",e[0].dataType,P,x),ae=U("b",e[1].dataType,R,x),Ae=j("result",e[0].dataType,L.length,x),me=[ee,ae];if(Q){let G=i?x:1;me.push(U("bias",e[2].dataType,e[2].dims.length,G))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ct(t,ie);let ue=De(Ae.type.tensor),le=St(t,Ae.type.value,ue),qe=vc(x,Q,le,[Ce,ee,ae,Ae],[c,p,h],i);return`\n  ${W.registerUniforms(ie).registerInternalVariables(Ce).declareVariables(...me,Ae)}\n  ${qe}\n  ${v?Hr(S,A,We,Ce):Lr(S,A,We,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${v};${i}`,inputDependencies:K},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:N}),getShaderSource:he}}});var $c,Qs,Js=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();$c=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},y=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",I=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${I} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${I} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${I} % inChannels;\n    var resData = ${tt(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`,P=`${y(c)}`,O=tt(p,h),R=e?tt(a,h):tt(c,h),L=e?tt(c,h):tt(a,h),N=St(u,O,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {\n      ${e?E:P}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${L} {\n      ${e?P:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${O}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Dn(i)}\n      ${N}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Qs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let P=v?p&&h%4!==0?3:4:1,O=I[1]*x[1],R=I[0]*x[0],L=Math.max(I[0]*P,I[1]),N=o%O===0,K=i%R===0,Q=u%L===0,he=v?[P,4,4]:[1,1,1],W=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];xt(t,W),W.push(...Z(e[0].dims,e[1].dims));let se=["rank","rank"];a&&(W.push(...Z(e[2].dims)),se.push("rank")),W.push(...Z(r));let Ce=We=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ct(t,ee);let ae=v?4:1,Ae=De(e[0].dataType),me=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${v?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ie=U("x",e[0].dataType,e[0].dims.length,P===3?1:P),ue=U("w",e[1].dataType,e[1].dims.length,ae),le=[ie,ue],qe=j("result",e[0].dataType,r.length,ae);if(a){let G=U("bias",e[2].dataType,e[2].dims.length,ae);le.push(G),me+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${We.registerUniforms(ee).declareVariables(...le,qe)}\n        ${me}\n        ${$c(p,N,K,Q,a,t,he[0],he[1],he[2],Ae)}\n        ${v?Hr(x,I,Ae,void 0,!p,L):Lr(x,I,Ae,void 0,!p,L,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${P};${v};${N};${K};${Q};${O};${R};${L}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:Ce}}});var Mo,eu,tu=Y(()=>{"use strict";ye();Se();_e();Uo();Ft();Mo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Vn(u,a,t.dilations,t.pads,t.strides,p),d=M.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];xt(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=v=>{let S=j("output",e[0].dataType,h.length),A=De(S.type.tensor),I=St(t,S.type.value,A),x=U("x",e[0].dataType,u.length),E=U("w",e[1].dataType,a.length),P=[x,E];o&&P.push(U("b",e[2].dataType,e[2].dims.length));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ct(t,O),`\n  ${v.registerUniforms(O).declareVariables(...P,S)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${I}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}},eu=(e,t,r)=>{let o=e.length>2,i=Me(r[3]),u=Me(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],d=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];xt(t,d),d.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let v=j("output",e[0].dataType,h.length,i),S=De(v.type.tensor),A=St(t,v.type.value,S),I=U("x",e[0].dataType,c.length,i),x=U("w",e[1].dataType,p.length,i),E=[I,x];o&&E.push(U("b",e[2].dataType,e[2].dims,i));let P=o?"value += b[output_channel];":"",O=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ct(t,O),`\n  ${_.registerUniforms(O).declareVariables(...E,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${I.type.value}, ${y}>;\n    var values: array<${v.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${I.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${I.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${P}\n      ${A}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:w}}});var Vo,_c,ru,Wo=Y(()=>{"use strict";ye();Se();Fr();_e();Ft();Vo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],d=Me(p),y=Me(h),w=Me(c),_=M.size(r)/d/w,v=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),I=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];xt(t,x),x.push(...Z(S,u,a)),v&&x.push(...Z(e[2].dims)),x.push(...Z(I));let E=P=>{let O=An("batch_dims",e[0].dataType,S.length),R=U("a",e[0].dataType,u.length,y),L=U("b",e[1].dataType,a.length,d),N=j("output",e[0].dataType,I.length,d),K=De(N.type.tensor),Q=St(t,N.type.value,K),he=[R,L],W="";if(v){let ie=i?d:1;he.push(U("bias",e[2].dataType,e[2].dims.length,ie)),W=`${i?`value += bias[col / ${ie}];`:`value += ${N.type.value}(bias[row + i]);`}`}let se=u.slice(0,-2),Ce=a.slice(0,-2),We=_r(se,S),ee=_r(Ce,S),ae=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ct(t,ae);let Ae=(ie,ue)=>{let le=ie.rank,qe=ie.name;if(le===2)return`var ${qe}_indices = ${ie.type.indices}(0u, 0u);`;let G=O.rank,ne=`var ${qe}_indices: ${ie.type.indices};`;for(let xe=le-2-1,Ke=G-1;xe>=0;xe--,Ke--)ne+=`\n${qe}_indices[${xe}] = ${G>1?`batch_indices[${Ke}]`:"batch_indices"};`;return ue.forEach(xe=>{ne+=`\n${qe}_indices[${xe}] = 0;`}),ne+=`${qe}_indices[${le-2}] = 0u;\n                     ${qe}_indices[${le-1}] = 0u;`,ne},me=()=>{let ie=`var a_data: ${R.type.value};`;for(let ue=0;ue<y;ue++)ie+=`\n              let b_data${ue} = b[(b_offset + (k + ${ue}) * uniforms.N + col) / ${d}];`;for(let ue=0;ue<w;ue++){ie+=`a_data = a[(a_offset + (row + ${ue}) * uniforms.K + k) / ${y}];`;for(let le=0;le<y;le++)ie+=`\n            values[${ue}] = fma(${L.type.value}(a_data${y===1?"":`[${le}]`}), b_data${le}, values[${ue}]);\n`}return ie};return`\n  ${P.registerUniforms(ae).registerInternalVariables(O).declareVariables(...he,N)}\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}\n    ${Ae(R,We)}\n    let a_offset = ${R.indicesToOffset("a_indices")};\n    ${Ae(L,ee)}\n    let b_offset = ${L.indicesToOffset("b_indices")};\n    var values: array<${N.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${me()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${W}\n      ${Q}\n      let cur_indices = ${N.type.indices}(batch, row + i, col);\n      let offset = ${N.indicesToOffset("cur_indices")};\n      ${N.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:E}},_c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ru=e=>{_c(e.inputs);let t=It.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Vo(e.inputs,{activation:""},t)):e.compute(Un(e.inputs,{activation:""},t))}});var Vn,No,Sc,nu,Go,xc,Cc,Ho,Uo=Y(()=>{"use strict";Se();Js();Fr();tu();Ft();Wo();Sr();Vn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map((v,S)=>v+(v-1)*(r[S]-1)),_=c.map((v,S)=>v+o[S]+o[S+p]).map((v,S)=>Math.floor((v-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},No=[2,3,1,0],Sc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},nu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();nr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Go=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},xc=(e,t,r)=>{let o=nu(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let L=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),N=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=N);let K=[t[0],N];t.length===3&&K.push(t[2]),e.compute(eu(K,o,L),{inputs:K})}else e.compute(Mo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],S=i&&h===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let R=y[0],L,N,K,Q=[];if(i){let se=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se),S){let Ce=a*c*p;L=t[0].reshape([1,R,Ce]),N=se.reshape([1,Ce,v]),K=[1,R,v]}else L=t[0].reshape([R,a*c,p]),N=se.reshape([1,p,v]),K=[R,w*_,v];Q.push(L),Q.push(N)}else L=t[0].reshape([R,p,a*c]),N=t[1].reshape([1,v,p]),K=[R,v,w*_],Q.push(N),Q.push(L);u&&Q.push(t[2]);let he=K[2],W=Q[0].dims[Q[0].dims.length-1];he<8&&W<8?e.compute(Vo(Q,o,y,K,i),{inputs:Q}):e.compute(Un(Q,o,y,K,i),{inputs:Q});return}let A=!0,I=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let x=[t[0],I];u&&x.push(t[2]);let E=i?w*_:v,P=i?v:w*_,O=h*d*p;e.compute(Qs(x,o,y,E,P,O,u,A),{inputs:x})},Cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=nu({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Mo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Ho=(e,t)=>{Sc(e.inputs,t),e.inputs[0].dims.length===3?Cc(e,t):xc(e,e.inputs,t)}});var Ac,ou,iu=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();Ac=(e,t=!1,r,o,i=4)=>{let u=I=>{switch(I){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=St(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Dn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},ou=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let P=v?4:1,O=Math.max(I[0]*P,I[1]),R=v?4:1,L=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],N=[L[0]+(t.dilations[0]<=1?0:(L[0]-1)*(t.dilations[0]-1)),L[1]+(t.dilations[1]<=1?0:(L[1]-1)*(t.dilations[1]-1))],K=[N[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),N[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Q=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:L},{type:6,data:K}];xt(t,Q),Q.push(...Z(e[0].dims,e[1].dims));let he=["rank","rank"];a&&(Q.push(...Z(e[2].dims)),he.push("rank")),Q.push(...Z(r));let W=se=>{let Ce=U("x",e[0].dataType,e[0].dims.length,R),We=U("w",e[1].dataType,e[1].dims.length,1),ee=j("result",e[0].dataType,r.length,R),ae=[Ce,We],Ae="";if(a){let ue=U("bias",e[2].dataType,e[2].dims.length,R);ae.push(ue),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ue.type.value} {\n            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n          }`}let me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:L.length},{name:"pads",type:"i32",length:K.length}];Ct(t,me);let ie=De(e[0].dataType,1);if(ie!=="f16"&&ie!=="f32")throw new Error(`elemType ${ie} is not supported.`);return`\n        ${Mn("uniforms.result_strides")}\n        ${se.registerUniforms(me).declareVariables(...ae,ee)};\n        ${Ae}\n        ${Ac(p,a,t,Ce.type.value,P)}\n        ${v?Hr(x,I,ie,void 0,!p,O):Lr(x,I,ie,void 0,!p,O,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${I};${v}`,inputDependencies:he},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Q}),getShaderSource:W}}});var Ic,Lo,au=Y(()=>{"use strict";ye();Lt();Se();_e();Ic=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,d=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,S=U("W",t[1].dataType,t[1].dims.length,v),A=U("Dy",t[0].dataType,t[0].dims.length,v),I=[A,S];o&&I.push(U("bias",t[2].dataType,[r[y]].length,v));let x=j("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${A.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,P=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?A.get("batch","idyR","idyC","inputChannel"):A.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...I,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:P}}`},Lo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,S=t.group,A=e[1].dims,I=A[0]/S,x=A[1],E=[{type:12,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:I},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),p.push("rank")),E.push(...Z(i));let P=a[1]===1&&a[2]===1,O=R=>{let L=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],N=De(e[0].dataType);return`${Ic(R,e,i,o,P,v,N,L,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:O}}});var Tc,Ec,Pc,su,uu,kc,Oc,Rc,Bc,du,lu=Y(()=>{"use strict";iu();au();Ft();Sr();Tc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Ec=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Pc=(e,t,r,o,i,u,a,c,p,h)=>{let d=e.length-2,y=h.length===0;if(p.length===0)for(let v=0;v<d;++v)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let v=0,S=e.length-d-(c?1:0);v<d;++v,++S){let A=e[S],I=y?A*a[v]:h[v],x=Tc(A,a[v],u[v],t[S],r[v],I);Ec(x,o,u,v,v+d),y&&h.push(a[v]*(A-1)+p[v]+(t[S]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(c?3:1,0,_)},su=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Pc(c,r,p,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),d},uu=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},kc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Oc=[2,3,1,0],Rc=(e,t,r)=>{let o=su(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Lo(t,o));return}let p=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,v=d*y*c,S=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],Oc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let I=[t[0],A],x=t.length===3;x&&(!i&&t[2].dims.length===1?I.push(t[2].reshape([t[2].dims[0],1,1])):I.push(t[2])),e.compute(ou(I,o,u,w,_,v,x,S),{inputs:I})},Bc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=su({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Lo(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},du=(e,t)=>{kc(e.inputs,t),e.inputs[0].dims.length===3?Bc(e,t):Rc(e,e.inputs,t)}});var Dc,cu,pu,mu=Y(()=>{"use strict";ye();Se();Ze();_e();Dc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=U("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Z(t,t)]}),getShaderSource:d}},cu=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Dc(o,r,i,t),{inputs:[0]})},pu=e=>{let t=e.exclusive===1,r=e.reverse===1;return ve({exclusive:t,reverse:r})}});var zc,Mc,Uc,fu,hu,gu=Y(()=>{"use strict";ye();Se();Ze();_e();zc=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mc=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},Uc=(e,t)=>{let r,o,i,u,a,c,p=t.format==="NHWC",h=t.blocksize,d=t.mode==="DCR";p?([r,o,i,u]=e.dims,a=d?[r,o,i,h,h,u/h**2]:[r,o,i,u/h**2,h,h],c=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,o,i,u]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[r,h,h,u/h**2,o,i]:[r,u/h**2,h,h,o,i],c=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=e.reshape(a),w=y.dims.length,_=e.dataType,v=U("a",_,w),S=j("output",_,w),A=I=>`\n  ${I.registerUniform("output_size","u32").declareVariables(v,S)}\n\n  ${Mc(c,w,v,S)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${S.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${S.setByOffset("global_idx",v.getByIndices("aIndices"))}\n  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:I=>{let x=p?[r,o*h,i*h,u/h**2]:[r,u/h**2,o*h,i*h],E=M.size(x),P=y.dims,O=M.sortBasedOnPerm(P,c);return{outputs:[{dims:x,dataType:I[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Z(P,O)]}},getShaderSource:A}},fu=(e,t)=>{zc(e.inputs),e.compute(Uc(e.inputs[0],t))},hu=e=>ve({blocksize:e.blocksize,mode:e.mode,format:e.format})});var Fo,Wn,yu,Vc,Wc,qo,jo,bu,Nc,wu,vu,$u=Y(()=>{"use strict";ye();Se();Ze();_e();Fo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Fo+")+",yu="^"+Wn+"$",Vc="("+Wn+",)*"+Wn,Wc="^"+Vc+"$",qo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},jo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Wc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(yu)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,h,p);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Fo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(yu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Fo,"g")),d=new qo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let S=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(S,w+v),this.addSymbol(S,o[p++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),d}},bu=e=>e+"_max",Nc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>U(`input${y}`,t,d)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",S=[],A=[],I=[],x=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{if(r.rhs.symbolToIndices.has(R)){let L=r.rhs.symbolToIndices.get(R)?.[0];L!==void 0&&r.lhs.forEach((N,K)=>{if(O.inputIndices.includes(K)){let Q=N.symbolToIndices.get(R);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(he=>{y.push(`${u[K].indicesSet(`input${K}Indices`,he,c.indicesGet("outputIndices",L))}`)})}})}else r.lhs.forEach((L,N)=>{if(O.inputIndices.includes(N)){let K=L.symbolToIndices.get(R);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Q=>{S.push(`${u[N].indicesSet(`input${N}Indices`,Q,`${R}`)}`)}),x.push(`prod *= ${u[N].getByIndices(`input${N}Indices`)};`)}}),A.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${bu(R)}; ${R}++) {`),I.push("}")});let P=E?[...y,`let sum = ${u.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...y,_,...A,...S,w,...x,v,...I];return`\n            ${d.registerUniforms(p.map(O=>({name:`${bu(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((O,R)=>`var input${R}Indices: ${u[R].type.indices};`).join(`\n`)}\n            ${P.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},wu=(e,t)=>{let r=new jo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Nc(i,e.inputs[0].dataType,r,o))},vu=e=>{let t=e.equation.replace(/\\s+/g,"");return ve({equation:t})}});var Gc,_u,Hc,Lc,Su,xu=Y(()=>{"use strict";ye();Se();_e();Gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_u=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Hc=(e,t)=>e.length>t.length?_u(e,t):_u(t,e),Lc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Hc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let d=U("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=(v,S,A="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${d.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${v}[${S}] = ${A}(${d.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Su=e=>{Gc(e.inputs),e.compute(Lc(e.inputs),{inputs:[0]})}});var Fc,Cu,Au=Y(()=>{"use strict";ye();Se();_e();Rn();Fc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=U("x",t,[1],4),p=U("bias",t,[1],4),h=j("y",t,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(c,p,h)}\n\n    ${Bo(et(t))}\n\n    ${a.mainStart(or)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",Do("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},Cu=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Bs(e):e.compute(Fc(e.inputs))}});var qc,jc,Iu,Tu,Eu=Y(()=>{"use strict";ye();Se();Ze();_e();qc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),d=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=U("data",e[0].dataType,e[0].dims.length,p),v=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),A=x=>{let E=o.length,P=`var indicesIndices${x}  = ${v.type.indices}(0);`;for(let O=0;O<E;O++)P+=`${E>1?`indicesIndices${x}[${O}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${O}]`:`outputIndices${x}`};`;P+=`\n          var idx${x} = ${v.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let O=0,R=0;O<i;O++)O===u?(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = u32(idx${x});`,R+=E):(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${R}]`:`outputIndices${x}`};`,R++);return P},I;if(e[0].dataType===9){let x=(E,P,O="")=>`\n          let outputIndices${P} = ${S.offsetToIndices(`outputOffset + ${P}u`)};\n          ${A(P)};\n          let offset${P} = ${_.indicesToOffset(`dataIndices${P}`)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${E}[${P}] = ${O}(${_.getByOffset(`index${P}`)}[component${P}]);\n        `;I=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else I=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${A("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${I}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},Iu=e=>ve({axis:e.axis}),Tu=(e,t)=>{let r=e.inputs;qc(r),e.compute(jc(e.inputs,t))}});var Kc,Yc,Pu,ku,Ou=Y(()=>{"use strict";ye();Se();Ze();_e();Kc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Yc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),d=M.size(h),y=U("input",o,i),w=U("indicesInput",a,u.length),_=j("output",o,h.length),v=[{type:12,data:d},{type:6,data:p},{type:12,data:c}];return v.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:I=>`\n      ${I.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${I.mainStart()}\n      ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Pu=e=>ve({axis:e.axis}),ku=(e,t)=>{let r=e.inputs;Kc(r),e.compute(Yc(e.inputs,t))}});var Zc,Xc,Ru,Bu,Du=Y(()=>{"use strict";ye();Se();_e();Zc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),d.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),A=U("b",e[1].dataType,e[1].dims),I=S.type.value,x=null,E=[S,A];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let P=j("output",e[0].dataType,c.length);E.push(P);let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(O).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${I}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${I}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Ru=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Bu=(e,t)=>{Zc(e.inputs),e.compute(Xc(e.inputs,t))}});var Qc,Jc,ep,zu,Mu=Y(()=>{"use strict";ye();Se();_e();Qc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=Me(a),p=a/c,h=[r[0],r[1],p],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let v=U("x",e[0].dataType,h.length,c),S=U("scale",e[1].dataType,e[1].dims),A=U("bias",e[2].dataType,e[2].dims),I=j("output",e[0].dataType,h.length,c),x=[v,S,A,I],E=v.type.value,P=c===1?"f32":`vec${c}<f32>`,O=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${P}, ${O}>;\n  const workgroupSize = ${O}u;\n  ${_.registerUniforms(R).declareVariables(...x)}\n  ${_.mainStart(O)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${P}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${_t("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${_t("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${P}(channelScale)) + ${E}(${P}(channelShift));\n      ${I.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Jc=(e,t,r,o,i,u,a,c)=>{let p=Me(a),h=64,d=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(R,L)=>`${d}(${R}, ${L})`,_=i*a/p,v=Math.ceil(u/h),S=["type"],A=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],I=R=>{let L=U("input",t.dataType,t.dims,p);return`\n  ${R.declareVariables(L)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:A}),getShaderSource:I},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],P=["type","type","type"],O=R=>{let L=U("scale",r.dataType,r.dims,p),N=U("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${L.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${N.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:O},{inputs:[x,r,o],outputs:[-1]})[0]},ep=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=Me(a),h=M.size(i)/p,d=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=Jc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=v=>{let S=De(t[0].dataType),A=p===1?"vec2f":`mat2x${p}f`,I=p===1?S:`vec${p}<${S}>`,x=U("input",t[0].dataType,t[0].dims,p),E=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${I}(scale[0]), ${I}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},zu=(e,t)=>{t.format==="NHWC"?ep(e,e.inputs,t):e.compute(Qc(e.inputs,t))}});var tp,rp,Uu,Vu=Y(()=>{"use strict";ye();Se();_e();tp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rp=(e,t,r)=>{let o=t.simplified,i=e[0].dims,u=e[1],a=!o&&e[2],c=i,p=M.normalizeAxis(t.axis,i.length),h=M.sizeToDimension(i,p),d=M.sizeFromDimension(i,p),y=M.size(u.dims),w=a?M.size(a.dims):0;if(y!==d||a&&w!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${y} and bias size of ${w}`);let _=[];for(let O=0;O<i.length;++O)O<p?_.push(i[O]):_.push(1);let v=Me(d),S=["type","type"],A=[{type:12,data:h},{type:1,data:d},{type:12,data:Math.floor(d/v)},{type:1,data:t.epsilon}];a&&S.push("type");let I=r>1,x=r>2,E=O=>{let R=De(e[0].dataType),L=[U("x",e[0].dataType,e[0].dims,v),U("scale",u.dataType,u.dims,v)];a&&L.push(U("bias",a.dataType,a.dims,v)),L.push(j("output",e[0].dataType,c,v)),I&&L.push(j("mean_data_output",1,_)),x&&L.push(j("inv_std_output",1,_));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...L)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${$t("f32",v)};\n    var mean_square_vector = ${$t("f32",v)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ir(R,v,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${_t("mean_vector",v)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${_t("mean_square_vector",v)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ir(R,v,"x[j + offset]")};\n      let f32scale = ${ir(R,v,"scale[j]")};\n      output[j + offset] = ${L[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${ir(R,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:c,dataType:e[0].dataType}];return I&&P.push({dims:_,dataType:1}),x&&P.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${v};${r};${o}`,inputDependencies:S},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:A}),getShaderSource:E}},Uu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs,t,e.outputCount))}});var np,op,Wu,Nu,Gu=Y(()=>{"use strict";ye();Se();Ze();_e();np=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(d)!==y)throw new Error("zeroPoints input size error.")}},op=(e,t,r,o)=>{let i=e[0].dims,u=i.length,a=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=i[u-2],p=t.k,h=t.n,d=i.slice(0,u-2),y=M.size(d),_=t.blockSize/8*t.bits/4,v=e[0].dataType,S=Me(c),A=Me(t.k),I=Me(_),x=tr(v),E=c*a*x,P=Math.floor(o/E),O=a<=r[0]&&P>0,R=!O||P>=4?Me(h):P>=2&&Me(h)>=2?2:1,L=d.concat([c,h]),N=M.size(L)/R/S,K=O?[]:[{type:12,data:N},{type:12,data:t.blockSize}],Q=[y,c,p/A],he=M.convertShape(e[1].dims).slice();he.splice(-1,1,_/I),K.push(...Z(Q)),K.push(...Z(he)),K.push(...Z(e[2].dims)),e.length===4&&K.push(...Z(M.convertShape(e[3].dims)));let W=[y,c,h/R];K.push(...Z(W));let se=Ce=>{let We=Q.length,ee=U("a",e[0].dataType,We,A),ae=U("b",12,he.length,I),Ae=U("scales",e[2].dataType,e[2].dims.length),me=[ee,ae,Ae],ie=e.length===4?U("zero_points",12,e[3].dims.length):void 0;ie&&me.push(ie);let ue=W.length,le=j("output",e[0].dataType,ue,R),qe=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],G=De(e[0].dataType),ne=(()=>{switch(A){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${A}-component is not supported.`)}})(),xe=`\n        for (var word: u32 = 0; word < ${_}; word += ${I}) {\n          ${ae.indicesSet("b_indices","2","word")};\n          let b_data = ${ae.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${I}; i++) {\n            let b_value: u32 = ${I===1?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${ne}(${Array.from({length:4},(Be,Ge)=>`${G}(b_value_lower[${Ge}]), ${G}(b_value_upper[${Ge}])`).join(", ")});\n            let b_dequantized_values = ${(()=>A===1?`${ne}(${Array.from({length:8},(Be,Ge)=>`(b_quantized_values[${Ge}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ne}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${O?c:S}u; m++) {\n              ${ee.indicesSet("a_indices",We-2,O?"m":`row * ${S} + m`)};\n              ${ee.indicesSet("a_indices",We-1,"word_offset")};\n              var input_offset = ${ee.indicesToOffset("a_indices")};\n              var a_data: ${ne};\n              for (var j: u32 = 0; j < ${8/A}; j++) {\n                a_data[j] = ${ee.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/A},(Be,Ge)=>`${A===1?`a_data[${Ge}] * b_dequantized_values[${Ge}]`:`dot(a_data[${Ge}], b_dequantized_values[${Ge}])`}`).join(" + ")};\n            }\n            word_offset += ${8/A};\n          }\n        }`,Ke=ie?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ie.getByOffset("zero_point_index")};\n          }`:"";return O?`\n        var<workgroup> workgroup_shared: array<${le.type.value}, ${c*a}>;\n        ${Ce.declareVariables(...me,le)}\n        ${Ce.mainStart([a,1,1])}\n          var a_indices: ${ee.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${ee.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${R}; c++) {\n            let col_times_components_plus_c = col * ${R} + c;\n              ${ie?`\n            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ie.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${ae.type.indices};\n            ${ae.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${a} + block;\n            let scale = ${Ae.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ie?"(zero_point_word) & 0xFu":8});\n            ${ae.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/A};\n            var workgroup_shared_offset: u32 = block * ${c};\n            ${xe}\n          }\n          workgroupBarrier();\n          if (local_id.x == 0u) {\n            var output_indices: ${le.type.indices};\n            ${le.indicesSet("output_indices","0","batch")};\n            ${le.indicesSet("output_indices",ue-1,"col")};\n            ${le.indicesSet("output_indices",ue-2,"0")};\n            var output_offset = ${le.indicesToOffset("output_indices")};\n            for (var m: u32 = 0u; m < ${c}u; m++) {\n              var output_value: ${le.type.value} = ${le.type.value}(0);\n              var workgroup_shared_offset: u32 = m;\n              for (var b: u32 = 0u; b < ${a}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${le.setByOffset("output_offset","output_value")};\n              output_offset += ${h/R};\n            }\n          }\n        }`:`\n        ${Ce.registerUniforms(qe).declareVariables(...me,le)}\n        ${Ce.mainStart()}\n          ${Ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${le.type.value}, ${S}>;\n          var output_indices = ${le.offsetToIndices("global_idx")};\n          var col = ${le.indicesGet("output_indices",ue-1)};\n          var row = ${le.indicesGet("output_indices",ue-2)};\n          var a_indices: ${ee.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ie?`\n          var zero_point_abs_offset = col * ${R} * ((${a} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${ie.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${a*R};\n          var b_indices: ${ae.type.indices};\n          for (var c: u32 = 0; c < ${R}; c++) {\n            ${ae.indicesSet("b_indices","0",`col * ${R} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${a}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${Ae.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ie?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${ae.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${xe}\n              scale_index++;\n              ${Ke}\n              block_offset += uniforms.block_size / ${A};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ie?`if (zero_point_offset % 8 > 0) {\n                ${Ke}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${S}u; k++) {\n              ${le.indicesSet("output_indices",ue-2,`${S} * row + k`)};\n              ${le.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${c};${v};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:L,dataType:v}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(h/R),z:y}:{x:Math.ceil(N/64)},programUniforms:K}),getShaderSource:se}},Wu=(e,t)=>{np(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(op(e.inputs,t,r,o))},Nu=e=>ve(e)});var it,ip,Lu,Hu,ap,Ko,Fu,qu=Y(()=>{"use strict";ye();Se();Ze();_n();Ro();_e();Sr();it=(e,t)=>e.length>t&&e[t].dims.length>0&&M.size(e[t].dims)>0?e[t]:void 0,ip=(e,t)=>{let r=e[0],o=it(e,1),i=it(e,2),u=it(e,3),a=it(e,4),c=it(e,5),p=it(e,6),h=it(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,S=0,A=0,I=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==I)throw new Error(\'Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==I)throw new Error(\'Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(p.dims[2]!==h.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],A=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==I)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==I)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let N=a.dims;throw N.length===1?N[0]===y?E=1:N[0]===3*y+2&&(E=3):N.length===2&&N[0]===y&&N[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let P=!1,O=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');O=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');O=i.dims[1]*i.dims[3],P=!0}}let R=S+v,L=!1;if(a)throw new Error("Key padding mask is not supported");if(c){if(c.dims.length!==4)throw new Error(\'Input "relative_position_bias" is expected to have 4 dimensions\');if(c.dims[0]!==y&&c.dims[0]!==1||c.dims[1]!==t.numHeads||c.dims[2]!==w||c.dims[3]!==R)throw new Error(\'Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)\')}return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:R,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:_,vHiddenSize:O,headSize:I,vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:L,passPastInKv:P,qkvFormat:x}},Lu=e=>ve({...e}),Hu=ve({perm:[0,2,1,3]}),ap=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],d=y=>{let w=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),v=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Ko=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ap(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]},Fu=(e,t)=>{let r=ip(e.inputs,t),o=e.inputs[0],i=it(e.inputs,1),u=it(e.inputs,2),a=it(e.inputs,3),c=it(e.inputs,4),p=it(e.inputs,5),h=it(e.inputs,6),d=it(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let y=i&&u&&i.dims.length===4&&u.dims.length===4,w=Ko(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,o,a,0);if(y)return Pn(e,w,i,u,c,void 0,h,d,p,r,t);if(!i||!u)throw new Error("key and value must be provided");let _=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),v=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,u,a,2*r.hiddenSize);Pn(e,w,_,v,c,void 0,h,d,p,r,t)}});var sp,up,dp,lp,cp,pp,mp,fp,ju,Ku=Y(()=>{"use strict";ye();Se();_e();sp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},up=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},dp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},lp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k = i32(${fe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},cp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},pp=(e,t,r)=>{switch(r.mode){case 0:return up(e,t,r.pads.length);case 1:return dp(e,t,r.pads.length);case 2:return lp(e,t,r.pads.length);case 3:return cp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),y=d.type.value,w=pp(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(d,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},fp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},ju=(e,t)=>{sp(e.inputs);let r=fp(e.inputs,t);e.compute(mp(e.inputs,r),{inputs:[0]})}});var Nn,Yu,Zu,Xu,Qu,hp,gp,Ju,ed,td,rd,nd,od,id,ad,sd,ud,dd,ld,cd=Y(()=>{"use strict";$r();ye();Se();_e();Nn=e=>{if(vr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Yu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();nr.adjustPoolAttributes(r,i,a,c,p,h);let d=nr.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Zu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],A=t.pads[t.pads.length-2];w=!!(S+A),u.push({type:12,data:_},{type:12,data:v},{type:12,data:S},{type:12,data:A}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,d)=>h+d);return[u,a,!!p,!1,!1]}},Xu=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",A="",I="",x=r-(w?2:1);if(d?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let P=r-(w?3:2);y?A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                `,I=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${A}\n              ${S}\n              ${I}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,A=i.pads.length,I="";return h?I=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:I=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${fe("uniforms.pads","j - 2u",A)};\n                  ${I}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Qu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,hp=e=>`${Qu(e)};${e.countIncludePad}`,gp=e=>`${Qu(e)};${e.storageOrder};${e.dilations}`,Ju=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ed=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Zu(u,i);d.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:A=>Xu(A,a,t.dims.length,u.length,i,p,h,0,y,w,_,v)}},td=e=>{let t=e.count_include_pad!==0,r=Ju(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:hp(o)}},rd=(e,t)=>{Nn(e.inputs),e.compute(ed("AveragePool",e.inputs[0],!1,t))},nd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},od=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},id=(e,t)=>{Nn(e.inputs),e.compute(ed("GlobalAveragePool",e.inputs[0],!0,t))},ad=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=U("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Zu(u,i);return d.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:S=>Xu(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,v)}},sd=(e,t)=>{Nn(e.inputs),e.compute(ad("MaxPool",e.inputs[0],!1,t))},ud=e=>{let t=e.storage_order,r=e.dilations,o=Ju(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:gp(i)}},dd=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},ld=(e,t)=>{Nn(e.inputs),e.compute(ad("GlobalMaxPool",e.inputs[0],!0,t))}});var bp,wp,pd,md=Y(()=>{"use strict";$r();ye();_e();bp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},wp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let d=j("output",o,u.length),y=d.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},pd=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),vr.webgpu.validateInputContent&&bp(t,r,o),e.compute(wp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var vp,$p,_p,Sp,xp,Cp,Ap,Ip,Tp,Ep,Pp,fd,kp,Op,Rp,Bp,Dp,hd,gd,yd=Y(()=>{"use strict";ye();Se();Ze();_e();vp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},$p=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},_p=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vp(o,t),t.axes.length>0&&$p(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Sp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",xp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Cp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Ap=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Ip=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",i)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",u)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Pp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,fd=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",kp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${fd(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Op=(e,t,r,o,i,u,a,c,p,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,S=A=>{let I=A===w?"row":"col";return`\n      fn ${I}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",A)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[A]},\n        ${o[A]}, ${r[A]}, ${u[A]}, ${u[A]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[A]} - 1))) {\n          return ${p};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${I}: ${v} = originalIdx + ${v}(i);\n          if (${I} < 0 || ${I} >= ${r[A]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${I} = max(0, min(${I}, ${r[A]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",A,`u32(${I})`)};\n          data[i + 1] = ${A===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rp=(e,t,r,o,i)=>{let[a,c,p,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${fd(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Bp=(e,t,r,o,i,u)=>{let a=e.dims,c=Cp(u,t.axes,a.length),p=Ap(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,E)=>x===0?1:p[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=Ip(a,h,t)));let d=j("output",e.dataType,p.length),y=U("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,E)=>x===p[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,A=y.type.value,I=x=>`\n      ${_?"":`\n      ${Sp(t.coordinateTransformMode,A)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Pp(y,a)};\n              ${xp(t.nearestMode,r,A)};\n              ${Ep(y,d,a,p,h.length,c.length,v)};\n              `;case"linear":return`\n              ${Tp(d,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${kp(y,d,a,v,S)}`;if(a.length===3||a.length===5)return`${Rp(y,d,a,v,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Op(y,d,a,p,h,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Dp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},hd=(e,t)=>{let r=[],o=[],i=[],u=Dp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");_p(e.inputs,t,u,r,o,i),e.compute(Bp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},gd=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return ve({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var zp,Mp,bd,wd=Y(()=>{"use strict";ye();Se();Ze();_e();zp=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],d=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,d=e[2].dims[1],y=i===0?d*2:h/o,w=new Array(a,p,h/y,y-d),_=M.computeStrides(w),v=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=A=>{let I=U("input",e[0].dataType,e[0].dims.length),x=U("position_ids",e[1].dataType,e[1].dims.length),E=U("cos_cache",e[2].dataType,e[2].dims.length),P=U("sin_cache",e[3].dataType,e[3].dims.length),O=j("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${A.declareVariables(I,x,E,P,O)}\n\n        ${A.mainStart(or)}\n          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${I.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -\n                ${I.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${O.setByOffset("i","re")}\n            let im = ${I.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +\n                ${I.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${O.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${O.setByOffset("k",I.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/or)},programUniforms:v})}},bd=(e,t)=>{zp(e.inputs,t),e.compute(Mp(e.inputs,t))}});var Up,Vp,vd,$d=Y(()=>{"use strict";ye();Se();_e();Up=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Vp=(e,t,r,o)=>{let i=t.simplified,u=e[0].dims,a=M.size(u),c=u,p=a,h=u.slice(-1)[0],d=o?u.slice(0,-1).concat(1):[],y=!i&&e.length>3,w=e.length>4,_=o&&r>1,v=o&&r>2,S=r>3,A=Me(h),I=[{type:12,data:p},{type:12,data:A},{type:12,data:h},{type:1,data:t.epsilon}],x=P=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],R=[U("x",e[0].dataType,e[0].dims,A),U("skip",e[1].dataType,e[1].dims,A),U("gamma",e[2].dataType,e[2].dims,A)];y&&R.push(U("beta",e[3].dataType,e[3].dims,A)),w&&R.push(U("bias",e[4].dataType,e[4].dims,A)),R.push(j("output",e[0].dataType,c,A)),_&&R.push(j("mean_output",1,d)),v&&R.push(j("inv_std_output",1,d)),S&&R.push(j("input_skip_bias_sum",e[0].dataType,c,A));let L=De(e[0].dataType);return`\n\n      ${P.registerUniforms(O).declareVariables(...R)}\n\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${$t("f32",A)};\n        var squareSum = ${$t("f32",A)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${w?"bias[i]":L+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${S?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ir(L,A,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${_t("sum",A)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${_t("squareSum",A)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);\n        ${_?"mean_output[global_idx] = mean;":""}\n        ${v?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] ${i?"":`- ${L}(mean)`}) * ${L}(inv_std_dev) * gamma[i] ${y?"+ beta[i]":""};\n        }\n      }`},E=[{dims:c,dataType:e[0].dataType}];return r>1&&E.push({dims:d,dataType:1}),r>2&&E.push({dims:d,dataType:1}),r>3&&E.push({dims:u,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${A};${_};${v};${S}`,inputDependencies:e.map((P,O)=>"type")},getShaderSource:x,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(p/h/64)},programUniforms:I})}},vd=(e,t)=>{Up(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Vp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Wp,Gn,Np,_d,Gp,Hp,Sd,xd,Cd=Y(()=>{"use strict";ye();Se();Ze();_e();Wp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Gn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Np=(e,t)=>{if(e.length>1){let r=Gn(e,1),o=Gn(e,2),i=Gn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),ve({starts:r,ends:o,axes:i})}else return t},_d=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Gp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Gn(e,4);u.forEach(I=>I!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((I,x)=>_d(I,x,r,i,u)),c=t.ends.map((I,x)=>_d(I,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let I=0;I<r.length;++I)i.includes(I)||(a.splice(I,0,0),c.splice(I,0,r[I]),u.splice(I,0,1));let p=u.map(I=>Math.sign(I));u.forEach((I,x,E)=>{if(I<0){let P=(c[x]-a[x])/I,O=a[x],R=O+P*u[x];a[x]=R,c[x]=O,E[x]=-I}});let h=r.slice(0);i.forEach((I,x)=>{h[I]=Math.ceil((c[I]-a[I])/u[I])});let d={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=U("input",e[0].dataType,e[0].dims.length),_=M.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],A=I=>`\n      ${I.registerUniforms(v).declareVariables(w,y)}\n        ${Gp(w,y,r)}\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Sd=(e,t)=>{Wp(e.inputs,t);let r=Np(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},xd=e=>{let t=e.starts,r=e.ends,o=e.axes;return ve({starts:t,ends:r,axes:o})}});var Lp,Fp,Ad,Id,Td=Y(()=>{"use strict";ye();Se();Ze();_e();Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=Me(a),h=a/p,d=(A,I)=>I===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:I===2?`max(${A}.x, ${A}.y)`:I===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,y=U("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,v=De(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=A=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${A.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${A.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${_t("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},Ad=(e,t)=>{Lp(e.inputs),e.compute(Fp(e.inputs[0],t))},Id=e=>ve({axis:e.axis})});var qp,jp,Kp,Yp,Zp,Ed,Pd,kd=Y(()=>{"use strict";ye();Se();Ze();_e();qp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},jp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),ve({numOutputs:o,axis:t.axis,splitSizes:r})},Kp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Yp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r.length),p=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],p[v]=y;let S=r.slice();S[t.axis]=t.splitSizes[v],d.push(S),a[v]=j(`output${v}`,i,S.length),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...d));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Kp(p.length)}\n  ${Yp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Ed=(e,t)=>{qp(e.inputs);let r=e.inputs.length===1?t:jp(e.inputs,t);e.compute(Zp(e.inputs,r),{inputs:[0]})},Pd=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ve({axis:t,numOutputs:o,splitSizes:r})}});var Od,Xp,Qp,Jp,Rd,Bd=Y(()=>{"use strict";ye();Se();_e();Od=e=>Array.from(e.getBigInt64Array(),Number),Xp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Jp=e=>{let t=e[0].dims,r=Od(e[1]),o=Qp(t,r),i=M.size(o),u=e[0].dataType,a=U("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},Rd=e=>{Xp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}});var em,tm,Dd,zd=Y(()=>{"use strict";ye();Se();_e();em=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),p=U("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let S=`a_data[index_a${_}][component_a${_}]`,A=`b_data[index_b${_}][component_b${_}]`,I=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${d(S,A,I)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},tm=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=It.calcShape(It.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>em(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Dd=e=>{e.compute(tm(e.inputs))}});var Md,Ud=Y(()=>{"use strict";Ka();Ro();Ja();ts();Vs();Zs();Oo();Uo();lu();mu();gu();$u();xu();Au();Eu();Ou();Du();Mu();Vu();Wo();Gu();qu();Ku();cd();md();In();yd();wd();$d();Cd();Td();kd();Bd();Sr();Rn();zd();Md=new Map([["Abs",[rs]],["Acos",[ns]],["Acosh",[os]],["Add",[Ws]],["ArgMax",[ja,ko]],["ArgMin",[qa,ko]],["Asin",[is]],["Asinh",[as]],["Atan",[ss]],["Atanh",[us]],["Attention",[Xa]],["AveragePool",[rd,td]],["BatchNormalization",[Qa]],["BiasAdd",[es]],["BiasSplitGelu",[Us]],["Cast",[ls,ds]],["Ceil",[ps]],["Clip",[cs]],["Concat",[Ya,Za]],["Conv",[Ho,Go]],["ConvTranspose",[du,uu]],["Cos",[ms]],["Cosh",[fs]],["CumSum",[cu,pu]],["DepthToSpace",[fu,hu]],["Div",[Ns]],["Einsum",[wu,vu]],["Elu",[hs,kn]],["Equal",[Gs]],["Erf",[gs]],["Exp",[ys]],["Expand",[Su]],["FastGelu",[Cu]],["Floor",[bs]],["FusedConv",[Ho,Go]],["Gather",[Tu,Iu]],["GatherElements",[ku,Pu]],["Gelu",[ws]],["Gemm",[Bu,Ru]],["GlobalAveragePool",[id,od]],["GlobalMaxPool",[ld,dd]],["Greater",[qs]],["GreaterOrEqual",[Ks]],["HardSigmoid",[Is,As]],["InstanceNormalization",[zu]],["LayerNormalization",[Uu]],["LeakyRelu",[vs,kn]],["Less",[js]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[ru]],["MatMulNBits",[Wu,Nu]],["MaxPool",[sd,ud]],["Mul",[Hs]],["MultiHeadAttention",[Fu,Lu]],["Neg",[_s]],["Not",[$s]],["Pad",[ju]],["Pow",[Ls]],["Range",[pd]],["Reciprocal",[Ss]],["ReduceMin",[Wa]],["ReduceMean",[Da]],["ReduceMax",[Va]],["ReduceSum",[Ga]],["ReduceProd",[Na]],["ReduceL1",[za]],["ReduceL2",[Ma]],["ReduceLogSum",[La]],["ReduceLogSumExp",[Ua]],["ReduceSumSquare",[Ha]],["Relu",[xs]],["Resize",[hd,gd]],["RotaryEmbedding",[bd]],["Sigmoid",[Cs]],["Sin",[Ts]],["Sinh",[Es]],["Slice",[Sd,xd]],["SkipLayerNormalization",[vd]],["Split",[Ed,Pd]],["Sqrt",[Ps]],["Softmax",[Ad,Id]],["Sub",[Fs]],["Tan",[ks]],["Tanh",[Rs]],["ThresholdedRelu",[Ds,kn]],["Tile",[Rd]],["Transpose",[_a,Sa]],["Where",[Dd]]])});var Hn,Vd=Y(()=>{"use strict";$r();Lt();_e();Hn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){rr(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let d of r)p.push({binding:p.length,resource:{buffer:d.buffer}});for(let d of o)p.push({binding:p.length,resource:{buffer:d.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ht(t.programInfo.name)}dispose(){}build(t,r){rr(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=va(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Ht(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var rm,nm,Yo,Ln,Wd=Y(()=>{"use strict";$r();ye();Lt();fa();wa();Ud();Vd();rm=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},nm=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${rm(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Yo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new Yo(await r.requestAdapterInfo()),this.gpuDataManager=ba(this),this.programManager=new Hn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pa(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),A=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),outputsMetadata:w.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:d,startTime:S,endTime:A});else{let I="";y.forEach((E,P)=>{I+=`input[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `});let x="";w.forEach((E,P)=>{x+=`output[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${d}" ${I}${x}execution time: ${A-S} ns`)}wo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Ht()}run(t,r,o,i,u,a){rr(t.name);let c=[];for(let E=0;E<r.length;++E){let P=r[E].data;if(P===0)continue;let O=this.gpuDataManager.get(P);if(!O)throw new Error(`no GPU data for input: ${P}`);c.push(O)}let{outputs:p,dispatchGroup:h,programUniforms:d}=t.getRunData(r),y=o.length===0?p.map((E,P)=>P):o;if(y.length!==p.length)throw new Error(`Output size ${y.length} must be equal to ${p.length}.`);let w=[],_=[];for(let E=0;E<p.length;++E){if(!Number.isInteger(y[E])||y[E]<-3||y[E]>=a)throw new Error(`Invalid output index: ${y[E]}`);if(y[E]===-3)continue;let P=y[E]===-1,O=y[E]===-2,R=P||O?u(p[E].dataType,p[E].dims):i(y[E],p[E].dataType,p[E].dims);if(w.push(R),R.data===0)continue;let L=this.gpuDataManager.get(R.data);if(!L)throw new Error(`no GPU data for output: ${R.data}`);if(P&&this.temporaryData.push(L),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(L)}_.push(L)}if(c.length!==r.length||_.length!==w.length){if(_.length===0)return Ht(t.name),w;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(d){let E=0,P=[];d.forEach(N=>{let K=typeof N.data=="number"?[N.data]:N.data;if(K.length===0)return;let Q=N.type===10?2:4,he,W;N.type===10?(W=K.length>4?16:K.length>2?8:K.length*Q,he=K.length>4?16:Q*K.length):(W=K.length<=2?K.length*Q:16,he=16),E=Math.ceil(E/W)*W,P.push(E);let se=N.type===10?8:4;E+=K.length>4?Math.ceil(K.length/se)*he:K.length*Q});let O=16;E=Math.ceil(E/O)*O;let R=new ArrayBuffer(E);d.forEach((N,K)=>{let Q=P[K],he=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(R,Q,he.length).set(he);else if(N.type===12)new Uint32Array(R,Q,he.length).set(he);else if(N.type===10)new Uint16Array(R,Q,he.length).set(he);else if(N.type===1)new Float32Array(R,Q,he.length).set(he);else throw new Error(`Unsupported uniform type: ${Gt(N.type)}`)});let L=this.gpuDataManager.create(E,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(L.buffer,0,R,0,E),this.gpuDataManager.release(L.id),v={offset:0,size:E,buffer:L.buffer}}let S=this.programManager.normalizeDispatchGroupSize(h),A=S[1]===1&&S[2]===1,I=nm(t,r,A),x=this.programManager.getArtifact(I);if(x||(x=this.programManager.build(t,S),this.programManager.setArtifact(I,x),Ve("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),d&&x.uniformVariablesInfo){if(d.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${d.length} in program "${x.programInfo.name}".`);for(let E=0;E<d.length;E++){let P=d[E],O=P.type,R=typeof P.data=="number"?1:P.data.length,[L,N]=x.uniformVariablesInfo[E];if(O!==L||R!==N)throw new Error(`Uniform variable ${E} mismatch: expect type ${L} with size ${N}, got type ${O} with size ${R} in program "${x.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let E={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:w};this.pendingKernels.push(E),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(E)}return this.programManager.run(x,c,_,S,v),Ht(t.name),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Md.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await xo(this,t,r);return ma(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Nd={};gn(Nd,{init:()=>om});var qr,Zo,om,Gd=Y(()=>{"use strict";ye();Wd();Lt();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,d,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=tr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let d=h*M.size(p),y=d>0?this.backend.gpuDataManager.create(d).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a,this.outputCount)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},om=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new Ln;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let d=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,d)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let d=new Zo(t,u,c);return u.computeKernel(a,d,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Vi;Vi=Ei();var pl=zi(),fo,ho=!1,yn=!1,Ui=!1,ml=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Wi=async e=>{if(ho)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ui)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ml(r),u=o&&fl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=hl(u,i),h=typeof a=="object"?a[p]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?pl:Vi,S={locateFile:(A,I)=>{if(i&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(h)return h;let x=c??I;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return I+A}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${v.toString()};`;S.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}v(S).then(A=>{yn=!1,ho=!0,fo=A,w()},A=>{yn=!1,Ui=!0,_(A)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Nr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ni=e=>{let t=Le(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Fe(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(a,c)=>{let p=Fe(a,o),h=Fe(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var gl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},bl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},wl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Fe("deviceType",r),p=Fe(a.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Fe("numThreads",r),h=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Fe("powerPreference",r),p=Fe(a.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Fe("preferredLayout",r),p=Fe(a.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Fe(i,r);Le()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Gi=e=>{let t=Le(),r=0,o=[],i=e||{};bl(i);try{let u=gl(i.graphOptimizationLevel??"all"),a=yl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Fe(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Fe(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,d),r===0&&Ue("Can\'t create session options."),i.executionProviders&&wl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Fe("enableGraphCapture",o),w=Fe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Nr(i.extra,"",new WeakSet,(y,w)=>{let _=Fe(y,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};ye();var Li=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var im=(e,t)=>{Le()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Ld=async e=>{im(e.wasm.numThreads,Gr(e.logLevel))},Fd=async(e,t)=>{{let r=(Gd(),wr(Nd)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},ar=new Map,am=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Xo=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qd=async(e,t)=>{let r,o,i=Le();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Xo(e);let u=0,a=0,c=0,p=[],h=[],d=[];try{if([a,p]=Gi(t),t?.externalData&&i.mountExternalData){let x=[];for(let E of t.externalData){let P=typeof E=="string"?E:E.path;x.push(Li(typeof E=="string"?E:E.data).then(O=>{i.mountExternalData(P,O)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=am(u),_=!!t?.enableGraphCapture,v=[],S=[],A=[];for(let x=0;x<y;x++){let E=i._OrtGetInputName(u,x);E===0&&Ue("Can\'t get an input name."),h.push(E),v.push(i.UTF8ToString(E))}for(let x=0;x<w;x++){let E=i._OrtGetOutputName(u,x);E===0&&Ue("Can\'t get an output name."),d.push(E);let P=i.UTF8ToString(E);S.push(P);{if(_&&t?.preferredOutputLocation===void 0){A.push("gpu-buffer");continue}let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);A.push(O)}}let I=null;return A.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),I={handle:c,outputPreferredLocations:A,outputPreferredLocationsEncoded:A.map(x=>yo(x))}),ar.set(u,[u,h,d,I,_,!1]),[u,v,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},jd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),ar.delete(e)},Hd=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Le(),c=e[0],p=e[1],h=e[3],d,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let v=e[2].gpuBuffer,S=tr(go(c));y=p.reduce((I,x)=>I*x,1)*S;let A=a.jsepRegisterBuffer;if(!A)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');d=A(o,i,v,y)}else{let v=e[2];if(Array.isArray(v)){y=4*v.length,d=a._malloc(y),r.push(d);let S=d/4;for(let A=0;A<v.length;A++){if(typeof v[A]!="string")throw new TypeError(`tensor data at index ${A} is not a string`);a.HEAPU32[S++]=Fe(v[A],r)}}else y=v.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,y),d)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let v=_/4;p.forEach(A=>a.HEAP32[v++]=A);let S=a._OrtCreateTensor(go(c),d,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Kd=async(e,t,r,o,i,u)=>{let a=Le(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],d=c[2],y=c[3],w=c[4],_=c[5],v=t.length,S=o.length,A=0,I=[],x=[],E=[],P=[],O=a.stackSave(),R=a.stackAlloc(v*4),L=a.stackAlloc(v*4),N=a.stackAlloc(S*4),K=a.stackAlloc(S*4);try{[A,I]=Ni(u);for(let ee=0;ee<v;ee++)Hd(r[ee],x,P,e,t[ee],w);for(let ee=0;ee<S;ee++)Hd(i[ee],E,P,e,v+o[ee],w);let Q=R/4,he=L/4,W=N/4,se=K/4;for(let ee=0;ee<v;ee++)a.HEAPU32[Q++]=x[ee],a.HEAPU32[he++]=h[t[ee]];for(let ee=0;ee<S;ee++)a.HEAPU32[W++]=E[ee],a.HEAPU32[se++]=d[o[ee]];if(y&&!_){let{handle:ee,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ae}=y;if(h.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${h.length}).`);for(let me=0;me<v;me++){let ie=t[me];await a._OrtBindInput(ee,h[ie],x[me])!==0&&Ue(`Can\'t bind input[${me}] for session=${e}.`)}for(let me=0;me<S;me++){let ie=o[me];i[me]?.[3]?a._OrtBindOutput(ee,d[ie],E[me],0)!==0&&Ue(`Can\'t bind pre-allocated output[${me}] for session=${e}.`):a._OrtBindOutput(ee,d[ie],0,Ae[ie])!==0&&Ue(`Can\'t bind output[${me}] to ${ae[me]} for session=${e}.`)}ar.set(e,[p,h,d,y,w,!0])}a.jsepOnRunStart?.(p);let Ce;y?Ce=await a._OrtRunWithBinding(p,y.handle,S,N,A):Ce=await a._OrtRun(p,L,R,v,K,S,N,A),Ce!==0&&Ue("failed to call OrtRun().");let We=[];for(let ee=0;ee<S;ee++){let ae=a.HEAPU32[N/4+ee];if(ae===E[ee]){We.push(i[ee]);continue}let Ae=a.stackSave(),me=a.stackAlloc(4*4),ie=!1,ue,le=0;try{a._OrtGetTensorData(ae,me,me+4,me+8,me+12)!==0&&Ue(`Can\'t access output tensor data on index ${ee}.`);let G=me/4,ne=a.HEAPU32[G++];le=a.HEAPU32[G++];let xe=a.HEAPU32[G++],Ke=a.HEAPU32[G++],Be=[];for(let Ne=0;Ne<Ke;Ne++)Be.push(a.HEAPU32[xe/4+Ne]);a._OrtFree(xe);let Ge=Be.reduce((Ne,Ye)=>Ne*Ye,1);ue=Gt(ne);let Ut=y?.outputPreferredLocations[o[ee]];if(ue==="string"){if(Ut==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],Ye=le/4;for(let mt=0;mt<Ge;mt++){let Rt=a.HEAPU32[Ye++],qt=mt===Ge-1?void 0:a.HEAPU32[Ye]-Rt;Ne.push(a.UTF8ToString(Rt,qt))}We.push([ue,Be,Ne,"cpu"])}else if(Ut==="gpu-buffer"&&Ge>0){let Ne=a.jsepGetBuffer;if(!Ne)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ye=Ne(le),mt=tr(ne);if(mt===void 0||!Hi(ue))throw new Error(`Unsupported data type: ${ue}`);ie=!0,We.push([ue,Be,{gpuBuffer:Ye,download:a.jsepCreateDownloader(Ye,Ge*mt,ue),dispose:()=>{a._OrtReleaseTensor(ae)}},"gpu-buffer"])}else{let Ne=bn(ue),Ye=new Ne(Ge);new Uint8Array(Ye.buffer,Ye.byteOffset,Ye.byteLength).set(a.HEAPU8.subarray(le,le+Ye.byteLength)),We.push([ue,Be,Ye,"cpu"])}}finally{a.stackRestore(Ae),ue==="string"&&le&&a._free(le),ie||a._OrtReleaseTensor(ae)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),ar.set(e,[p,h,d,y,w,!1])),We}finally{a.stackRestore(O),x.forEach(Q=>a._OrtReleaseTensor(Q)),E.forEach(Q=>a._OrtReleaseTensor(Q)),P.forEach(Q=>a._free(Q)),A!==0&&a._OrtReleaseRunOptions(A),I.forEach(Q=>a._free(Q))}},Yd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},Zd=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Wi(r.wasm).then(()=>{Ld(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Fd(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Xo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;qd(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":jd(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Kd(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},Zd([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Yd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'}),Fr,zt,En,ua,da,No,Mi,rn,nn,em,ca,tm,rm,nm,am,im,sm,om,lm=te(()=>{var t;rr(),bw(),ra(),Fr=()=>!!Ue.wasm.proxy&&typeof document<"u",En=!1,ua=!1,da=!1,Mi=new Map,rn=(e,r)=>{let n=Mi.get(e);n?n.push(r):Mi.set(e,[r])},nn=()=>{if(En||!ua||da||!zt)throw new Error("worker not ready")},em=e=>{switch(e.data.type){case"init-wasm":En=!1,e.data.err?(da=!0,No[1](e.data.err)):(ua=!0,No[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=Mi.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},ca=typeof document<"u"?(t=document==null?void 0:document.currentScript)==null?void 0:t.src:void 0,tm=async()=>{if(!ua){if(En)throw new Error("multiple calls to 'initWasm()' detected.");if(da)throw new Error("previous call to 'initWasm()' failed.");if(En=!0,Fr())return Ue.wasm.wasmPaths===void 0&&ca&&ca.indexOf("blob:")!==0&&(Ue.wasm.wasmPaths=ca.substr(0,+ca.lastIndexOf("/")+1)),new Promise((e,r)=>{zt==null||zt.terminate();let n=URL.createObjectURL(new Blob([vw()],{type:"text/javascript"}));zt=new Worker(n,{name:"ort-wasm-proxy-worker"}),zt.onerror=s=>r(s),zt.onmessage=em,URL.revokeObjectURL(n),No=[e,r];let a={type:"init-wasm",in:Ue};zt.postMessage(a)});try{await _u(Ue.wasm),await jf(Ue),ua=!0}catch(e){throw da=!0,e}finally{En=!1}}},rm=async e=>{if(Fr())return nn(),new Promise((r,n)=>{rn("init-ep",[r,n]);let a={type:"init-ep",in:{epName:e,env:Ue}};zt.postMessage(a)});await qf(Ue,e)},nm=async e=>Fr()?(nn(),new Promise((r,n)=>{rn("copy-from",[r,n]);let a={type:"copy-from",in:{buffer:e}};zt.postMessage(a,[e.buffer])})):Bo(e),am=async(e,r)=>{if(Fr()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return nn(),new Promise((n,a)=>{rn("create",[n,a]);let s={type:"create",in:{model:e,options:{...r}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),zt.postMessage(s,i)})}else return Yf(e,r)},im=async e=>{if(Fr())return nn(),new Promise((r,n)=>{rn("release",[r,n]);let a={type:"release",in:e};zt.postMessage(a)});Xf(e)},sm=async(e,r,n,a,s,i)=>{if(Fr()){if(n.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return nn(),new Promise((o,l)=>{rn("run",[o,l]);let u=n,d={type:"run",in:{sessionId:e,inputIndices:r,inputs:u,outputIndices:a,options:i}};zt.postMessage(d,Jf(u))})}else return Qf(e,r,n,a,s,i)},om=async e=>{if(Fr())return nn(),new Promise((r,n)=>{rn("end-profiling",[r,n]);let a={type:"end-profiling",in:e};zt.postMessage(a)});Zf(e)}}),Fo,um,dm,$w=te(()=>{rr(),lm(),xe(),Su(),Fo=(t,e)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${t.location} for ${e()}`)}},um=t=>{switch(t[3]){case"cpu":return new Et(t[0],t[2],t[1]);case"gpu-buffer":{let e=t[0];if(!Vs(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:a}=t[2];return Et.fromGpuBuffer(r,{dataType:e,dims:t[1],download:n,dispose:a})}default:throw new Error(`invalid data location: ${t[3]}`)}},dm=class{async fetchModelAndCopyToWasmMemory(t){return nm(await pi(t))}async loadModel(t,e){tr();let r;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?r=await pi(t):r=await this.fetchModelAndCopyToWasmMemory(t):r=t,[this.sessionId,this.inputNames,this.outputNames]=await am(r,e),Xt()}async dispose(){return im(this.sessionId)}async run(t,e,r){tr();let n=[],a=[];Object.entries(t).forEach(h=>{let f=h[0],g=h[1],p=this.inputNames.indexOf(f);if(p===-1)throw new Error(`invalid input '${f}'`);n.push(g),a.push(p)});let s=[],i=[];Object.entries(e).forEach(h=>{let f=h[0],g=h[1],p=this.outputNames.indexOf(f);if(p===-1)throw new Error(`invalid output '${f}'`);s.push(g),i.push(p)});let o=n.map((h,f)=>Fo(h,()=>`input "${this.inputNames[a[f]]}"`)),l=s.map((h,f)=>h?Fo(h,()=>`output "${this.outputNames[i[f]]}"`):null),u=await sm(this.sessionId,a,o,i,l,r),d={};for(let h=0;h<u.length;h++)d[this.outputNames[i[h]]]=s[h]??um(u[h]);return Xt(),d}startProfiling(){}endProfiling(){om(this.sessionId)}}}),cm,pm,xw=te(()=>{rr(),lm(),$w(),cm=()=>{if((typeof Ue.wasm.initTimeout!="number"||Ue.wasm.initTimeout<0)&&(Ue.wasm.initTimeout=0),typeof Ue.wasm.simd!="boolean"&&(Ue.wasm.simd=!0),typeof Ue.wasm.proxy!="boolean"&&(Ue.wasm.proxy=!1),typeof Ue.wasm.trace!="boolean"&&(Ue.wasm.trace=!1),typeof Ue.wasm.numThreads!="number"||!Number.isInteger(Ue.wasm.numThreads)||Ue.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Ue.wasm.numThreads=1);let t=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ue.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}},pm=class{async init(t){cm(),await tm(),await rm(t)}async createInferenceSessionHandler(t,e){let r=new dm;return await r.loadModel(t,e),Promise.resolve(r)}}}),hm={};$n(hm,{wasmBackend:()=>fm});var fm,Sw=te(()=>{xw(),fm=new pm});rr(),rr(),rr();var kw="1.18.0",Ew=nu;{let t=(Sw(),qr(hm)).wasmBackend;Kr("webgpu",t,5),Kr("webnn",t,5),Kr("cpu",t,10),Kr("wasm",t,10)}Object.defineProperty(Ue.versions,"web",{value:kw,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cw=Object.freeze({__proto__:null,get InferenceSession(){return Ps},get TRACE(){return ea},get TRACE_FUNC_BEGIN(){return tr},get TRACE_FUNC_END(){return Xt},get Tensor(){return Et},get TrainingSession(){return Rs},default:Ew,get env(){return Ue},get registerBackend(){return Kr}});const Tw=(t,e)=>{const r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=t.dims[3],r.height=t.dims[2];const n=r.getContext("2d");if(n!=null){let a,s;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[3]):(a=t.dims[3],s=t.dims[2]);const i=(e==null?void 0:e.format)!==void 0?e.format:"RGB",o=e==null?void 0:e.norm;let l,u;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?u=[0,0,0,0]:typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(u[3]=o.bias[3]));const d=s*a;let h=0,f=d,g=d*2,p=-1;i==="RGBA"?(h=0,f=d,g=d*2,p=d*3):i==="RGB"?(h=0,f=d,g=d*2):i==="RBG"&&(h=0,g=d,f=d*2);for(let w=0;w<s;w++)for(let v=0;v<a;v++){const S=(t.data[h++]-u[0])*l[0],$=(t.data[f++]-u[1])*l[1],E=(t.data[g++]-u[2])*l[2],T=p===-1?255:(t.data[p++]-u[3])*l[3];n.fillStyle="rgba("+S+","+$+","+E+","+T+")",n.fillRect(v,w,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Aw=(t,e)=>{const r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let n;if(r!=null){let a,s,i;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[1],i=t.dims[3]):(a=t.dims[3],s=t.dims[2],i=t.dims[1]);const o=e!==void 0&&e.format!==void 0?e.format:"RGB",l=e==null?void 0:e.norm;let u,d;l===void 0||l.mean===void 0?u=[255,255,255,255]:typeof l.mean=="number"?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(u[3]=l.mean[3])),l===void 0||l.bias===void 0?d=[0,0,0,0]:typeof l.bias=="number"?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(d[3]=l.bias[3]));const h=s*a;if(e!==void 0&&(e.format!==void 0&&i===4&&e.format!=="RGBA"||i===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const f=4;let g=0,p=1,w=2,v=3,S=0,$=h,E=h*2,T=-1;o==="RGBA"?(S=0,$=h,E=h*2,T=h*3):o==="RGB"?(S=0,$=h,E=h*2):o==="RBG"&&(S=0,E=h,$=h*2),n=r.createImageData(a,s);for(let A=0;A<s*a;g+=f,p+=f,w+=f,v+=f,A++)n.data[g]=(t.data[S++]-d[0])*u[0],n.data[p]=(t.data[$++]-d[1])*u[1],n.data[w]=(t.data[E++]-d[2])*u[2],n.data[v]=T===-1?255:(t.data[T++]-d[3])*u[3]}else throw new Error("Can not access image data");return n},Lo=(t,e)=>{if(t===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:r,width:n}=e,a=e.norm??{mean:255,bias:0};let s,i;typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:s=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?i=[a.bias,a.bias,a.bias,a.bias]:i=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const o=e.format!==void 0?e.format:"RGBA",l=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",u=r*n,d=l==="RGBA"?new Float32Array(u*4):new Float32Array(u*3);let h=4,f=0,g=1,p=2,w=3,v=0,S=u,$=u*2,E=-1;o==="RGB"&&(h=3,f=0,g=1,p=2,w=-1),l==="RGBA"?E=u*3:l==="RBG"?(v=0,$=u,S=u*2):l==="BGR"&&($=0,S=u,v=u*2);for(let A=0;A<u;A++,f+=h,p+=h,g+=h,w+=h)d[v++]=(t[f]+i[0])/s[0],d[S++]=(t[g]+i[1])/s[1],d[$++]=(t[p]+i[2])/s[2],E!==-1&&w!==-1&&(d[E++]=(t[w]+i[3])/s[3]);return l==="RGBA"?new mr("float32",d,[1,4,r,n]):new mr("float32",d,[1,3,r,n])},Iw=async(t,e)=>{const r=typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement,n=typeof ImageData<"u"&&t instanceof ImageData,a=typeof ImageBitmap<"u"&&t instanceof ImageBitmap,s=typeof t=="string";let i,o=e??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(r){const d=l();d.width=t.width,d.height=t.height;const h=u(d);if(h!=null){let f=t.height,g=t.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(f=e.resizedHeight,g=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=f,o.width=g}else o.tensorFormat="RGBA",o.height=f,o.width=g;h.drawImage(t,0,0),i=h.getImageData(0,0,g,f).data}else throw new Error("Can not access image data")}else if(n){let d,h;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,h=e.resizedWidth):(d=t.height,h=t.width),e!==void 0&&(o=e),o.format="RGBA",o.height=d,o.width=h,e!==void 0){const f=l();f.width=h,f.height=d;const g=u(f);if(g!=null)g.putImageData(t,0,0),i=g.getImageData(0,0,h,d).data;else throw new Error("Can not access image data")}else i=t.data}else if(a){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");const d=l();d.width=t.width,d.height=t.height;const h=u(d);if(h!=null){const f=t.height,g=t.width;return h.drawImage(t,0,0,g,f),i=h.getImageData(0,0,g,f).data,o.height=f,o.width=g,Lo(i,o)}else throw new Error("Can not access image data")}else{if(s)return new Promise((d,h)=>{const f=l(),g=u(f);if(!t||!g)return h();const p=new Image;p.crossOrigin="Anonymous",p.src=t,p.onload=()=>{f.width=p.width,f.height=p.height,g.drawImage(p,0,0,f.width,f.height);const w=g.getImageData(0,0,f.width,f.height);o.height=f.height,o.width=f.width,d(Lo(w.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Lo(i,o);throw new Error("Input data provided is not supported - aborted tensor creation")},Mw=(t,e)=>{const{width:r,height:n,download:a,dispose:s}=e,i=[1,n,r,4];return new mr({location:"texture",type:"float32",texture:t,dims:i,download:a,dispose:s})},Ow=(t,e)=>{const{dataType:r,dims:n,download:a,dispose:s}=e;return new mr({location:"gpu-buffer",type:r??"float32",gpuBuffer:t,dims:n,download:a,dispose:s})},zw=(t,e,r)=>new mr({location:"cpu-pinned",type:t,data:e,dims:r??[e.length]}),Cn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Oi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let mm=!1;const Pw=()=>{if(!mm){mm=!0;const t=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;t&&(Cn.set("int64",BigInt64Array),Oi.set(BigInt64Array,"int64")),e&&(Cn.set("uint64",BigUint64Array),Oi.set(BigUint64Array,"uint64")),r?(Cn.set("float16",Float16Array),Oi.set(Float16Array,"float16")):Cn.set("float16",Uint16Array)}},Rw=t=>{let e=1;for(let r=0;r<t.length;r++){const n=t[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);e*=n}return e},Bw=(t,e)=>{switch(t.location){case"cpu":return new mr(t.type,t.data,e);case"cpu-pinned":return new mr({location:"cpu-pinned",data:t.data,type:t.type,dims:e});case"texture":return new mr({location:"texture",texture:t.texture,type:t.type,dims:e});case"gpu-buffer":return new mr({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${t.location} is not supported`)}};let mr=class{constructor(e,r,n){Pw();let a,s;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,a=e.type,s=e.dims,e.location){case"cpu-pinned":{const o=Cn.get(a);if(!o)throw new TypeError(`unsupported type "${a}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(a!=="float32")throw new TypeError(`unsupported type "${a}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint8"&&a!=="bool")throw new TypeError(`unsupported type "${a}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,l;if(typeof e=="string")if(a=e,l=n,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{const u=Cn.get(e);if(u===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&u===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?o=u.from(r,BigInt):o=u.from(r)}else if(r instanceof u)o=r;else throw new TypeError(`A ${a} tensor's data must be type of ${u}`)}else if(l=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const u=typeof e[0];if(u==="string")a="string",o=e;else if(u==="boolean")a="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${u}.`)}else{const u=Oi.get(e.constructor);if(u===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);a=u,o=e}if(l===void 0)l=[o.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");s=l,this.cpuData=o,this.dataLocation="cpu"}const i=Rw(s);if(this.cpuData&&i!==this.cpuData.length)throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=a,this.dims=s,this.size=i}static async fromImage(e,r){return Iw(e,r)}static fromTexture(e,r){return Mw(e,r)}static fromGpuBuffer(e,r){return Ow(e,r)}static fromPinnedBuffer(e,r,n){return zw(e,r,n)}toDataURL(e){return Tw(this,e)}toImageData(e){return Aw(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Bw(this,e)}};const Dw=mr,pa=[];let Uo,an;wn.IS_NODE_ENV?(an=Ve??vr,pa.push("cpu"),Uo=["cpu"]):(an=Cw,wn.IS_WEBGPU_AVAILABLE&&pa.push("webgpu"),pa.push("wasm"),Uo=["wasm"]);const Nw=an.InferenceSession;function Fw(t){let e=Uo;if(t){if(!pa.includes(t))throw new Error(`Unsupported device: "${t}". Should be one of: ${pa.join(", ")}.`);e=[t]}return e}let Wo=null;async function gm(t,e){Wo&&await Wo;const r=Nw.create(t,e);return Wo??(Wo=r),await r}function _m(t){return t instanceof an.Tensor}const lr=an==null?void 0:an.env;lr!=null&&lr.wasm&&(lr.wasm.wasmPaths="https://cdn.jsdelivr.net/npm/onnxruntime-web@1.18.0/dist/",lr.wasm.proxy=!wn.IS_WEBWORKER_ENV,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(lr.wasm.numThreads=1),typeof navigator<"u"&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(lr.wasm.simd=!1));function Lw(){var t;return(t=lr==null?void 0:lr.wasm)==null?void 0:t.proxy}kt.backends.onnx=lr;const Tn=async(t,e,r)=>{const n=await gm(new Uint8Array(t),e);return async a=>{const s=Object.fromEntries(Object.entries(a).map(([o,l])=>[o,l.ort_tensor])),i=await n.run(s);return Array.isArray(r)?r.map(o=>new pe(i[o])):new pe(i[r])}};class ha{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=Tn([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=Tn([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=Tn([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=Tn([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=Tn([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=Tn([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}B(ha,"session_options",{});const ym=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class pe{constructor(...e){B(this,"ort_tensor");return _m(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new Dw(e[0],e[1],e[2]),new Proxy(this,{get:(r,n)=>{if(typeof n=="string"){let a=Number(n);if(Number.isInteger(a))return r._getitem(a)}return r[n]},set:(r,n,a)=>r[n]=a})}get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...r]=this.dims;if(r.length>0){const n=r.reduce((a,s)=>a*s);for(let a=0;a<e;++a)yield this._subarray(a,n,r)}else yield*this.data}_getitem(e){const[r,...n]=this.dims;if(e=gr(e,r),n.length>0){const a=n.reduce((s,i)=>s*i);return this._subarray(e,a,n)}else return new pe(this.type,[this.data[e]],n)}indexOf(e){const r=this.data;for(let n=0;n<r.length;++n)if(r[n]==e)return n;return-1}_subarray(e,r,n){const a=e*r,s=(e+1)*r,i="subarray"in this.data?this.data.subarray(a,s):this.data.slice(a,s);return new pe(this.type,i,n)}item(){const e=this.data;if(e.length!==1)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return Uw(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=1/(1+Math.exp(-e[r]));return this}mul(e){return this.clone().mul_(e)}mul_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]+=e;return this}clone(){return new pe(this.type,this.data.slice(),this.dims.slice())}slice(...e){const r=[],n=[];for(let u=0;u<this.dims.length;++u){let d=e[u];if(d==null)n.push([0,this.dims[u]]),r.push(this.dims[u]);else if(typeof d=="number")d=gr(d,this.dims[u],u),n.push([d,d+1]);else if(Array.isArray(d)&&d.length===2){let[h,f]=d;if(h=h===null?0:gr(h,this.dims[u],u,!1),f=f===null?this.dims[u]:gr(f,this.dims[u],u,!1),h>f)throw new Error(`Invalid slice: ${d}`);const g=[Math.max(h,0),Math.min(f,this.dims[u])];n.push(g),r.push(g[1]-g[0])}else throw new Error(`Invalid slice: ${d}`)}const a=n.map(([u,d])=>d-u),s=a.reduce((u,d)=>u*d),i=this.data,o=new i.constructor(s),l=this.stride();for(let u=0;u<s;++u){let d=0;for(let h=a.length-1,f=u;h>=0;--h){const g=a[h];d+=(f%g+n[h][0])*l[h],f=Math.floor(f/g)}o[u]=i[d]}return new pe(this.type,o,r)}permute(...e){return Ww(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,r=!1){return this.norm(1,e,r)}norm(e="fro",r=null,n=!1){if(e==="fro")e=2;else if(typeof e=="string")throw Error(`Unsupported norm: ${e}`);const a=this.data;if(r===null){let o=a.reduce((l,u)=>l+u**e,0)**(1/e);return new pe(this.type,[o],[])}r=gr(r,this.dims.length);const s=this.dims.slice();s[r]=1;const i=new a.constructor(a.length/this.dims[r]);for(let o=0;o<a.length;++o){let l=0;for(let u=this.dims.length-1,d=o,h=1;u>=0;--u){const f=this.dims[u];if(u!==r){const g=d%f;l+=g*h,h*=s[u]}d=Math.floor(d/f)}i[l]+=a[o]**e}if(e!==1)for(let o=0;o<i.length;++o)i[o]=i[o]**(1/e);return n||s.splice(r,1),new pe(this.type,i,s)}normalize_(e=2,r=1){r=gr(r,this.dims.length);const n=this.norm(e,r,!0),a=this.data,s=n.data;for(let i=0;i<a.length;++i){let o=0;for(let l=this.dims.length-1,u=i,d=1;l>=0;--l){const h=this.dims[l];if(l!==r){const f=u%h;o+=f*d,d*=this.dims[l]}u=Math.floor(u/h)}a[i]/=s[o]}return this}normalize(e=2,r=1){return this.clone().normalize_(e,r)}stride(){return jw(this.dims)}squeeze(e=null){return new pe(this.type,this.data,bm(this.dims,e))}squeeze_(e=null){return this.dims=bm(this.dims,e),this}unsqueeze(e=null){return new pe(this.type,this.data,vm(this.dims,e))}unsqueeze_(e=null){return this.dims=vm(this.dims,e),this}flatten_(e=0,r=-1){r=(r+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),a=this.dims.slice(e,r+1),s=this.dims.slice(r+1);return this.dims=[...n,a.reduce((i,o)=>i*o,1),...s],this}flatten(e=0,r=-1){return this.clone().flatten_(e,r)}view(...e){let r=-1;for(let a=0;a<e.length;++a)if(e[a]===-1){if(r!==-1)throw new Error("Only one dimension can be inferred");r=a}const n=this.data;if(r!==-1){const a=e.reduce((s,i,o)=>o!==r?s*i:s,1);e[r]=n.length/a}return new pe(this.type,n,e)}neg_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=-e[r];return this}neg(){return this.clone().neg_()}clamp_(e,r){const n=this.data;for(let a=0;a<n.length;++a)n[a]=Math.min(Math.max(n[a],e),r);return this}clamp(e,r){return this.clone().clamp_(e,r)}round_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=Math.round(e[r]);return this}round(){return this.clone().round_()}mean(e=null,r=!1){return Go(this,e,r)}to(e){if(this.type===e)return this;if(!ym.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new pe(e,ym[e].from(this.data),this.dims)}}function Uw(t,e){const r=t.length,n=e.reduce((s,i)=>s*i);if(r!==n)throw Error(`cannot reshape array of size ${r} into shape (${e})`);let a=t;for(let s=e.length-1;s>=0;s--)a=a.reduce((i,o)=>{let l=i[i.length-1];return l.length<e[s]?l.push(o):i.push([o]),i},[[]]);return a[0]}function Ww(t,e){const[r,n]=ey(t.data,t.dims,e);return new pe(t.type,r,n)}function Vo(t,[e,r],n="bilinear",a=!1){const s=t.dims.at(-3)??1,i=t.dims.at(-2),o=t.dims.at(-1);let l=J0(t.data,[s,i,o],[e,r],n,a);return new pe(t.type,l,[s,e,r])}async function wm(t,{size:e=null,mode:r="bilinear"}={}){if(t.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!e)throw new Error("`interpolate_4d` requires a `size` argument.");let n;if(e.length===2)n=[...t.dims.slice(0,2),...e];else if(e.length===3)n=[t.dims[0],...e];else if(e.length===4)n=e;else throw new Error("`size` must be of length 2, 3, or 4.");let a;if(r==="bilinear")a=await ha.bilinear_interpolate_4d;else if(r==="bicubic")a=await ha.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${r}`);const s=new pe("int64",new BigInt64Array(n.map(BigInt)),[n.length]);return await a({x:t,s})}async function Vw(t,e){return await(await ha.matmul)({a:t,b:e})}async function An(t,e){const r=await ha.top_k;return e===null?e=t.dims.at(-1):e=Math.min(e,t.dims.at(-1)),await r({x:t,k:new pe("int64",[BigInt(e)],[1])})}function Gw(t,e){const r=t.data,n=e.data,a=[t.dims[0],t.dims[2]],s=new r.constructor(a[0]*a[1]),[i,o,l]=t.dims;let u=0;for(let d=0;d<i;++d){const h=d*l*o;for(let f=0;f<l;++f){let g=0,p=0;const w=d*o,v=h+f;for(let $=0;$<o;++$){const E=Number(n[w+$]);p+=E,g+=r[v+$*l]*E}const S=g/p;s[u++]=S}}return new pe(t.type,s,a)}function bm(t,e){return t=t.slice(),e===null?t=t.filter(r=>r!==1):typeof e=="number"?t[e]===1&&t.splice(e,1):Array.isArray(e)&&(t=t.filter((r,n)=>r!==1||!e.includes(n))),t}function vm(t,e){return e=gr(e,t.length+1),t=t.slice(),t.splice(e,0,1),t}function gr(t,e,r=null,n=!0){if(n&&(t<-e||t>=e))throw new Error(`IndexError: index ${t} is out of bounds for dimension${r===null?"":" "+r} with size ${e}`);return t<0&&(t=(t%e+e)%e),t}function Ut(t,e=0){e=gr(e,t[0].dims.length);const r=t[0].dims.slice();r[e]=t.reduce((i,o)=>i+o.dims[e],0);const n=r.reduce((i,o)=>i*o,1),a=new t[0].data.constructor(n),s=t[0].type;if(e===0){let i=0;for(const o of t){const l=o.data;a.set(l,i),i+=l.length}}else{let i=0;for(let o=0;o<t.length;++o){const{data:l,dims:u}=t[o];for(let d=0;d<l.length;++d){let h=0;for(let f=u.length-1,g=d,p=1;f>=0;--f){const w=u[f];let v=g%w;f===e&&(v+=i),h+=v*p,p*=r[f],g=Math.floor(g/w)}a[h]=l[d]}i+=u[e]}}return new pe(s,a,r)}function fa(t,e=0){return Ut(t.map(r=>r.unsqueeze(e)),e)}function Hw(t,e=null,r=1,n=!1){const a=t.data,s=t.dims;if(e===null){const f=a.reduce((v,S)=>v+S,0)/a.length,g=Math.sqrt(a.reduce((v,S)=>v+(S-f)**2,0)/(a.length-r)),p=new pe(t.type,[f],[]);return[new pe(t.type,[g],[]),p]}e=gr(e,s.length);const i=Go(t,e,n),o=i.data,l=s.slice();l[e]=1;const u=new a.constructor(a.length/s[e]);for(let h=0;h<a.length;++h){let f=0;for(let g=s.length-1,p=h,w=1;g>=0;--g){const v=s[g];if(g!==e){const S=p%v;f+=S*w,w*=l[g]}p=Math.floor(p/v)}u[f]+=(a[h]-o[f])**2}for(let h=0;h<u.length;++h)u[h]=Math.sqrt(u[h]/(s[e]-r));return n||l.splice(e,1),[new pe(t.type,u,l),i]}function Go(t,e=null,r=!1){const n=t.data;if(e===null){const o=n.reduce((l,u)=>l+u,0);return new pe(t.type,[o/n.length],[])}const a=t.dims;e=gr(e,a.length);const s=a.slice();s[e]=1;const i=new n.constructor(n.length/a[e]);for(let o=0;o<n.length;++o){let l=0;for(let u=a.length-1,d=o,h=1;u>=0;--u){const f=a[u];if(u!==e){const g=d%f;l+=g*h,h*=s[u]}d=Math.floor(d/f)}i[l]+=n[o]}if(a[e]!==1)for(let o=0;o<i.length;++o)i[o]=i[o]/a[e];return r||s.splice(e,1),new pe(t.type,i,s)}function jw(t){const e=new Array(t.length);for(let r=t.length-1,n=1;r>=0;--r)e[r]=n,n*=t[r];return e}function Ho(t,e,r,n){const a=t.reduce((s,i)=>s*i,1);return new pe(r,new n(a).fill(e),t)}function qw(t,e){let r,n;if(typeof e=="number")r="float32",n=Float32Array;else if(typeof e=="bigint")r="int64",n=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof e}`);return Ho(t,e,r,n)}function Kw(t,e){return qw(t.dims,e)}function In(t){return Ho(t,1n,"int64",BigInt64Array)}function Yw(t){return In(t.dims)}function Xw(t){return Ho(t,0n,"int64",BigInt64Array)}function Qw(t){return Xw(t.dims)}function Zw(t,e){if(t.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(t.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(e))throw new Error("The precision must be either 'binary' or 'ubinary'");const r=e==="binary",n=r?"int8":"uint8",a=r?Int8Array:Uint8Array,s=t.data,i=new a(s.length/8);for(let o=0;o<s.length;++o){const l=s[o]>0?1:0,u=Math.floor(o/8),d=o%8;i[u]|=l<<7-d,r&&d===0&&(i[u]-=128)}return new pe(n,i,[t.dims[0],t.dims[1]/8])}class Jw{constructor(e=(n,a)=>n>a,r=1/0){this._heap=[],this._comparator=e,this._maxSize=r}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const r of e)if(this.size<this._maxSize)this._heap.push(r),this._siftUp();else{const n=this._smallest();this._comparator(r,this._heap[n])&&(this._heap[n]=r,this._siftUpFrom(n))}return this.size}pop(){const e=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),e}replace(e){const r=this.peek();return this._heap[0]=e,this._siftDown(),r}_parent(e){return(e+1>>>1)-1}_left(e){return(e<<1)+1}_right(e){return e+1<<1}_greater(e,r){return this._comparator(this._heap[e],this._heap[r])}_swap(e,r){const n=this._heap[e];this._heap[e]=this._heap[r],this._heap[r]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const r=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,r),e=r}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class eb{constructor(){this.root=zi.default()}extend(e){for(let r of e)this.push(r)}push(e){let r=this.root;for(let n of e){let a=r.children.get(n);a===void 0&&(a=zi.default(),r.children.set(n,a)),r=a}r.isLeaf=!0}*commonPrefixSearch(e){let r=this.root,n="";for(let a=0;a<e.length&&r!==void 0;++a){const s=e[a];n+=s,r=r.children.get(s),r!==void 0&&r.isLeaf&&(yield n)}}}class zi{constructor(e,r){this.isLeaf=e,this.children=r}static default(){return new zi(!1,new Map)}}class tb{constructor(e,r,n){this.sentence=e,this.len=e.length,this.bosTokenId=r,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const a=new ma(this.bosTokenId,0,0,0,0),s=new ma(this.eosTokenId,1,this.len,0,0);this.nodes.push(a.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(a)}insert(e,r,n,a){const s=this.nodes.length,i=new ma(a,s,e,r,n);this.beginNodes[e].push(i),this.endNodes[e+r].push(i),this.nodes.push(i)}viterbi(){const e=this.len;let r=0;for(;r<=e;){if(this.beginNodes[r].length==0)return[];for(let o of this.beginNodes[r]){o.prev=null;let l=0,u=null;for(let d of this.endNodes[r]){const h=d.backtraceScore+o.score;(u===null||h>l)&&(u=d.clone(),l=h)}if(u!==null)o.prev=u,o.backtraceScore=l;else return[]}++r}const n=[],s=this.beginNodes[e][0].prev;if(s===null)return[];let i=s.clone();for(;i.prev!==null;)n.push(i.clone()),i=i.clone().prev.clone();return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map(r=>this.piece(r))}tokenIds(){return this.viterbi().map(r=>r.tokenId)}}class ma{constructor(e,r,n,a,s){this.tokenId=e,this.nodeId=r,this.pos=n,this.length=a,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new ma(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var U=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),$m=Object.freeze({set:U.Set,for:U.For,in:U.In,is:U.Is,if:U.If,else:U.Else,endif:U.EndIf,elif:U.ElseIf,endfor:U.EndFor,and:U.And,or:U.Or,not:U.Not,"not in":U.NotIn,true:U.BooleanLiteral,false:U.BooleanLiteral}),sn=class{constructor(t,e){this.value=t,this.type=e}};function xm(t){return/\w/.test(t)}function jo(t){return/[0-9]/.test(t)}var rb=[["{%",U.OpenStatement],["%}",U.CloseStatement],["{{",U.OpenExpression],["}}",U.CloseExpression],["(",U.OpenParen],[")",U.CloseParen],["{",U.OpenCurlyBracket],["}",U.CloseCurlyBracket],["[",U.OpenSquareBracket],["]",U.CloseSquareBracket],[",",U.Comma],[".",U.Dot],[":",U.Colon],["|",U.Pipe],["<=",U.ComparisonBinaryOperator],[">=",U.ComparisonBinaryOperator],["==",U.ComparisonBinaryOperator],["!=",U.ComparisonBinaryOperator],["<",U.ComparisonBinaryOperator],[">",U.ComparisonBinaryOperator],["+",U.AdditiveBinaryOperator],["-",U.AdditiveBinaryOperator],["*",U.MultiplicativeBinaryOperator],["/",U.MultiplicativeBinaryOperator],["%",U.MultiplicativeBinaryOperator],["=",U.Equals]],nb=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function ab(t,e={}){return t.endsWith(`
`)&&(t=t.slice(0,-1)),t=t.replace(/{#.*?#}/gs,"{##}"),e.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%])/gm,"$1")),e.trim_blocks&&(t=t.replace(/([#%]})\n/g,"$1")),t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function ib(t,e={}){var i,o,l;const r=[],n=ab(t,e);let a=0;const s=u=>{let d="";for(;u(n[a]);){if(n[a]==="\\"){if(++a,a>=n.length)throw new SyntaxError("Unexpected end of input");const h=n[a++],f=nb.get(h);if(f===void 0)throw new SyntaxError(`Unexpected escaped character: ${h}`);d+=f;continue}if(d+=n[a++],a>=n.length)throw new SyntaxError("Unexpected end of input")}return d};e:for(;a<n.length;){const u=(i=r.at(-1))==null?void 0:i.type;if(u===void 0||u===U.CloseStatement||u===U.CloseExpression){let h="";for(;a<n.length&&!(n[a]==="{"&&(n[a+1]==="%"||n[a+1]==="{"));)h+=n[a++];if(h.length>0){r.push(new sn(h,U.Text));continue}}s(h=>/\s/.test(h));const d=n[a];if(d==="-"||d==="+"){const h=(o=r.at(-1))==null?void 0:o.type;if(h===U.Text||h===void 0)throw new SyntaxError(`Unexpected character: ${d}`);switch(h){case U.Identifier:case U.NumericLiteral:case U.BooleanLiteral:case U.StringLiteral:case U.CloseParen:case U.CloseSquareBracket:break;default:{++a;const f=s(jo);r.push(new sn(`${d}${f}`,f.length>0?U.NumericLiteral:U.UnaryOperator));continue}}}for(const[h,f]of rb)if(n.slice(a,a+h.length)===h){r.push(new sn(h,f)),a+=h.length;continue e}if(d==="'"||d==='"'){++a;const h=s(f=>f!==d);r.push(new sn(h,U.StringLiteral)),++a;continue}if(jo(d)){const h=s(jo);r.push(new sn(h,U.NumericLiteral));continue}if(xm(d)){const h=s(xm),f=Object.hasOwn($m,h)?$m[h]:U.Identifier;f===U.In&&((l=r.at(-1))==null?void 0:l.type)===U.Not?(r.pop(),r.push(new sn("not in",U.NotIn))):r.push(new sn(h,f));continue}throw new SyntaxError(`Unexpected character: ${d}`)}return r}var ga=class{constructor(){B(this,"type","Statement")}},sb=class extends ga{constructor(e){super();B(this,"type","Program");this.body=e}},Sm=class extends ga{constructor(e,r,n){super();B(this,"type","If");this.test=e,this.body=r,this.alternate=n}},ob=class extends ga{constructor(e,r,n){super();B(this,"type","For");this.loopvar=e,this.iterable=r,this.body=n}},lb=class extends ga{constructor(e,r){super();B(this,"type","Set");this.assignee=e,this.value=r}},_r=class extends ga{constructor(){super(...arguments);B(this,"type","Expression")}},ub=class extends _r{constructor(e,r,n){super();B(this,"type","MemberExpression");this.object=e,this.property=r,this.computed=n}},db=class extends _r{constructor(e,r){super();B(this,"type","CallExpression");this.callee=e,this.args=r}},Mn=class extends _r{constructor(e){super();B(this,"type","Identifier");this.value=e}},On=class extends _r{constructor(e){super();B(this,"type","Literal");this.value=e}},cb=class extends On{constructor(){super(...arguments);B(this,"type","NumericLiteral")}},km=class extends On{constructor(){super(...arguments);B(this,"type","StringLiteral")}},Em=class extends On{constructor(){super(...arguments);B(this,"type","BooleanLiteral")}},pb=class extends On{constructor(){super(...arguments);B(this,"type","ArrayLiteral")}},Cm=class extends On{constructor(){super(...arguments);B(this,"type","TupleLiteral")}},hb=class extends On{constructor(){super(...arguments);B(this,"type","ObjectLiteral")}},_a=class extends _r{constructor(e,r,n){super();B(this,"type","BinaryExpression");this.operator=e,this.left=r,this.right=n}},fb=class extends _r{constructor(e,r){super();B(this,"type","FilterExpression");this.operand=e,this.filter=r}},mb=class extends _r{constructor(e,r,n){super();B(this,"type","TestExpression");this.operand=e,this.negate=r,this.test=n}},gb=class extends _r{constructor(e,r){super();B(this,"type","UnaryExpression");this.operator=e,this.argument=r}},_b=class extends _r{constructor(e=void 0,r=void 0,n=void 0){super();B(this,"type","SliceExpression");this.start=e,this.stop=r,this.step=n}},yb=class extends _r{constructor(e,r){super();B(this,"type","KeywordArgumentExpression");this.key=e,this.value=r}};function wb(t){const e=new sb([]);let r=0;function n(N,O){const V=t[r++];if(!V||V.type!==N)throw new Error(`Parser Error: ${O}. ${V.type} !== ${N}.`);return V}function a(){switch(t[r].type){case U.Text:return o();case U.OpenStatement:return l();case U.OpenExpression:return u();default:throw new SyntaxError(`Unexpected token type: ${t[r].type}`)}}function s(...N){return r+N.length<=t.length&&N.some((O,V)=>O!==t[r+V].type)}function i(...N){return r+N.length<=t.length&&N.every((O,V)=>O===t[r+V].type)}function o(){return new km(n(U.Text,"Expected text token").value)}function l(){n(U.OpenStatement,"Expected opening statement token");let N;switch(t[r].type){case U.Set:++r,N=d(),n(U.CloseStatement,"Expected closing statement token");break;case U.If:++r,N=h(),n(U.OpenStatement,"Expected {% token"),n(U.EndIf,"Expected endif token"),n(U.CloseStatement,"Expected %} token");break;case U.For:++r,N=g(),n(U.OpenStatement,"Expected {% token"),n(U.EndFor,"Expected endfor token"),n(U.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${t[r].type}`)}return N}function u(){n(U.OpenExpression,"Expected opening expression token");const N=p();return n(U.CloseExpression,"Expected closing expression token"),N}function d(){const N=p();if(i(U.Equals)){++r;const O=d();return new lb(N,O)}return N}function h(){var K,de,ae,D,ie,he,Se,Te;const N=p();n(U.CloseStatement,"Expected closing statement token");const O=[],V=[];for(;!(((K=t[r])==null?void 0:K.type)===U.OpenStatement&&(((de=t[r+1])==null?void 0:de.type)===U.ElseIf||((ae=t[r+1])==null?void 0:ae.type)===U.Else||((D=t[r+1])==null?void 0:D.type)===U.EndIf));)O.push(a());if(((ie=t[r])==null?void 0:ie.type)===U.OpenStatement&&((he=t[r+1])==null?void 0:he.type)!==U.EndIf)if(++r,i(U.ElseIf))n(U.ElseIf,"Expected elseif token"),V.push(h());else for(n(U.Else,"Expected else token"),n(U.CloseStatement,"Expected closing statement token");!(((Se=t[r])==null?void 0:Se.type)===U.OpenStatement&&((Te=t[r+1])==null?void 0:Te.type)===U.EndIf);)V.push(a());return new Sm(N,O,V)}function f(N=!1){const O=N?le:p,V=[O()],K=i(U.Comma);for(;K&&(++r,V.push(O()),!!i(U.Comma)););return K?new Cm(V):V[0]}function g(){const N=f(!0);if(!(N instanceof Mn||N instanceof Cm))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${N.type} instead`);n(U.In,"Expected `in` keyword following loop variable");const O=p();n(U.CloseStatement,"Expected closing statement token");const V=[];for(;s(U.OpenStatement,U.EndFor);)V.push(a());return new ob(N,O,V)}function p(){return w()}function w(){const N=v();if(i(U.If)){++r;const O=v();n(U.Else,"Expected else token");const V=v();return new Sm(O,[N],[V])}return N}function v(){let N=S();for(;i(U.Or);){const O=t[r];++r;const V=S();N=new _a(O,N,V)}return N}function S(){let N=$();for(;i(U.And);){const O=t[r];++r;const V=$();N=new _a(O,N,V)}return N}function $(){let N;for(;i(U.Not);){const O=t[r];++r;const V=$();N=new gb(O,V)}return N??E()}function E(){let N=T();for(;i(U.ComparisonBinaryOperator)||i(U.In)||i(U.NotIn);){const O=t[r];++r;const V=T();N=new _a(O,N,V)}return N}function T(){let N=ue();for(;i(U.AdditiveBinaryOperator);){const O=t[r];++r;const V=ue();N=new _a(O,N,V)}return N}function A(){const N=q();return i(U.OpenParen)?z(N):N}function z(N){let O=new db(N,R());return i(U.OpenParen)&&(O=z(O)),O}function R(){n(U.OpenParen,"Expected opening parenthesis for arguments list");const N=G();return n(U.CloseParen,"Expected closing parenthesis for arguments list"),N}function G(){const N=[];for(;!i(U.CloseParen);){let O=p();if(i(U.Equals)){if(++r,!(O instanceof Mn))throw new SyntaxError("Expected identifier for keyword argument");const V=p();O=new yb(O,V)}N.push(O),i(U.Comma)&&++r}return N}function j(){const N=[];let O=!1;for(;!i(U.CloseSquareBracket);)i(U.Colon)?(N.push(void 0),++r,O=!0):(N.push(p()),i(U.Colon)&&(++r,O=!0));if(N.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(O){if(N.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new _b(...N)}return N[0]}function q(){let N=le();for(;i(U.Dot)||i(U.OpenSquareBracket);){const O=t[r];++r;let V;const K=O.type!==U.Dot;if(K)V=j(),n(U.CloseSquareBracket,"Expected closing square bracket");else if(V=le(),V.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");N=new ub(N,V,K)}return N}function ue(){let N=re();for(;i(U.MultiplicativeBinaryOperator);){const O=t[r];++r;const V=re();N=new _a(O,N,V)}return N}function re(){let N=ee();for(;i(U.Is);){++r;const O=i(U.Not);O&&++r;let V=le();if(V instanceof Em&&(V=new Mn(V.value.toString())),!(V instanceof Mn))throw new SyntaxError("Expected identifier for the test");N=new mb(N,O,V)}return N}function ee(){let N=A();for(;i(U.Pipe);){++r;let O=le();if(!(O instanceof Mn))throw new SyntaxError("Expected identifier for the filter");i(U.OpenParen)&&(O=z(O)),N=new fb(N,O)}return N}function le(){const N=t[r];switch(N.type){case U.NumericLiteral:return++r,new cb(Number(N.value));case U.StringLiteral:return++r,new km(N.value);case U.BooleanLiteral:return++r,new Em(N.value==="true");case U.Identifier:return++r,new Mn(N.value);case U.OpenParen:{++r;const O=f();if(t[r].type!==U.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${t[r].type} instead`);return++r,O}case U.OpenSquareBracket:{++r;const O=[];for(;!i(U.CloseSquareBracket);)O.push(p()),i(U.Comma)&&++r;return++r,new pb(O)}case U.OpenCurlyBracket:{++r;const O=new Map;for(;!i(U.CloseCurlyBracket);){const V=p();n(U.Colon,"Expected colon between key and value in object literal");const K=p();O.set(V,K),i(U.Comma)&&++r}return++r,new hb(O)}default:throw new SyntaxError(`Unexpected token: ${N.type}`)}}for(;r<t.length;)e.body.push(a());return e}function bb(t,e,r=1){e===void 0&&(e=t,t=0);const n=[];for(let a=t;a<e;a+=r)n.push(a);return n}function Tm(t,e,r,n=1){const a=Math.sign(n);a>=0?(e=(e??(e=0))<0?Math.max(t.length+e,0):Math.min(e,t.length),r=(r??(r=t.length))<0?Math.max(t.length+r,0):Math.min(r,t.length)):(e=(e??(e=t.length-1))<0?Math.max(t.length+e,-1):Math.min(e,t.length-1),r=(r??(r=-1))<-1?Math.max(t.length+r,-1):Math.min(r,t.length-1));const s=[];for(let i=e;a*i<a*r;i+=n)s.push(t[i]);return s}function Am(t){return t.replace(/\b\w/g,e=>e.toUpperCase())}var kr=class{constructor(t=void 0){B(this,"type","RuntimeValue");B(this,"value");B(this,"builtins",new Map);this.value=t}__bool__(){return new at(!!this.value)}},Ye=class extends kr{constructor(){super(...arguments);B(this,"type","NumericValue")}},Re=class extends kr{constructor(){super(...arguments);B(this,"type","StringValue");B(this,"builtins",new Map([["upper",new Er(()=>new Re(this.value.toUpperCase()))],["lower",new Er(()=>new Re(this.value.toLowerCase()))],["strip",new Er(()=>new Re(this.value.trim()))],["title",new Er(()=>new Re(Am(this.value)))],["length",new Ye(this.value.length)]]))}},at=class extends kr{constructor(){super(...arguments);B(this,"type","BooleanValue")}},ur=class extends kr{constructor(){super(...arguments);B(this,"type","ObjectValue");B(this,"builtins",new Map([["get",new Er(([e,r])=>{if(!(e instanceof Re))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??r??new ya})],["items",new Er(()=>new et(Array.from(this.value.entries()).map(([e,r])=>new et([new Re(e),r]))))]]))}__bool__(){return new at(this.value.size>0)}},et=class extends kr{constructor(){super(...arguments);B(this,"type","ArrayValue");B(this,"builtins",new Map([["length",new Ye(this.value.length)]]))}__bool__(){return new at(this.value.length>0)}},vb=class extends et{constructor(){super(...arguments);B(this,"type","TupleValue")}},Er=class extends kr{constructor(){super(...arguments);B(this,"type","FunctionValue")}},ya=class extends kr{constructor(){super(...arguments);B(this,"type","NullValue")}},dr=class extends kr{constructor(){super(...arguments);B(this,"type","UndefinedValue")}},qo=class{constructor(t){B(this,"variables",new Map([["namespace",new Er(t=>{if(t.length===0)return new ur(new Map);if(t.length!==1||!(t[0]instanceof ur))throw new Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]));B(this,"tests",new Map([["boolean",t=>t.type==="BooleanValue"],["callable",t=>t instanceof Er],["odd",t=>{if(t.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${t.type}`);return t.value%2!==0}],["even",t=>{if(t.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${t.type}`);return t.value%2===0}],["false",t=>t.type==="BooleanValue"&&!t.value],["true",t=>t.type==="BooleanValue"&&t.value],["number",t=>t.type==="NumericValue"],["integer",t=>t.type==="NumericValue"&&Number.isInteger(t.value)],["iterable",t=>t instanceof et||t instanceof Re],["lower",t=>{const e=t.value;return t.type==="StringValue"&&e===e.toLowerCase()}],["upper",t=>{const e=t.value;return t.type==="StringValue"&&e===e.toUpperCase()}],["none",t=>t.type==="NullValue"],["defined",t=>t.type!=="UndefinedValue"],["undefined",t=>t.type==="UndefinedValue"],["equalto",(t,e)=>t.value===e.value]]));this.parent=t}set(t,e){return this.declareVariable(t,Pi(e))}declareVariable(t,e){if(this.variables.has(t))throw new SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,e),e}setVariable(t,e){return this.variables.set(t,e),e}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw new Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new dr}catch{return new dr}}},$b=class{constructor(t){B(this,"global");this.global=t??new qo}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,e){const r=this.evaluate(t.left,e);switch(t.operator.value){case"and":return r.__bool__().value?this.evaluate(t.right,e):r;case"or":return r.__bool__().value?r:this.evaluate(t.right,e)}const n=this.evaluate(t.right,e);switch(t.operator.value){case"==":return new at(r.value==n.value);case"!=":return new at(r.value!=n.value)}if(r instanceof dr||n instanceof dr)throw new Error("Cannot perform operation on undefined values");if(r instanceof ya||n instanceof ya)throw new Error("Cannot perform operation on null values");if(r instanceof Ye&&n instanceof Ye)switch(t.operator.value){case"+":return new Ye(r.value+n.value);case"-":return new Ye(r.value-n.value);case"*":return new Ye(r.value*n.value);case"/":return new Ye(r.value/n.value);case"%":return new Ye(r.value%n.value);case"<":return new at(r.value<n.value);case">":return new at(r.value>n.value);case">=":return new at(r.value>=n.value);case"<=":return new at(r.value<=n.value)}else if(r instanceof et&&n instanceof et)switch(t.operator.value){case"+":return new et(r.value.concat(n.value))}else if(n instanceof et){const a=n.value.find(s=>s.value===r.value)!==void 0;switch(t.operator.value){case"in":return new at(a);case"not in":return new at(!a)}}if(r instanceof Re||n instanceof Re)switch(t.operator.value){case"+":return new Re(r.value.toString()+n.value.toString())}if(r instanceof Re&&n instanceof Re)switch(t.operator.value){case"in":return new at(n.value.includes(r.value));case"not in":return new at(!n.value.includes(r.value))}if(r instanceof Re&&n instanceof ur)switch(t.operator.value){case"in":return new at(n.value.has(r.value));case"not in":return new at(!n.value.has(r.value))}throw new SyntaxError(`Unknown operator "${t.operator.value}" between ${r.type} and ${n.type}`)}evaluateFilterExpression(t,e){const r=this.evaluate(t.operand,e);if(t.filter.type==="Identifier"){const n=t.filter;if(r instanceof et)switch(n.value){case"list":return r;case"first":return r.value[0];case"last":return r.value[r.value.length-1];case"length":return new Ye(r.value.length);case"reverse":return new et(r.value.reverse());case"sort":return new et(r.value.sort((a,s)=>{if(a.type!==s.type)throw new Error(`Cannot compare different types: ${a.type} and ${s.type}`);switch(a.type){case"NumericValue":return a.value-s.value;case"StringValue":return a.value.localeCompare(s.value);default:throw new Error(`Cannot compare type: ${a.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${n.value}`)}else if(r instanceof Re)switch(n.value){case"length":return new Ye(r.value.length);case"upper":return new Re(r.value.toUpperCase());case"lower":return new Re(r.value.toLowerCase());case"title":return new Re(Am(r.value));case"capitalize":return new Re(r.value.charAt(0).toUpperCase()+r.value.slice(1));case"trim":return new Re(r.value.trim());default:throw new Error(`Unknown StringValue filter: ${n.value}`)}else if(r instanceof Ye)switch(n.value){case"abs":return new Ye(Math.abs(r.value));default:throw new Error(`Unknown NumericValue filter: ${n.value}`)}else if(r instanceof ur)switch(n.value){case"items":return new et(Array.from(r.value.entries()).map(([a,s])=>new et([new Re(a),s])));case"length":return new Ye(r.value.size);default:throw new Error(`Unknown ObjectValue filter: ${n.value}`)}throw new Error(`Cannot apply filter "${n.value}" to type: ${r.type}`)}else if(t.filter.type==="CallExpression"){const n=t.filter;if(n.callee.type!=="Identifier")throw new Error(`Unknown filter: ${n.callee.type}`);const a=n.callee.value;if(r instanceof et){switch(a){case"selectattr":{if(r.value.some(d=>!(d instanceof ur)))throw new Error("`selectattr` can only be applied to array of objects");if(n.args.some(d=>d.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[s,i,o]=n.args.map(d=>this.evaluate(d,e));let l;if(i){const d=e.tests.get(i.value);if(!d)throw new Error(`Unknown test: ${i.value}`);l=d}else l=(...d)=>d[0].__bool__().value;const u=r.value.filter(d=>{const h=d.value.get(s.value);return h?l(h,o):!1});return new et(u)}}throw new Error(`Unknown ArrayValue filter: ${a}`)}else throw new Error(`Cannot apply filter "${a}" to type: ${r.type}`)}throw new Error(`Unknown filter: ${t.filter.type}`)}evaluateTestExpression(t,e){const r=this.evaluate(t.operand,e),n=e.tests.get(t.test.value);if(!n)throw new Error(`Unknown test: ${t.test.value}`);const a=n(r);return new at(t.negate?!a:a)}evaluateUnaryExpression(t,e){const r=this.evaluate(t.argument,e);switch(t.operator.value){case"not":return new at(!r.value);default:throw new SyntaxError(`Unknown operator: ${t.operator.value}`)}}evalProgram(t,e){return this.evaluateBlock(t.body,e)}evaluateBlock(t,e){let r="";for(const n of t){const a=this.evaluate(n,e);a.type!=="NullValue"&&a.type!=="UndefinedValue"&&(r+=a.value)}return new Re(r)}evaluateIdentifier(t,e){return e.lookupVariable(t.value)}evaluateCallExpression(t,e){const r=[],n=new Map;for(const s of t.args)if(s.type==="KeywordArgumentExpression"){const i=s;n.set(i.key.value,this.evaluate(i.value,e))}else r.push(this.evaluate(s,e));n.size>0&&r.push(new ur(n));const a=this.evaluate(t.callee,e);if(a.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(r,e)}evaluateSliceExpression(t,e,r){if(!(t instanceof et||t instanceof Re))throw new Error("Slice object must be an array or string");const n=this.evaluate(e.start,r),a=this.evaluate(e.stop,r),s=this.evaluate(e.step,r);if(!(n instanceof Ye||n instanceof dr))throw new Error("Slice start must be numeric or undefined");if(!(a instanceof Ye||a instanceof dr))throw new Error("Slice stop must be numeric or undefined");if(!(s instanceof Ye||s instanceof dr))throw new Error("Slice step must be numeric or undefined");return t instanceof et?new et(Tm(t.value,n.value,a.value,s.value)):new Re(Tm(Array.from(t.value),n.value,a.value,s.value).join(""))}evaluateMemberExpression(t,e){const r=this.evaluate(t.object,e);let n;if(t.computed){if(t.property.type==="SliceExpression")return this.evaluateSliceExpression(r,t.property,e);n=this.evaluate(t.property,e)}else n=new Re(t.property.value);let a;if(r instanceof ur){if(!(n instanceof Re))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=r.value.get(n.value)??r.builtins.get(n.value)}else if(r instanceof et||r instanceof Re)if(n instanceof Ye)a=r.value.at(n.value),r instanceof Re&&(a=new Re(r.value.at(n.value)));else if(n instanceof Re)a=r.builtins.get(n.value);else throw new Error(`Cannot access property with non-string/non-number: got ${n.type}`);else{if(!(n instanceof Re))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=r.builtins.get(n.value)}return a instanceof kr?a:new dr}evaluateSet(t,e){const r=this.evaluate(t.value,e);if(t.assignee.type==="Identifier"){const n=t.assignee.value;e.setVariable(n,r)}else if(t.assignee.type==="MemberExpression"){const n=t.assignee,a=this.evaluate(n.object,e);if(!(a instanceof ur))throw new Error("Cannot assign to member of non-object");if(n.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");a.value.set(n.property.value,r)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new ya}evaluateIf(t,e){const r=this.evaluate(t.test,e);return this.evaluateBlock(r.__bool__().value?t.body:t.alternate,e)}evaluateFor(t,e){const r=new qo(e),n=this.evaluate(t.iterable,r);if(!(n instanceof et))throw new Error(`Expected iterable type in for loop: got ${n.type}`);let a="";for(let s=0;s<n.value.length;++s){const i=new Map([["index",new Ye(s+1)],["index0",new Ye(s)],["revindex",new Ye(n.value.length-s)],["revindex0",new Ye(n.value.length-s-1)],["first",new at(s===0)],["last",new at(s===n.value.length-1)],["length",new Ye(n.value.length)],["previtem",s>0?n.value[s-1]:new dr],["nextitem",s<n.value.length-1?n.value[s+1]:new dr]]);r.setVariable("loop",new ur(i));const o=n.value[s];if(t.loopvar.type==="Identifier")r.setVariable(t.loopvar.value,o);else if(t.loopvar.type==="TupleLiteral"){const u=t.loopvar;if(o.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${o.type}`);const d=o;if(u.value.length!==d.value.length)throw new Error(`Too ${u.value.length>d.value.length?"few":"many"} items to unpack`);for(let h=0;h<u.value.length;++h){if(u.value[h].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${u.value[h].type}`);r.setVariable(u.value[h].value,d.value[h])}}const l=this.evaluateBlock(t.body,r);a+=l.value}return new Re(a)}evaluate(t,e){if(t===void 0)return new dr;switch(t.type){case"Program":return this.evalProgram(t,e);case"Set":return this.evaluateSet(t,e);case"If":return this.evaluateIf(t,e);case"For":return this.evaluateFor(t,e);case"NumericLiteral":return new Ye(Number(t.value));case"StringLiteral":return new Re(t.value);case"BooleanLiteral":return new at(t.value);case"ArrayLiteral":return new et(t.value.map(r=>this.evaluate(r,e)));case"TupleLiteral":return new vb(t.value.map(r=>this.evaluate(r,e)));case"ObjectLiteral":{const r=new Map;for(const[n,a]of t.value){const s=this.evaluate(n,e);if(!(s instanceof Re))throw new Error(`Object keys must be strings: got ${s.type}`);r.set(s.value,this.evaluate(a,e))}return new ur(r)}case"Identifier":return this.evaluateIdentifier(t,e);case"CallExpression":return this.evaluateCallExpression(t,e);case"MemberExpression":return this.evaluateMemberExpression(t,e);case"UnaryExpression":return this.evaluateUnaryExpression(t,e);case"BinaryExpression":return this.evaluateBinaryExpression(t,e);case"FilterExpression":return this.evaluateFilterExpression(t,e);case"TestExpression":return this.evaluateTestExpression(t,e);default:throw new SyntaxError(`Unknown node type: ${t.type}`)}}};function Pi(t){switch(typeof t){case"number":return new Ye(t);case"string":return new Re(t);case"boolean":return new at(t);case"object":return t===null?new ya:Array.isArray(t)?new et(t.map(Pi)):new ur(new Map(Object.entries(t).map(([e,r])=>[e,Pi(r)])));case"function":return new Er((e,r)=>{const n=t(...e.map(a=>a.value))??null;return Pi(n)});default:throw new Error(`Cannot convert to runtime value: ${t}`)}}var xb=class{constructor(t){B(this,"parsed");const e=ib(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=wb(e)}render(t){const e=new qo;e.set("false",!1),e.set("true",!0),e.set("raise_exception",a=>{throw new Error(a)}),e.set("range",bb);for(const[a,s]of Object.entries(t))e.set(a,s);return new $b(e).run(this.parsed).value}};const Im=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],Ri=new Map(Im),Sb=new Map([...Im.map(([t,e])=>[e,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function Mm(t){t=t.toLowerCase();let e=Sb.get(t);if(e===void 0)if(Ri.has(t))e=t;else{const n=t.length===2?Ri.keys():Ri.values();throw new Error(`Language "${t}" is not supported. Must be one of: ${JSON.stringify(n)}`)}return e}const Ko="https://github.com/xenova/transformers.js/issues/new/choose";async function Om(t,e){const r=await Promise.all([Rr(t,"tokenizer.json",!0,e),Rr(t,"tokenizer_config.json",!0,e)]);return e.legacy!==null&&(r[1].legacy=e.legacy),r}function kb(t,e){const r=[];let n=0;for(const a of t.matchAll(e)){const s=a[0];n<a.index&&r.push(t.slice(n,a.index)),s.length>0&&r.push(s),n=a.index+s.length}return n<t.length&&r.push(t.slice(n)),r}function Bi(t,e=!0){if(t.Regex!==void 0){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(const[n,a]of Mb)r=r.replaceAll(n,a);return new RegExp(r,"gu")}else if(t.String!==void 0){const r=Rl(t.String);return new RegExp(e?r:`(${r})`,"gu")}else return console.warn("Unknown pattern type:",t),null}function Yo(t){return new Map(Object.entries(t))}function zm(t){const e=t.dims;switch(e.length){case 1:return t.tolist();case 2:if(e[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${e.length}.`)}}function Xo(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Pm(t){return t.replace(/[\u0300-\u036f]/g,"")}function Eb(t){return Pm(t.toLowerCase())}function Cb(t){return t>=19968&&t<=40959||t>=13312&&t<=19903||t>=131072&&t<=173791||t>=173824&&t<=177983||t>=177984&&t<=178207||t>=178208&&t<=183983||t>=63744&&t<=64255||t>=194560&&t<=195103}function Tb(t,e,r){const n=[];let a=0;for(;a<t.length;){if(n.push(t[a]),(r.get(t[a])??e)!==e){++a;continue}for(;a<t.length&&(r.get(t[a])??e)===e;)++a}return n}function Ab(t){return t.match(/\S+/g)||[]}const zn="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",Ib=new RegExp(`^[${zn}]+$`,"gu"),Mb=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class Ob{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class wa extends vt{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...r){switch(e.type){case"WordPiece":return new zb(e);case"Unigram":return new Pb(e,...r);case"BPE":return new Bb(e);default:if(e.vocab)return new Db(e,...r);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let r=this.encode(e);return this.fuse_unk&&(r=Tb(r,this.unk_token_id,this.tokens_to_ids)),r}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map(r=>this.tokens_to_ids.get(r)??this.unk_token_id)}convert_ids_to_tokens(e){return e.map(r=>this.vocab[r]??this.unk_token)}}class zb extends wa{constructor(e){super(e),this.tokens_to_ids=Yo(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[r,n]of this.tokens_to_ids)this.vocab[n]=r}encode(e){const r=[];for(const n of e){const a=[...n];if(a.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let s=!1,i=0;const o=[];for(;i<a.length;){let l=a.length,u=null;for(;i<l;){let d=a.slice(i,l).join("");if(i>0&&(d=this.config.continuing_subword_prefix+d),this.tokens_to_ids.has(d)){u=d;break}--l}if(u===null){s=!0;break}o.push(u),i=l}s?r.push(this.unk_token):r.push(...o)}return r}}class Pb extends wa{constructor(e,r){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let a=0;a<n;++a){const s=e.vocab[a];this.vocab[a]=s[0],this.scores[a]=s[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map((a,s)=>[a,s])),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=r.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=Nl(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new eb,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const r=e.sentence,n=r.length;let a=0;for(;a<n;){let i=!1;for(let o of this.trie.commonPrefixSearch(r.slice(a))){const l=this.tokens_to_ids.get(o),u=this.scores[l],d=o.length;e.insert(a,d,u,l),!i&&d===1&&(i=!0)}i||e.insert(a,1,this.unkScore,this.unk_token_id),a+=1}}tokenize(e){const r=new tb(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(r),r.tokens()}encode(e){const r=[];for(const n of e){const a=this.tokenize(n);r.push(...a)}return r}}const Rm=(()=>{const t=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},(a,s)=>s+"!".charCodeAt(0)),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},(a,s)=>s+"¡".charCodeAt(0)),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},(a,s)=>s+"®".charCodeAt(0))],e=t.slice();let r=0;for(let a=0;a<256;++a)t.includes(a)||(t.push(a),e.push(256+r),r+=1);const n=e.map(a=>String.fromCharCode(a));return Object.fromEntries(t.map((a,s)=>[a,n[s]]))})(),Rb=j0(Rm);class Bb extends wa{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=Yo(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[r,n]of this.tokens_to_ids)this.vocab[n]=r;this.bpe_ranks=new Map(e.merges.map((r,n)=>[r,n])),this.merges=e.merges.map(r=>r.split(this.BPE_SPLIT_TOKEN)),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(e.length===0)return[];const r=this.cache.get(e);if(r!==void 0)return r;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let a=[];if(n.length>1){const s=new Jw((l,u)=>l.score<u.score);let i={token:n[0],bias:0,prev:null,next:null},o=i;for(let l=1;l<n.length;++l){const u={bias:l/n.length,token:n[l],prev:o,next:null};o.next=u,this._add_node(s,o),o=u}for(;!s.isEmpty();){const l=s.pop();if(l.deleted||!l.next||l.next.deleted)continue;if(l.deleted=!0,l.next.deleted=!0,l.prev){const d={...l.prev};l.prev.deleted=!0,l.prev=d,d.prev?d.prev.next=d:i=d}const u={token:l.token+l.next.token,bias:l.bias,prev:l.prev,next:l.next.next};u.prev?(u.prev.next=u,this._add_node(s,u.prev)):i=u,u.next&&(u.next.prev=u,this._add_node(s,u))}for(let l=i;l!==null;l=l.next)a.push(l.token)}else a=n;if(this.continuing_subword_suffix)for(let s=0;s<a.length-1;++s)a[s]+=this.continuing_subword_suffix;return this.cache.set(e,a),a}_add_node(e,r){const n=this.bpe_ranks.get(r.token+this.BPE_SPLIT_TOKEN+r.next.token);n!==void 0&&(r.score=n+r.bias,e.push(r))}encode(e){const r=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){r.push(n);continue}const a=this.bpe(n);for(const s of a)this.tokens_to_ids.has(s)?r.push(s):this.byte_fallback?r.push(...Array.from(this.text_encoder.encode(s)).map(i=>`<0x${i.toString(16).toUpperCase().padStart(2,"0")}>`)):r.push(this.unk_token)}return r}}class Db extends wa{constructor(e,r){super(e),this.tokens_to_ids=Yo(r.target_lang?e.vocab[r.target_lang]:e.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[n,a]of this.tokens_to_ids)this.vocab[a]=n}encode(e){return e}}class Wt extends vt{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"BertNormalizer":return new qb(e);case"Precompiled":return new pv(e);case"Sequence":return new jb(e);case"Replace":return new Nb(e);case"NFC":return new Fb(e);case"NFKC":return new Lb(e);case"NFKD":return new Ub(e);case"Strip":return new Wb(e);case"StripAccents":return new Vb(e);case"Lowercase":return new Gb(e);case"Prepend":return new Hb(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Nb extends Wt{normalize(e){const r=Bi(this.config.pattern);return r===null?e:e.replaceAll(r,this.config.content)}}class Fb extends Wt{normalize(e){return e=e.normalize("NFC"),e}}class Lb extends Wt{normalize(e){return e=e.normalize("NFKC"),e}}class Ub extends Wt{normalize(e){return e=e.normalize("NFKD"),e}}class Wb extends Wt{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class Vb extends Wt{normalize(e){return e=Pm(e),e}}class Gb extends Wt{normalize(e){return e=e.toLowerCase(),e}}class Hb extends Wt{normalize(e){return e=this.config.prepend+e,e}}class jb extends Wt{constructor(e){super(e),this.normalizers=e.normalizers.map(r=>Wt.fromConfig(r))}normalize(e){return this.normalizers.reduce((r,n)=>n.normalize(r),e)}}class qb extends Wt{_tokenize_chinese_chars(e){const r=[];for(let n=0;n<e.length;++n){const a=e[n],s=a.charCodeAt(0);Cb(s)?(r.push(" "),r.push(a),r.push(" ")):r.push(a)}return r.join("")}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const r=[];for(const n of e){const a=n.charCodeAt(0);a===0||a===65533||this._is_control(n)||(/^\s$/.test(n)?r.push(" "):r.push(n))}return r.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),this.config.strip_accents!==!1&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class Qt extends vt{static fromConfig(e){if(e===null)return null;switch(e.type){case"BertPreTokenizer":return new Kb(e);case"Sequence":return new hv(e);case"Whitespace":return new fv(e);case"WhitespaceSplit":return new mv(e);case"Metaspace":return new Fm(e);case"ByteLevel":return new Yb(e);case"Split":return new Xb(e);case"Punctuation":return new Qb(e);case"Digits":return new Zb(e);case"Replace":return new gv(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,r){return(Array.isArray(e)?e.map(n=>this.pre_tokenize_text(n,r)):this.pre_tokenize_text(e,r)).flat()}_call(e,r){return this.pre_tokenize(e,r)}}class Kb extends Qt{constructor(e){super(),this.pattern=new RegExp(`[^\\s${zn}]+|[${zn}]`,"gu")}pre_tokenize_text(e,r){return e.trim().match(this.pattern)||[]}}class Yb extends Qt{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Rm,this.text_encoder=new TextEncoder}pre_tokenize_text(e,r){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map(a=>Array.from(this.text_encoder.encode(a),s=>this.byte_encoder[s]).join(""))}}class Xb extends Qt{constructor(e){super(),this.config=e,this.pattern=Bi(this.config.pattern,this.config.invert)}pre_tokenize_text(e,r){return this.pattern===null?[]:this.config.invert?e.match(this.pattern)||[]:kb(e,this.pattern)}}class Qb extends Qt{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${zn}]+|[${zn}]+`,"gu")}pre_tokenize_text(e,r){return e.match(this.pattern)||[]}}class Zb extends Qt{constructor(e){super(),this.config=e;const r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(r,"gu")}pre_tokenize_text(e,r){return e.match(this.pattern)||[]}}class Pn extends vt{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"TemplateProcessing":return new Jb(e);case"ByteLevel":return new Nm(e);case"RobertaProcessing":return new Dm(e);case"BertProcessing":return new Bm(e);case"Sequence":return new ev(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...r){throw Error("post_process should be implemented in subclass.")}_call(e,...r){return this.post_process(e,...r)}}class Bm extends Pn{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,r=null,{add_special_tokens:n=!0}={}){n&&(e=gt([this.cls],e,[this.sep]));let a=new Array(e.length).fill(0);if(r!==null){const s=n&&this instanceof Dm?[this.sep]:[],i=n?[this.sep]:[];e=gt(e,s,r,i),a=gt(a,new Array(r.length+s.length+i.length).fill(1))}return{tokens:e,token_type_ids:a}}}class Dm extends Bm{}class Jb extends Pn{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,r=null,{add_special_tokens:n=!0}={}){const a=r===null?this.single:this.pair;let s=[],i=[];for(const o of a)"SpecialToken"in o?n&&(s.push(o.SpecialToken.id),i.push(o.SpecialToken.type_id)):"Sequence"in o&&(o.Sequence.id==="A"?(s=gt(s,e),i=gt(i,new Array(e.length).fill(o.Sequence.type_id))):o.Sequence.id==="B"&&(s=gt(s,r),i=gt(i,new Array(r.length).fill(o.Sequence.type_id))));return{tokens:s,token_type_ids:i}}}class Nm extends Pn{post_process(e,r=null){return r&&(e=gt(e,r)),{tokens:e}}}class ev extends Pn{constructor(e){super(e),this.processors=e.processors.map(r=>Pn.fromConfig(r))}post_process(e,r=null,n={}){let a;for(const s of this.processors)if(s instanceof Nm)e=s.post_process(e).tokens,r&&(r=s.post_process(r).tokens);else{const i=s.post_process(e,r,n);e=i.tokens,a=i.token_type_ids}return{tokens:e,token_type_ids:a}}}class Vt extends vt{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(e===null)return null;switch(e.type){case"WordPiece":return new iv(e);case"Metaspace":return new cv(e);case"ByteLevel":return new sv(e);case"Replace":return new tv(e);case"ByteFallback":return new rv(e);case"Fuse":return new nv(e);case"Strip":return new av(e);case"Sequence":return new lv(e);case"CTC":return new ov(e);case"BPEDecoder":return new uv(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class tv extends Vt{decode_chain(e){const r=Bi(this.config.pattern);return r===null?e:e.map(n=>n.replaceAll(r,this.config.content))}}class rv extends Vt{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const r=[];let n=[];for(const a of e){let s=null;if(a.length===6&&a.startsWith("<0x")&&a.endsWith(">")){const i=parseInt(a.slice(3,5),16);isNaN(i)||(s=i)}if(s!==null)n.push(s);else{if(n.length>0){const i=this.text_decoder.decode(Uint8Array.from(n));r.push(i),n=[]}r.push(a)}}if(n.length>0){const a=this.text_decoder.decode(Uint8Array.from(n));r.push(a),n=[]}return r}}class nv extends Vt{decode_chain(e){return[e.join("")]}}class av extends Vt{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map(r=>{let n=0;for(let s=0;s<this.start&&r[s]===this.content;++s){n=s+1;continue}let a=r.length;for(let s=0;s<this.stop;++s){const i=r.length-s-1;if(r[i]===this.content){a=i;continue}else break}return r.slice(n,a)})}}class iv extends Vt{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map((r,n)=>(n!==0&&(r.startsWith(this.config.prefix)?r=r.replace(this.config.prefix,""):r=" "+r),this.cleanup&&(r=Xo(r)),r))}}class sv extends Vt{constructor(e){super(e),this.byte_decoder=Rb,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const r=e.join(""),n=new Uint8Array([...r].map(s=>this.byte_decoder[s]));return this.text_decoder.decode(n)}decode_chain(e){const r=[];let n=[];for(const a of e)this.added_tokens.find(s=>s.content===a)!==void 0?(n.length>0&&(r.push(this.convert_tokens_to_string(n)),n=[]),r.push(a)):n.push(a);return n.length>0&&r.push(this.convert_tokens_to_string(n)),r}}class ov extends Vt{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(e.length===0)return"";const r=[e[0]];for(let s=1;s<e.length;++s)e[s]!==r.at(-1)&&r.push(e[s]);let a=r.filter(s=>s!==this.pad_token).join("");return this.cleanup&&(a=Xo(a).replaceAll(this.word_delimiter_token," ").trim()),a}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class lv extends Vt{constructor(e){super(e),this.decoders=e.decoders.map(r=>Vt.fromConfig(r))}decode_chain(e){return this.decoders.reduce((r,n)=>n.decode_chain(r),e)}}class uv extends Vt{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map((r,n)=>r.replaceAll(this.suffix,n===e.length-1?"":" "))}}class dv extends Vt{decode_chain(e){let r="";for(let n=1;n<e.length;n+=2)r+=e[n];return[r]}}class Fm extends Qt{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:r=void 0}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&r===0)&&(n=this.strRep+n),[n]}}class cv extends Vt{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const r=[];for(let n=0;n<e.length;++n){let a=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&n==0&&a.startsWith(" ")&&(a=a.substring(1)),r.push(a)}return r}}class pv extends Wt{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){return e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),e=e.replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," "),e.includes("～")?e=e.split("～").map(n=>n.normalize("NFKC")).join("～"):e=e.normalize("NFKC"),e}}class hv extends Qt{constructor(e){super(),this.tokenizers=e.pretokenizers.map(r=>Qt.fromConfig(r))}pre_tokenize_text(e,r){return this.tokenizers.reduce((n,a)=>a.pre_tokenize(n,r),[e])}}class fv extends Qt{constructor(e){super()}pre_tokenize_text(e,r){return e.match(/\w+|[^\w\s]+/g)||[]}}class mv extends Qt{constructor(e){super()}pre_tokenize_text(e,r){return Ab(e)}}class gv extends Qt{constructor(e){super(),this.config=e,this.pattern=Bi(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,r){return this.pattern===null?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const _v=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function yv(t,e,r,n){for(const a of Object.keys(t)){const s=e-t[a].length,i=r(a),o=new Array(s).fill(i);t[a]=n==="right"?gt(t[a],o):gt(o,t[a])}}function wv(t,e){for(const r of Object.keys(t))t[r].length=e}class Ce extends vt{constructor(r,n){super();B(this,"return_token_type_ids",!1);B(this,"_default_chat_template",`{% for message in messages %}{{'<|im_start|>' + message['role'] + '
' + message['content'] + '<|im_end|>' + '
'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant
' }}{% endif %}`);B(this,"padding_side","right");this._tokenizer_config=n,this.normalizer=Wt.fromConfig(r.normalizer),this.pre_tokenizer=Qt.fromConfig(r.pre_tokenizer),this.model=wa.fromConfig(r.model,n),this.post_processor=Pn.fromConfig(r.post_processor),this.decoder=Vt.fromConfig(r.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const a of r.added_tokens){const s=new Ob(a);this.added_tokens.push(s),this.model.tokens_to_ids.set(s.content,s.id),this.model.vocab[s.id]=s.content,s.special&&(this.special_tokens.push(s.content),this.all_special_ids.push(s.id))}if(this.additional_special_tokens=n.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.toSorted((a,s)=>s.content.length-a.content.length).map(a=>`${a.lstrip?"\\s*":""}(${Rl(a.content)})${a.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=n.model_max_length,this.remove_space=n.remove_space,this.clean_up_tokenization_spaces=n.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=n.do_lowercase_and_remove_accent??!1,n.padding_side&&(this.padding_side=n.padding_side),this.legacy=!1,this.chat_template=n.chat_template??null,Array.isArray(this.chat_template)){const a=Object.create(null);for(const{name:s,template:i}of this.chat_template){if(typeof s!="string"||typeof i!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');a[s]=i}this.chat_template=a}this._compiled_template_cache=new Map}getToken(...r){for(const n of r){const a=this._tokenizer_config[n];if(a)if(typeof a=="object"){if(a.__type==="AddedToken")return a.content;throw Error(`Unknown token: ${a}`)}else return a}return null}static async from_pretrained(r,{progress_callback:n=null,config:a=null,cache_dir:s=null,local_files_only:i=!1,revision:o="main",legacy:l=null}={}){const u=await Om(r,{progress_callback:n,config:a,cache_dir:s,local_files_only:i,revision:o,legacy:l});return new this(...u)}_call(r,{text_pair:n=null,add_special_tokens:a=!0,padding:s=!1,truncation:i=null,max_length:o=null,return_tensor:l=!0,return_token_type_ids:u=null}={}){const d=Array.isArray(r);let h;if(d){if(r.length===0)throw Error("text array must be non-empty");if(n!==null){if(Array.isArray(n)){if(r.length!==n.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");h=r.map((g,p)=>this._encode_plus(g,{text_pair:n[p],add_special_tokens:a,return_token_type_ids:u}))}else h=r.map(g=>this._encode_plus(g,{add_special_tokens:a,return_token_type_ids:u}))}else{if(r==null)throw Error("text may not be null or undefined");if(Array.isArray(n))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");h=[this._encode_plus(r,{text_pair:n,add_special_tokens:a,return_token_type_ids:u})]}if(o===null?s==="max_length"?o=this.model_max_length:o=Lt(h.map(g=>g.input_ids.length))[0]:i||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),o=Math.min(o,this.model_max_length??1/0),s||i)for(let g=0;g<h.length;++g)h[g].input_ids.length!==o&&(h[g].input_ids.length>o?i&&wv(h[g],o):s&&yv(h[g],o,p=>p==="input_ids"?this.pad_token_id:0,this.padding_side));const f={};if(l){if(!(s&&i)&&h.some(p=>{var w;for(const v of Object.keys(p))if(p[v].length!==((w=h[0][v])==null?void 0:w.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const g=[h.length,h[0].input_ids.length];for(const p of Object.keys(h[0]))f[p]=new pe("int64",BigInt64Array.from(h.flatMap(w=>w[p]).map(BigInt)),g)}else{for(const g of Object.keys(h[0]))f[g]=h.map(p=>p[g]);if(!d)for(const g of Object.keys(f))f[g]=f[g][0]}return f}_encode_text(r){return r===null?null:(this.added_tokens_regex?r.split(this.added_tokens_regex).filter(s=>s):[r]).map((s,i)=>{if(this.added_tokens.find(l=>l.content===s)!==void 0)return s;{if(this.remove_space===!0&&(s=s.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(s=Eb(s)),this.normalizer!==null&&(s=this.normalizer(s)),s.length===0)return[];const l=this.pre_tokenizer!==null?this.pre_tokenizer(s,{section_index:i}):[s];return this.model(l)}}).flat()}_encode_plus(r,{text_pair:n=null,add_special_tokens:a=!0,return_token_type_ids:s=null}={}){const{tokens:i,token_type_ids:o}=this._tokenize_helper(r,{pair:n,add_special_tokens:a}),l=this.model.convert_tokens_to_ids(i),u={input_ids:l,attention_mask:new Array(l.length).fill(1)};return(s??this.return_token_type_ids)&&o&&(u.token_type_ids=o),u}_tokenize_helper(r,{pair:n=null,add_special_tokens:a=!1}={}){const s=this._encode_text(r),i=this._encode_text(n);return this.post_processor?this.post_processor(s,i,{add_special_tokens:a}):{tokens:gt(s??[],i??[])}}tokenize(r,{pair:n=null,add_special_tokens:a=!1}={}){return this._tokenize_helper(r,{pair:n,add_special_tokens:a}).tokens}encode(r,{text_pair:n=null,add_special_tokens:a=!0,return_token_type_ids:s=null}={}){return this._encode_plus(r,{text_pair:n,add_special_tokens:a,return_token_type_ids:s}).input_ids}batch_decode(r,n={}){return r instanceof pe&&(r=r.tolist()),r.map(a=>this.decode(a,n))}decode(r,n={}){if(r instanceof pe&&(r=zm(r)),!Array.isArray(r)||r.length===0||!q0(r[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(r,n)}decode_single(r,{skip_special_tokens:n=!1,clean_up_tokenization_spaces:a=null}){let s=this.model.convert_ids_to_tokens(r);n&&(s=s.filter(o=>!this.special_tokens.includes(o)));let i=this.decoder?this.decoder(s):s.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(i=i.replaceAll(this.decoder.end_of_word_suffix," "),n&&(i=i.trim())),(a??this.clean_up_tokenization_spaces)&&(i=Xo(i)),i}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(r,{chat_template:n=null,add_generation_prompt:a=!1,tokenize:s=!0,padding:i=!1,truncation:o=!1,max_length:l=null,return_tensor:u=!0,return_dict:d=!1,tokenizer_kwargs:h={},...f}={}){if(this.chat_template&&typeof this.chat_template=="object"||this.chat_template===null&&this.default_chat_template&&typeof this.default_chat_template=="object"){const v=this.chat_template??this.default_chat_template;if(n!==null&&Object.hasOwn(v,n))n=v[n];else if(n===null&&"default"in v)n=v.default;else if(n===null)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(v).sort()}.`)}else n??(n=this.chat_template??this.default_chat_template);if(typeof n!="string")throw Error(`chat_template must be a string, but got ${typeof n}`);let g=this._compiled_template_cache.get(n);g===void 0&&(g=new xb(n),this._compiled_template_cache.set(n,g));const p=Object.create(null);for(const v of _v){const S=this.getToken(v);S&&(p[v]=S)}const w=g.render({messages:r,add_generation_prompt:a,...p,...f});if(s){const v=this._call(w,{add_special_tokens:!1,padding:i,truncation:o,max_length:l,return_tensor:u,...h});return d?v:v.input_ids}return w}}class bv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class vv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class $v extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class xv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class Sv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class kv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class Ev extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class Cv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class Tv extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class Av extends Ce{}class Iv extends Ce{}class Mv extends Ce{constructor(r,n){super(r,n);B(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ov extends Ce{constructor(){super(...arguments);B(this,"return_token_type_ids",!0)}}class zv extends Ce{}class Lm extends Ce{constructor(){super(...arguments);B(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}}class Pv extends Ce{}class Um extends Ce{constructor(e,r){super(e,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)),this.lang_to_token=n=>n}_build_translation_inputs(e,r,n){return Qo(this,e,r,n)}}class Rv extends Um{}class Bv extends Ce{}class Dv extends Lm{constructor(e,r){var s,i;const n=".,!?…。，、।۔،",a=(i=(s=e.pre_tokenizer)==null?void 0:s.pretokenizers[0])==null?void 0:i.pattern;a&&a.Regex===` ?[^(\\s|[${n}])]+`&&(a.Regex=` ?[^\\s${n}]+`),super(e,r)}}const Di="▁";class Wm extends Ce{constructor(r,n){super(r,n);B(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>
' + system_message + '
<</SYS>>

' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>
' + content.strip() + '
<</SYS>>

' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}`);B(this,"DEFAULT_SYSTEM_PROMPT",`You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.

If a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.`);B(this,"padding_side","left");this.use_default_system_prompt=n.use_default_system_prompt??!1,this.legacy=n.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Fm({replacement:Di,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(r){if(r===null)return null;if(this.legacy||r.length===0)return super._encode_text(r);let n=super._encode_text(Di+r.replaceAll(Di," "));return n.length>1&&n[0]===Di&&this.special_tokens.includes(n[1])&&(n=n.slice(1)),n}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll(`
`,"\\n").replaceAll("'","\\'"))}}class Nv extends Wm{}class Fv extends Ce{}class Lv extends Ce{}class Uv extends Ce{}class Wv extends Ce{}class Vv extends Ce{}class Gv extends Ce{}class Hv extends Ce{constructor(){super(...arguments);B(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '
' + message['content'] | trim + '<end_of_turn>
' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model
'}}{% endif %}`)}}class jv extends Ce{}function Qo(t,e,r,n){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||typeof t.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const a=n.src_lang,s=n.tgt_lang;if(!t.language_codes.includes(s))throw new Error(`Target language code "${s}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(a!==void 0){if(!t.language_codes.includes(a))throw new Error(`Source language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(const i of t.post_processor.config.single)if("SpecialToken"in i&&t.languageRegex.test(i.SpecialToken.id)){i.SpecialToken.id=t.lang_to_token(a);break}}return n.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(s)])[0],t._call(e,r)}class qv extends Ce{constructor(e,r){super(e,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)),this.lang_to_token=n=>n}_build_translation_inputs(e,r,n){return Qo(this,e,r,n)}}class Kv extends Ce{constructor(e,r){super(e,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)).map(n=>n.slice(2,-2)),this.lang_to_token=n=>`__${n}__`}_build_translation_inputs(e,r,n){return Qo(this,e,r,n)}}class Yv extends Ce{constructor(){super(...arguments);B(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(r,{return_timestamps:n=!1,return_language:a=!1,time_precision:s=null,force_full_sequences:i=!0}={}){if(s===null)throw Error("Must specify time_precision");let o=null;const l=n==="word";function u(){return{language:o,timestamp:[null,null],text:""}}const d=[];let h=u(),f=0;const g=this.timestamp_begin;let p=[],w=[],v=!1,S=null;const $=new Set(this.all_special_ids);for(const A of r){const z=A.tokens,R=l?A.token_timestamps:null;let G=null,j=g;if("stride"in A){const[re,ee,le]=A.stride;if(f-=ee,S=re-le,ee&&(j=ee/s+g),le)for(let N=z.length-1;N>=0;--N){const O=Number(z[N]);if(O>=g){if(G!==null&&(O-g)*s<S)break;G=O}}}let q=[],ue=[];for(let re=0;re<z.length;++re){const ee=Number(z[re]);if($.has(ee)){const le=this.decode([ee]),N=Ri.get(le.slice(2,-2));if(N!==void 0){if(o!==null&&N!==o&&!n){p.push(q);const O=this.findLongestCommonSequence(p)[0],V=this.decode(O);h.text=V,d.push(h),p=[],q=[],h=u()}o=h.language=N}}else if(ee>=g){const le=(ee-g)*s+f,N=Qn(le,2);if(G!==null&&ee>=G)v=!0;else if(v||p.length>0&&ee<j)v=!1;else if(h.timestamp[0]===null)h.timestamp[0]=N;else if(N!==h.timestamp[0]){h.timestamp[1]=N,p.push(q),l&&w.push(ue);const[O,V]=this.findLongestCommonSequence(p,w),K=this.decode(O);h.text=K,l&&(h.words=this.collateWordTimestamps(O,V,o)),d.push(h),p=[],q=[],w=[],ue=[],h=u()}}else if(q.push(ee),l){let le=Qn(R[re]+f,2),N;if(re+1<R.length){N=Qn(R[re+1]+f,2);const O=this.decode([ee]);Ib.test(O)&&(N=Qn(Math.min(le+s,N),2))}else N=null;ue.push([le,N])}}if("stride"in A){const[re,ee,le]=A.stride;f+=re-le}q.length>0?(p.push(q),l&&w.push(ue)):p.every(re=>re.length===0)&&(h=u(),p=[],q=[],w=[],ue=[])}if(p.length>0){if(i&&n)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[A,z]=this.findLongestCommonSequence(p,w),R=this.decode(A);h.text=R,l&&(h.words=this.collateWordTimestamps(A,z,o)),d.push(h)}let E=Object.create(null);const T=d.map(A=>A.text).join("");if(n||a){for(let A=0;A<d.length;++A){const z=d[A];n||delete z.timestamp,a||delete z.language}if(l){const A=[];for(const z of d)for(const R of z.words)A.push(R);E={chunks:A}}else E={chunks:d}}return[T,E]}findLongestCommonSequence(r,n=null){let a=r[0],s=a.length,i=[];const o=Array.isArray(n)&&n.length>0;let l=o?[]:null,u=o?n[0]:null;for(let d=1;d<r.length;++d){const h=r[d];let f=0,g=[s,s,0,0];const p=h.length;for(let A=1;A<s+p;++A){const z=Math.max(0,s-A),R=Math.min(s,s+p-A),G=a.slice(z,R),j=Math.max(0,A-s),q=Math.min(p,A),ue=h.slice(j,q);if(G.length!==ue.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let re;o?re=G.filter((N,O)=>N===ue[O]&&u[z+O]<=n[d][j+O]).length:re=G.filter((N,O)=>N===ue[O]).length;const ee=A/1e4,le=re/A+ee;re>1&&le>f&&(f=le,g=[z,R,j,q])}const[w,v,S,$]=g,E=Math.floor((v+w)/2),T=Math.floor(($+S)/2);i.push(...a.slice(0,E)),a=h.slice(T),s=a.length,o&&(l.push(...u.slice(0,E)),u=n[d].slice(T))}return i.push(...a),o?(l.push(...u),[i,l]):[i,[]]}collateWordTimestamps(r,n,a){const[s,i,o]=this.combineTokensIntoWords(r,a),l=[];for(let u=0;u<s.length;++u){const d=o[u];l.push({text:s[u],timestamp:[n[d.at(0)][0],n[d.at(-1)][1]]})}return l}combineTokensIntoWords(r,n,a=`"'“¡¿([{-`,s=`"'.。,，!！?？:：”)]}、`){n=n??"english";let i,o,l;return["chinese","japanese","thai","lao","myanmar"].includes(n)?[i,o,l]=this.splitTokensOnUnicode(r):[i,o,l]=this.splitTokensOnSpaces(r),this.mergePunctuations(i,o,l,a,s)}decode(r,n){let a;return n!=null&&n.decode_with_timestamps?(r instanceof pe&&(r=zm(r)),a=this.decodeWithTimestamps(r,n)):a=super.decode(r,n),a}decodeWithTimestamps(r,n){const a=(n==null?void 0:n.time_precision)??.02,s=Array.from(this.all_special_ids).at(-1)+1;let i=[[]];for(let o of r)if(o=Number(o),o>=s){const l=((o-s)*a).toFixed(2);i.push(`<|${l}|>`),i.push([])}else i[i.length-1].push(o);return i=i.map(o=>typeof o=="string"?o:super.decode(o,n)),i.join("")}splitTokensOnUnicode(r){const n=this.decode(r,{decode_with_timestamps:!0}),a="�",s=[],i=[],o=[];let l=[],u=[],d=0;for(let h=0;h<r.length;++h){const f=r[h];l.push(f),u.push(h);const g=this.decode(l,{decode_with_timestamps:!0});(!g.includes(a)||n[d+g.indexOf(a)]===a)&&(s.push(g),i.push(l),o.push(u),l=[],u=[],d+=g.length)}return[s,i,o]}splitTokensOnSpaces(r){const[n,a,s]=this.splitTokensOnUnicode(r),i=[],o=[],l=[],u=new RegExp(`^[${zn}]$`,"gu");for(let d=0;d<n.length;++d){const h=n[d],f=a[d],g=s[d],p=f[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),w=h.startsWith(" "),v=h.trim(),S=u.test(v);if(p||w||S||i.length===0)i.push(h),o.push(f),l.push(g);else{const $=i.length-1;i[$]+=h,o[$].push(...f),l[$].push(...g)}}return[i,o,l]}mergePunctuations(r,n,a,s,i){const o=structuredClone(r),l=structuredClone(n),u=structuredClone(a);let d=o.length-2,h=o.length-1;for(;d>=0;)o[d].startsWith(" ")&&s.includes(o[d].trim())?(o[h]=o[d]+o[h],l[h]=gt(l[d],l[h]),u[h]=gt(u[d],u[h]),o[d]="",l[d]=[],u[d]=[]):h=d,--d;for(d=0,h=1;h<o.length;)!o[d].endsWith(" ")&&i.includes(o[h])?(o[d]+=o[h],l[d]=gt(l[d],l[h]),u[d]=gt(u[d],u[h]),o[h]="",l[h]=[],u[h]=[]):d=h,++h;return[o.filter(f=>f),l.filter(f=>f.length>0),u.filter(f=>f.length>0)]}get_decoder_prompt_ids({language:r=null,task:n=null,no_timestamps:a=!0}={}){const s=[];if(r){const i=Mm(r),o=this.model.tokens_to_ids.get(`<|${i}|>`);if(o===void 0)throw new Error(`Unable to find language "${i}" in model vocabulary. Please report this issue at ${Ko}.`);s.push(o)}else s.push(null);if(n){if(n=n.toLowerCase(),n!=="transcribe"&&n!=="translate")throw new Error(`Task "${n}" is not supported. Must be one of: ["transcribe", "translate"]`);const i=this.model.tokens_to_ids.get(`<|${n}|>`);if(i===void 0)throw new Error(`Unable to find task "${n}" in model vocabulary. Please report this issue at ${Ko}.`);s.push(i)}else s.push(null);if(a){const i=this.model.tokens_to_ids.get("<|notimestamps|>");if(i===void 0)throw new Error(`Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at ${Ko}.`);s.push(i)}return s.map((i,o)=>[o+1,i]).filter(i=>i[1]!==null)}}class Xv extends Ce{}class Qv extends Ce{}class Zv extends Ce{}class Jv extends Ce{constructor(e,r){super(e,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(n=>this.languageRegex.test(n)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(e===null)return null;const[r,...n]=e.trim().split(this.languageRegex);if(n.length===0)return super._encode_text(r);if(n.length===2){const[a,s]=n;return this.supported_language_codes.includes(a)||console.warn(`Unsupported language code "${a}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),gt([a],super._encode_text(s))}}}class e1 extends Ce{}class Vm extends Ce{constructor(){super(...arguments);B(this,"_default_chat_template","{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}")}}class t1 extends Vm{}class r1 extends Ce{}class n1 extends Ce{}class a1 extends Ce{constructor(e,r){super(e,r),this.decoder=new dv({})}}class i1 extends Ce{}class pt{static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main",legacy:o=null}={}){var f;const[l,u]=await Om(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i,legacy:o}),d=((f=u.tokenizer_class)==null?void 0:f.replace(/Fast$/,""))??"PreTrainedTokenizer";let h=this.TOKENIZER_CLASS_MAPPING[d];return h||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),h=Ce),new h(l,u)}}B(pt,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:zv,DistilBertTokenizer:Av,CamembertTokenizer:Iv,DebertaTokenizer:Sv,DebertaV2Tokenizer:kv,BertTokenizer:bv,HerbertTokenizer:Ev,ConvBertTokenizer:Cv,RoFormerTokenizer:Tv,XLMTokenizer:Mv,ElectraTokenizer:Ov,MobileBertTokenizer:$v,SqueezeBertTokenizer:xv,AlbertTokenizer:vv,GPT2Tokenizer:Lm,BartTokenizer:Pv,MBartTokenizer:Um,MBart50Tokenizer:Rv,RobertaTokenizer:Bv,WhisperTokenizer:Yv,CodeGenTokenizer:Xv,CLIPTokenizer:Qv,SiglipTokenizer:Zv,MarianTokenizer:Jv,BloomTokenizer:Dv,NllbTokenizer:qv,M2M100Tokenizer:Kv,LlamaTokenizer:Wm,CodeLlamaTokenizer:Nv,XLMRobertaTokenizer:Fv,MPNetTokenizer:Lv,FalconTokenizer:Uv,GPTNeoXTokenizer:Wv,EsmTokenizer:Vv,Wav2Vec2CTCTokenizer:e1,BlenderbotTokenizer:Vm,BlenderbotSmallTokenizer:t1,SpeechT5Tokenizer:r1,NougatTokenizer:n1,VitsTokenizer:a1,Qwen2Tokenizer:Gv,GemmaTokenizer:Hv,Grok1Tokenizer:jv,CohereTokenizer:i1,PreTrainedTokenizer:Ce});async function s1(t,e){return await Rr(t,"config.json",!0,e)}function ba(t){const e={};let r={};switch(t.model_type){case"llava":case"paligemma":case"florence2":r=ba(t.text_config);break;case"moondream1":r=ba(t.phi_config);break;case"musicgen":r=ba(t.decoder);break;case"gpt2":case"gptj":case"codegen":case"gpt_bigcode":e.num_heads="n_head",e.num_layers="n_layer",e.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":e.num_heads="num_attention_heads",e.num_layers="num_hidden_layers",e.hidden_size="hidden_size";break;case"llama":case"cohere":case"mistral":case"starcoder2":case"qwen2":e.num_heads="num_key_value_heads",e.num_layers="num_hidden_layers",e.hidden_size="hidden_size",e.num_attention_heads="num_attention_heads";break;case"gemma":e.num_heads="num_key_value_heads",e.num_layers="num_hidden_layers",e.dim_kv="head_dim";break;case"openelm":e.num_heads="num_kv_heads",e.num_layers="num_transformer_layers",e.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":e.num_heads="num_heads",e.num_layers="num_layers",e.hidden_size="hidden_size";break;case"bloom":e.num_heads="n_head",e.num_layers="n_layer",e.hidden_size="hidden_size";break;case"mpt":e.num_heads="n_heads",e.num_layers="n_layers",e.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":e.num_decoder_layers="num_decoder_layers",e.num_decoder_heads="num_heads",e.decoder_dim_kv="d_kv",e.num_encoder_layers="num_layers",e.num_encoder_heads="num_heads",e.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":e.num_decoder_layers="decoder_layers",e.num_decoder_heads="decoder_attention_heads",e.decoder_hidden_size="d_model",e.num_encoder_layers="encoder_layers",e.num_encoder_heads="encoder_attention_heads",e.encoder_hidden_size="d_model";break;case"speecht5":e.num_decoder_layers="decoder_layers",e.num_decoder_heads="decoder_attention_heads",e.decoder_hidden_size="hidden_size",e.num_encoder_layers="encoder_layers",e.num_encoder_heads="encoder_attention_heads",e.encoder_hidden_size="hidden_size";break;case"trocr":e.num_encoder_layers=e.num_decoder_layers="decoder_layers",e.num_encoder_heads=e.num_decoder_heads="decoder_attention_heads",e.encoder_hidden_size=e.decoder_hidden_size="d_model";break;case"musicgen_decoder":e.num_encoder_layers=e.num_decoder_layers="num_hidden_layers",e.num_encoder_heads=e.num_decoder_heads="num_attention_heads",e.encoder_hidden_size=e.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const a=ba(t.decoder),s="num_decoder_layers"in a,i=$r(t,["model_type","is_encoder_decoder"]);return s?(i.num_decoder_layers=a.num_decoder_layers,i.num_decoder_heads=a.num_decoder_heads,i.decoder_hidden_size=a.decoder_hidden_size,i.num_encoder_layers=a.num_encoder_layers,i.num_encoder_heads=a.num_encoder_heads,i.encoder_hidden_size=a.encoder_hidden_size):(i.num_layers=a.num_layers,i.num_heads=a.num_heads,i.hidden_size=a.hidden_size),i}const n={...r,...$r(t,["model_type","multi_query","is_encoder_decoder"])};for(const a in e)n[a]=t[e[a]];return n}function Gm(t,{prefix:e="past_key_values"}={}){const r={},n=t.normalized_config,a=1;if(n.is_encoder_decoder&&"num_encoder_heads"in n&&"num_decoder_heads"in n){const s=n.encoder_dim_kv??n.encoder_hidden_size/n.num_encoder_heads,i=n.decoder_dim_kv??n.decoder_hidden_size/n.num_decoder_heads,o=[a,n.num_encoder_heads,0,s],l=[a,n.num_decoder_heads,0,i];for(let u=0;u<n.num_decoder_layers;++u)r[`${e}.${u}.encoder.key`]=o,r[`${e}.${u}.encoder.value`]=o,r[`${e}.${u}.decoder.key`]=l,r[`${e}.${u}.decoder.value`]=l}else{const s=n.num_heads,i=n.num_layers,o=n.dim_kv??n.hidden_size/(n.num_attention_heads??s);if(n.model_type==="falcon"){const l=[a*s,0,o];for(let u=0;u<i;++u)r[`${e}.${u}.key`]=l,r[`${e}.${u}.value`]=l}else if(n.multi_query){const l=[a*s,0,2*o];for(let u=0;u<i;++u)r[`${e}.${u}.key_value`]=l}else if(n.model_type==="bloom"){const l=[a*s,o,0],u=[a*s,0,o];for(let d=0;d<i;++d)r[`${e}.${d}.key`]=l,r[`${e}.${d}.value`]=u}else if(n.model_type==="openelm")for(let l=0;l<i;++l){const u=[a,s[l],0,o];r[`${e}.${l}.key`]=u,r[`${e}.${l}.value`]=u}else{const l=[a,s,0,o];for(let u=0;u<i;++u)r[`${e}.${u}.key`]=l,r[`${e}.${u}.value`]=l}}return r}class Ni{constructor(e){B(this,"max_position_embeddings");this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e),this.normalized_config=ba(this)}static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main"}={}){n&&!(n instanceof Ni)&&(n=new Ni(n));const o=n??await s1(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i});return new this(o)}}class Hm{static async from_pretrained(...e){return Ni.from_pretrained(...e)}}const Fi=Object.freeze({cpu:"cpu",gpu:"gpu",wasm:"wasm",webgpu:"webgpu"}),o1=function(){let t;return async function(){if(t===void 0)if(!wn.IS_WEBGPU_AVAILABLE)t=!1;else try{t=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{t=!1}return t}}(),Pt=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),l1=Object.freeze({[Fi.cpu]:Pt.q8,[Fi.gpu]:Pt.fp32,[Fi.wasm]:Pt.q8,[Fi.webgpu]:Pt.fp32}),jm=Object.freeze({[Pt.fp32]:"",[Pt.fp16]:"_fp16",[Pt.int8]:"_int8",[Pt.uint8]:"_uint8",[Pt.q8]:"_quantized",[Pt.q4]:"_q4",[Pt.q4f16]:"_q4f16",[Pt.bnb4]:"_bnb4"});class yr extends vt{_call(e,r){throw Error("`_call` should be implemented in a subclass")}}class Zo extends vt{_call(e,r){throw Error("`_call` should be implemented in a subclass")}}class Li extends vt{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,r){let n=r;for(const a of this.processors)n=a(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class u1 extends yr{constructor(e){super(),this.bos_token_id=e}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===1){const a=r[n];a.data.fill(-1/0),a.data[this.bos_token_id]=0}return r}}class d1 extends yr{constructor(e,r){super(),this.max_length=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const a=r[n];a.data.fill(-1/0);for(const s of this.eos_token_id)a.data[s]=0}return r}}class qm extends yr{constructor(e,r){super(),this.begin_suppress_tokens=e,this.begin_index=r}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const a=r[n];for(const s of this.begin_suppress_tokens)a.data[s]=-1/0}return r}}class c1 extends yr{constructor(e,r){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=r.length,r.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,r){for(let n=0;n<e.length;++n){const s=r[n].data;if(s[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){s.fill(-1/0),s[this.timestamp_begin]=0;continue}const i=e[n].slice(this.begin_index),o=i.length>=1&&i[i.length-1]>=this.timestamp_begin,l=i.length<2||i[i.length-2]>=this.timestamp_begin;if(o&&(l?s.subarray(this.timestamp_begin).fill(-1/0):s.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&this.max_initial_timestamp_index!==null){const f=this.timestamp_begin+this.max_initial_timestamp_index;s.subarray(f+1).fill(-1/0)}const u=ty(s),d=Math.log(u.subarray(this.timestamp_begin).map(Math.exp).reduce((f,g)=>f+g)),h=Lt(u.subarray(0,this.timestamp_begin))[0];d>h&&s.subarray(0,this.timestamp_begin).fill(-1/0)}return r}}class p1 extends yr{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const r=e.length,n=[];for(let s=0;s<r+1-this.no_repeat_ngram_size;++s){const i=[];for(let o=0;o<this.no_repeat_ngram_size;++o)i.push(e[s+o]);n.push(i.map(Number))}const a=new Map;for(const s of n){const i=s.slice(0,s.length-1),o=JSON.stringify(i),l=a.get(o)??[];l.push(s[s.length-1]),a.set(o,l)}return a}getGeneratedNgrams(e,r){const n=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const r=[];if(e.length+1<this.no_repeat_ngram_size)return r;{const n=this.getNgrams(e);return this.getGeneratedNgrams(n,e)}}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n],s=this.calcBannedNgramTokens(e[n]);for(const i of s)a.data[i]=-1/0}return r}}class h1 extends yr{constructor(e){super(),this.penalty=e}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n];for(const s of e[n])a.data[s]<0?a.data[s]*=this.penalty:a.data[s]/=this.penalty}return r}}class f1 extends yr{constructor(e,r){super(),this.min_length=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const a=r[n];for(const s of this.eos_token_id)a.data[s]=-1/0}return r}}class m1 extends yr{constructor(e,r,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=r,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const s=r[n];for(const i of this.eos_token_id)s[i]=-1/0}return r}}class g1 extends yr{constructor(e,r){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n];for(const s of this.bad_words_ids){let i=!0;for(let o=1;o<=s.length-1&&s.length<e[o].length;++o)if(s.at(-o-1)!==Number(e[o].at(-o))){i=!1;break}i&&(a[s.at(-1)]=-1/0)}}return r}}class _1 extends yr{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,r){if(r.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,a=r.slice([0,n],null),s=r.slice([n,r.dims[0]],null);for(let i=0;i<s.data.length;++i)s.data[i]+=(a.data[i]-s.data[i])*this.guidance_scale;return s}}class y1 extends Zo{constructor(e){super(),this.temperature=e}_call(e,r){const n=r.data;for(let a=0;a<n.length;++a)n[a]/=this.temperature;return r}}class w1 extends Zo{constructor(e,{filter_value:r=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=r,this.min_tokens_to_keep=n}}class b1 extends Zo{constructor(e,{filter_value:r=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=r}}class Km{constructor(e){B(this,"max_length",20);B(this,"max_new_tokens",null);B(this,"min_length",0);B(this,"min_new_tokens",null);B(this,"early_stopping",!1);B(this,"max_time",null);B(this,"do_sample",!1);B(this,"num_beams",1);B(this,"num_beam_groups",1);B(this,"penalty_alpha",null);B(this,"use_cache",!0);B(this,"temperature",1);B(this,"top_k",50);B(this,"top_p",1);B(this,"typical_p",1);B(this,"epsilon_cutoff",0);B(this,"eta_cutoff",0);B(this,"diversity_penalty",0);B(this,"repetition_penalty",1);B(this,"encoder_repetition_penalty",1);B(this,"length_penalty",1);B(this,"no_repeat_ngram_size",0);B(this,"bad_words_ids",null);B(this,"force_words_ids",null);B(this,"renormalize_logits",!1);B(this,"constraints",null);B(this,"forced_bos_token_id",null);B(this,"forced_eos_token_id",null);B(this,"remove_invalid_values",!1);B(this,"exponential_decay_length_penalty",null);B(this,"suppress_tokens",null);B(this,"begin_suppress_tokens",null);B(this,"forced_decoder_ids",null);B(this,"guidance_scale",null);B(this,"num_return_sequences",1);B(this,"output_attentions",!1);B(this,"output_hidden_states",!1);B(this,"output_scores",!1);B(this,"return_dict_in_generate",!1);B(this,"pad_token_id",null);B(this,"bos_token_id",null);B(this,"eos_token_id",null);B(this,"encoder_no_repeat_ngram_size",0);B(this,"decoder_start_token_id",null);B(this,"generation_kwargs",{});Object.assign(this,$r(e,Object.getOwnPropertyNames(this)))}}class Jo extends vt{_call(e,r){throw Error("StoppingCriteria needs to be subclassed")}}class el extends vt{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof el?e=e.criteria:e instanceof Jo&&(e=[e]),this.criteria.push(...e)}_call(e,r){const n=new Array(e.length).fill(!1);for(const a of this.criteria){const s=a(e,r);for(let i=0;i<n.length;++i)n[i]||(n[i]=s[i])}return n}[Symbol.iterator](){return this.criteria.values()}}class v1 extends Jo{constructor(e,r=null){super(),this.max_length=e,this.max_position_embeddings=r}_call(e){return e.map(r=>r.length>=this.max_length)}}class $1 extends Jo{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,r){return e.map(n=>{const a=n.at(-1);return this.eos_token_id.some(s=>a==s)})}}class Ui extends vt{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,r){let n=e.dims.at(-1),a=e.data;if(r===-1)a=a.slice(-n);else{let s=r*n;a=a.slice(s,s+n)}return a}randomSelect(e){let r=0;for(let a=0;a<e.length;++a)r+=e[a];let n=Math.random()*r;for(let a=0;a<e.length;++a)if(n-=e[a],n<=0)return a;return 0}static getSampler(e){if(e.do_sample)return new S1(e);if(e.num_beams>1)return new k1(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new x1(e)}}class x1 extends Ui{async sample(e){const r=Lt(e.data)[1];return[[BigInt(r),0]]}}class S1 extends Ui{async sample(e){let r=e.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));const[n,a]=await An(e,r),s=_t(n.data);return Array.from({length:this.generation_config.num_beams},()=>{const i=this.randomSelect(s);return[a.data[i],Math.log(s[i])]})}}class k1 extends Ui{async sample(e){let r=e.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));const[n,a]=await An(e,r),s=_t(n.data);return Array.from({length:this.generation_config.num_beams},(i,o)=>[a.data[o],Math.log(s[o])])}}class E1 extends Km{constructor(){super(...arguments);B(this,"return_timestamps",null);B(this,"return_token_timestamps",null);B(this,"num_frames",null);B(this,"alignment_heads",null);B(this,"task",null);B(this,"language",null);B(this,"no_timestamps_token_id",null);B(this,"prompt_ids",null);B(this,"is_multilingual",null);B(this,"lang_to_id",null);B(this,"task_to_id",null);B(this,"max_initial_timestamp_index",1)}}const $e={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},Wi=new Map,Ym=new Map,va=new Map;async function C1(t,e,r){let n=r.device;n&&typeof n!="string"&&(n.hasOwnProperty(e)?n=n[e]:(console.warn(`device not specified for "${e}". Using the default device.`),n=null));const a=Fw(n);let s=r.dtype;if(typeof s!="string"&&(s&&s.hasOwnProperty(e)?s=s[e]:(s=l1[a[0]],console.warn(`dtype not specified for "${e}". Using the default dtype for this device (${s}).`))),jm.hasOwnProperty(s)){if(s===Pt.fp16&&n==="webgpu"&&!await o1())throw new Error(`The device (${n}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${s}. Should be one of: ${Object.keys(Pt).join(", ")}`);const i=jm[s],o=`${r.subfolder??""}/${e}${i}.onnx`,l={...r.session_options};l.executionProviders??(l.executionProviders=a);const u=si(t,o,!0,r);let d=[];if(r.use_external_data_format&&(r.use_external_data_format===!0||typeof r.use_external_data_format=="object"&&r.use_external_data_format.hasOwnProperty(e)&&r.use_external_data_format[e]===!0)){if(wn.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const f=`${e}${i}.onnx_data`,g=`${r.subfolder??""}/${f}`;d.push(new Promise(async(p,w)=>{const v=await si(t,g,!0,r);p({path:f,data:v})}))}else l.externalData!==void 0&&(d=l.externalData.map(async f=>{if(typeof f.data=="string"){const g=await si(t,f.data,!0,r);return{...f,data:g}}return f}));if(d.length>0&&(l.externalData=await Promise.all(d)),n==="webgpu"){const f=Gm(r.config,{prefix:"present"});if(Object.keys(f).length>0){const g={};for(const p in f)g[p]="gpu-buffer";l.preferredOutputLocation=g}}return{buffer:await u,session_options:l}}async function on(t,e,r){return Object.fromEntries(await Promise.all(Object.keys(e).map(async n=>{const{buffer:a,session_options:s}=await C1(t,e[n],r),i=await gm(a,s);return[n,i]})))}function T1(t,e){const r=Object.create(null),n=[];for(const i of t.inputNames){const o=e[i];if(!(o instanceof pe)){n.push(i);continue}r[i]=Lw()?o.clone():o}if(n.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${n.join(", ")}.`);const a=Object.keys(e).length,s=t.inputNames.length;if(a>s){let i=Object.keys(e).filter(o=>!t.inputNames.includes(o));console.warn(`WARNING: Too many inputs were provided (${a} > ${s}). The following inputs will be ignored: "${i.join(", ")}".`)}return r}async function Lr(t,e){const r=T1(t,e);try{const n=Object.fromEntries(Object.entries(r).map(([s,i])=>[s,i.ort_tensor]));let a=await t.run(n);return a=Xm(a),a}catch(n){throw console.error(`An error occurred during model execution: "${n}".`),console.error("Inputs given to model:",r),n}}function Xm(t){for(let e in t)_m(t[e])?t[e]=new pe(t[e]):typeof t[e]=="object"&&Xm(t[e]);return t}function tl(t){if(t instanceof pe)return t;if(t.length===0)throw Error("items must be non-empty");if(Array.isArray(t[0])){if(t.some(e=>e.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new pe("int64",BigInt64Array.from(t.flat().map(e=>BigInt(e))),[t.length,t[0].length])}else return new pe("int64",BigInt64Array.from(t.map(e=>BigInt(e))),[1,t.length])}function Qm(t){return new pe("bool",[t],[1])}async function Zm(t,e){let{encoder_outputs:r,input_ids:n,decoder_input_ids:a,...s}=e;if(!r){const o=$r(e,t.sessions.model.inputNames);r=(await Rn(t,o)).last_hidden_state}return s.input_ids=a,s.encoder_hidden_states=r,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(s.encoder_attention_mask=e.attention_mask),await Vi(t,s,!0)}async function Rn(t,e){const r=t.sessions.model,n=$r(e,r.inputNames);if(r.inputNames.includes("inputs_embeds")&&!n.inputs_embeds){if(!e.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");n.inputs_embeds=await t.encode_text({input_ids:e.input_ids})}return r.inputNames.includes("token_type_ids")&&!n.token_type_ids&&(n.token_type_ids=new pe("int64",new BigInt64Array(n.input_ids.data.length),n.input_ids.dims)),await Lr(r,n)}async function Vi(t,e,r=!1){const n=t.sessions[r?"decoder_model_merged":"model"],{past_key_values:a,...s}=e;n.inputNames.includes("use_cache_branch")&&(s.use_cache_branch=Qm(!!a)),n.inputNames.includes("position_ids")&&s.attention_mask&&!s.position_ids&&(s.position_ids=I1(s,a)),t.addPastKeyValues(s,a);const i=$r(s,n.inputNames);return await Lr(n,i)}async function A1(t,{input_ids:e=null,attention_mask:r=null,pixel_values:n=null,position_ids:a=null,inputs_embeds:s=null,past_key_values:i=null,generation_config:o=null,logits_processor:l=null,...u}){if(!s){if(s=await t.encode_text({input_ids:e}),n&&e.dims[1]!==1){const h=await t.encode_image({pixel_values:n});({inputs_embeds:s,attention_mask:r}=t._merge_input_ids_with_image_features({image_features:h,inputs_embeds:s,input_ids:e,attention_mask:r}))}else if(i&&n&&e.dims[1]===1){const h=e.dims[1],f=Object.values(i)[0].dims.at(-2);r=Ut([In([e.dims[0],f]),r.slice(null,[r.dims[1]-h,r.dims[1]])],1)}}return await Vi(t,{inputs_embeds:s,past_key_values:i,attention_mask:r,position_ids:a,generation_config:o,logits_processor:l},!0)}function I1(t,e=null){const{input_ids:r,inputs_embeds:n,attention_mask:a}=t,[s,i]=a.dims,o=new BigInt64Array(a.data.length);for(let u=0;u<s;++u){const d=u*i;let h=BigInt(0);for(let f=0;f<i;++f){const g=d+f;a.data[g]===0n?o[g]=BigInt(1):(o[g]=h,h+=a.data[g])}}let l=new pe("int64",o,a.dims);if(e){const u=-(r??n).dims.at(1);l=l.slice(null,[u,null])}return l}function Jm(t,e,r,n){if(r.past_key_values){const a=Object.values(r.past_key_values)[0].dims.at(-2),{input_ids:s,attention_mask:i}=r;if(!(i&&i.dims[1]>s.dims[1])){if(a<s.dims[1])r.input_ids=s.slice(null,[a,null]);else if(t.config.image_token_index!=null&&s.data.some(o=>o==t.config.image_token_index)){const o=t.config.num_image_tokens;if(!o)throw new Error("`num_image_tokens` is missing in the model configuration.");const l=s.dims[1]-(a-o);r.input_ids=s.slice(null,[-l,null]),r.attention_mask=In([1,a+l])}}}return r}function eg(t,e,r,n){return r.past_key_values&&(e=e.map(a=>[a.at(-1)])),{...r,decoder_input_ids:tl(e)}}function M1(t,...e){return t.config.is_encoder_decoder?eg(t,...e):Jm(t,...e)}class Q extends vt{constructor(r,n){super();B(this,"main_input_name","input_ids");B(this,"forward_params",["input_ids","attention_mask"]);this.config=r,this.sessions=n;const a=va.get(this.constructor),s=Wi.get(a);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,s){case $e.DecoderOnly:this.can_generate=!0,this._forward=Vi,this._prepare_inputs_for_generation=Jm;break;case $e.Seq2Seq:case $e.Vision2Seq:case $e.Musicgen:this.can_generate=!0,this._forward=Zm,this._prepare_inputs_for_generation=eg;break;case $e.EncoderDecoder:this._forward=Zm;break;case $e.ImageTextToText:this.can_generate=!0,this._forward=A1,this._prepare_inputs_for_generation=M1;break;default:this._forward=Rn;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var n;const r=[];for(const a of Object.values(this.sessions))(n=a==null?void 0:a.handler)!=null&&n.dispose&&r.push(a.handler.dispose());return await Promise.all(r)}static async from_pretrained(r,{progress_callback:n=null,config:a=null,cache_dir:s=null,local_files_only:i=!1,revision:o="main",model_file_name:l=null,subfolder:u="onnx",device:d=null,dtype:h=null,use_external_data_format:f=null,session_options:g={}}={}){let p={progress_callback:n,config:a,cache_dir:s,local_files_only:i,revision:o,model_file_name:l,subfolder:u,device:d,dtype:h,use_external_data_format:f,session_options:g};const w=va.get(this),v=Wi.get(w);a=p.config=await Hm.from_pretrained(r,p);let S;if(v===$e.DecoderOnly)S=await Promise.all([on(r,{model:p.model_file_name??"model"},p),Rr(r,"generation_config.json",!1,p)]);else if(v===$e.Seq2Seq||v===$e.Vision2Seq)S=await Promise.all([on(r,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p),Rr(r,"generation_config.json",!1,p)]);else if(v===$e.MaskGeneration)S=await Promise.all([on(r,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},p)]);else if(v===$e.EncoderDecoder)S=await Promise.all([on(r,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p)]);else if(v===$e.ImageTextToText){const $={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};a.is_encoder_decoder&&($.model="encoder_model"),S=await Promise.all([on(r,$,p),Rr(r,"generation_config.json",!1,p)])}else v===$e.Musicgen?S=await Promise.all([on(r,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},p),Rr(r,"generation_config.json",!1,p)]):(v!==$e.EncoderOnly&&console.warn(`Model type for '${w??(a==null?void 0:a.model_type)}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),S=await Promise.all([on(r,{model:p.model_file_name??"model"},p)]));return new this(a,...S)}async _call(r){return await this.forward(r)}async forward(r){return await this._forward(this,r)}_get_logits_warper(r){const n=new Li;return r.temperature!==null&&r.temperature!==1&&n.push(new y1(r.temperature)),r.top_k!==null&&r.top_k!==0&&n.push(new b1(r.top_k)),r.top_p!==null&&r.top_p<1&&n.push(new w1(r.top_p)),n}_get_logits_processor(r,n,a=null){const s=new Li;if(r.repetition_penalty!==null&&r.repetition_penalty!==1&&s.push(new h1(r.repetition_penalty)),r.no_repeat_ngram_size!==null&&r.no_repeat_ngram_size>0&&s.push(new p1(r.no_repeat_ngram_size)),r.bad_words_ids!==null&&s.push(new g1(r.bad_words_ids,r.eos_token_id)),r.min_length!==null&&r.eos_token_id!==null&&r.min_length>0&&s.push(new f1(r.min_length,r.eos_token_id)),r.min_new_tokens!==null&&r.eos_token_id!==null&&r.min_new_tokens>0&&s.push(new m1(n,r.min_new_tokens,r.eos_token_id)),r.forced_bos_token_id!==null&&s.push(new u1(r.forced_bos_token_id)),r.forced_eos_token_id!==null&&s.push(new d1(r.max_length,r.forced_eos_token_id)),r.begin_suppress_tokens!==null){const i=n>1||r.forced_bos_token_id===null?n:n+1;s.push(new qm(r.begin_suppress_tokens,i))}return r.guidance_scale!==null&&r.guidance_scale>1&&s.push(new _1(r.guidance_scale)),a!==null&&s.extend(a),s}_prepare_generation_config(r,n,a=Km){const s={...this.config};for(const o of["decoder","generator","text_config"])o in s&&Object.assign(s,s[o]);const i=new a(s);return"generation_config"in this&&Object.assign(i,this.generation_config),r&&Object.assign(i,r),n&&Object.assign(i,$r(n,Object.getOwnPropertyNames(i))),i}_get_stopping_criteria(r,n=null){const a=new el;return r.max_length!==null&&a.push(new v1(r.max_length,this.config.max_position_embeddings??null)),r.eos_token_id!==null&&a.push(new $1(r.eos_token_id)),n&&a.extend(n),a}_validate_model_class(){if(!this.can_generate){const r=[ul,dl,ll,ol],n=va.get(this.constructor),a=new Set,s=this.config.model_type;for(const o of r){const l=o.get(s);l&&a.add(l[0])}let i=`The current model class (${n}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw a.size>0&&(i+=` Please use the following class instead: ${[...a].join(", ")}`),Error(i)}}prepare_inputs_for_generation(...r){return this._prepare_inputs_for_generation(this,...r)}_update_model_kwargs_for_generation({generated_input_ids:r,outputs:n,model_inputs:a,is_encoder_decoder:s}){return a.past_key_values=this.getPastKeyValues(n,a.past_key_values),a.input_ids=new pe("int64",r.flat(),[r.length,1]),s||(a.attention_mask=Ut([a.attention_mask,In([a.attention_mask.dims[0],1])],1)),a.position_ids=null,a}_prepare_model_inputs({inputs:r,bos_token_id:n,model_kwargs:a}){const s=$r(a,this.forward_params),i=this.main_input_name;if(i in s){if(r)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else s[i]=r;return{inputs_tensor:s[i],model_inputs:s,model_input_name:i}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:r,model_inputs:n,model_input_name:a,generation_config:s}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!n.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:o,pixel_values:l,attention_mask:u,...d}=n,h=await this._prepare_inputs_embeds(n);n={...d,...$r(h,["inputs_embeds","attention_mask"])}}let{last_hidden_state:i}=await Rn(this,n);if(s.guidance_scale!==null&&s.guidance_scale>1)i=Ut([i,Kw(i,0)],0),"attention_mask"in n&&(n.attention_mask=Ut([n.attention_mask,Qw(n.attention_mask)],0));else if(n.decoder_input_ids){const o=tl(n.decoder_input_ids).dims[0];if(o!==i.dims[0]){if(i.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${i.dims[0]}) than the decoder inputs (${o}).`);i=Ut(Array.from({length:o},()=>i),0)}}return n.encoder_outputs=i,n}_prepare_decoder_input_ids_for_generation({batch_size:r,model_input_name:n,model_kwargs:a,decoder_start_token_id:s,bos_token_id:i,generation_config:o}){let{decoder_input_ids:l,...u}=a;if(l)Array.isArray(l[0])||(l=Array.from({length:r},()=>l));else if(s??(s=i),this.config.model_type==="musicgen")l=Array.from({length:r*this.config.decoder.num_codebooks},()=>[s]);else if(Array.isArray(s)){if(s.length!==r)throw new Error(`\`decoder_start_token_id\` expcted to have length ${r} but got ${s.length}`);l=s}else l=Array.from({length:r},()=>[s]);return l=tl(l),a.decoder_attention_mask=Yw(l),{input_ids:l,model_inputs:u}}async generate({inputs:r=null,generation_config:n=null,logits_processor:a=null,stopping_criteria:s=null,streamer:i=null,...o}){this._validate_model_class(),n=this._prepare_generation_config(n,o);let{inputs_tensor:l,model_inputs:u,model_input_name:d}=this._prepare_model_inputs({inputs:r,model_kwargs:o});const h=this.config.is_encoder_decoder;h&&("encoder_outputs"in u||(u=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:l,model_inputs:u,model_input_name:d,generation_config:n})));let f;h?{input_ids:f,model_inputs:u}=this._prepare_decoder_input_ids_for_generation({batch_size:u[d].dims.at(0),model_input_name:d,model_kwargs:u,decoder_start_token_id:n.decoder_start_token_id,bos_token_id:n.bos_token_id,generation_config:n}):f=u[d];let g=f.dims.at(-1);n.max_new_tokens!==null&&(n.max_length=g+n.max_new_tokens);const p=this._get_logits_processor(n,g,a),w=this._get_stopping_criteria(n,s),v=u[d].dims.at(0),S=Ui.getSampler(n),$=new Array(v).fill(0),E=f.tolist();i&&i.put(E);let T=null,A={};for(;;){u=this.prepare_inputs_for_generation(E,u,n);const R=await this.forward(u);if(n.output_attentions&&n.return_dict_in_generate){const re=this.getAttentions(R);for(const ee in re)ee in A||(A[ee]=[]),A[ee].push(re[ee])}const G=R.logits.slice(null,-1,null),j=p(E,G),q=[];for(let re=0;re<j.dims.at(0);++re){const ee=j[re],le=await S(ee);for(const[N,O]of le){const V=BigInt(N);$[re]+=O,E[re].push(V),q.push([V]);break}}if(i&&i.put(q),w(E).every(re=>re)){n.return_dict_in_generate&&(T=this.getPastKeyValues(R,u.past_key_values,!1));break}u=this._update_model_kwargs_for_generation({generated_input_ids:q,outputs:R,model_inputs:u,is_encoder_decoder:h})}i&&i.end();const z=new pe("int64",E.flat(),[E.length,E[0].length]);return n.return_dict_in_generate?{sequences:z,past_key_values:T,...A}:z}getPastKeyValues(r,n,a=!0){const s=Object.create(null);for(const i in r)if(i.startsWith("present")){const o=i.replace("present","past_key_values");if(n&&i.includes("encoder"))s[o]=n[o];else{if(a&&n){const l=n[o];l.location==="gpu-buffer"&&l.dispose()}s[o]=r[i]}}return s}getAttentions(r){const n={};for(const a of["cross_attentions","encoder_attentions","decoder_attentions"])for(const s in r)s.startsWith(a)&&(a in n||(n[a]=[]),n[a].push(r[s]));return n}addPastKeyValues(r,n){if(n)Object.assign(r,n);else{const a=this.custom_config.kv_cache_dtype??"float32",s=a==="float16"?new Uint16Array:[],i=Gm(this.config);for(const o in i)r[o]=new pe(a,s,i[o])}}async encode_image({pixel_values:r}){const n=(await Lr(this.sessions.vision_encoder,{pixel_values:r})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${n.dims[1]}).`),this.config.num_image_tokens=n.dims[1]),n}async encode_text({input_ids:r}){return(await Lr(this.sessions.embed_tokens,{input_ids:r})).inputs_embeds}}class Gt{}class $a extends Q{}class O1 extends $a{}class z1 extends $a{async _call(e){return new $t(await super._call(e))}}class P1 extends $a{async _call(e){return new Me(await super._call(e))}}class R1 extends $a{async _call(e){return new wt(await super._call(e))}}class B1 extends $a{async _call(e){return new At(await super._call(e))}}class D1 extends Q{}class N1 extends D1{}class xa extends Q{}class F1 extends xa{}class L1 extends xa{async _call(e){return new $t(await super._call(e))}}class U1 extends xa{async _call(e){return new Me(await super._call(e))}}class W1 extends xa{async _call(e){return new wt(await super._call(e))}}class V1 extends xa{async _call(e){return new At(await super._call(e))}}class Sa extends Q{}class G1 extends Sa{}class H1 extends Sa{async _call(e){return new $t(await super._call(e))}}class j1 extends Sa{async _call(e){return new Me(await super._call(e))}}class q1 extends Sa{async _call(e){return new wt(await super._call(e))}}class K1 extends Sa{async _call(e){return new At(await super._call(e))}}class ka extends Q{}class Y1 extends ka{}class X1 extends ka{async _call(e){return new $t(await super._call(e))}}class Q1 extends ka{async _call(e){return new Me(await super._call(e))}}class Z1 extends ka{async _call(e){return new wt(await super._call(e))}}class J1 extends ka{async _call(e){return new At(await super._call(e))}}class Ea extends Q{}class e2 extends Ea{}class t2 extends Ea{async _call(e){return new $t(await super._call(e))}}class r2 extends Ea{async _call(e){return new Me(await super._call(e))}}class n2 extends Ea{async _call(e){return new wt(await super._call(e))}}class a2 extends Ea{async _call(e){return new At(await super._call(e))}}class Ca extends Q{}class i2 extends Ca{}class s2 extends Ca{async _call(e){return new $t(await super._call(e))}}class o2 extends Ca{async _call(e){return new Me(await super._call(e))}}class l2 extends Ca{async _call(e){return new wt(await super._call(e))}}class u2 extends Ca{async _call(e){return new At(await super._call(e))}}class Ta extends Q{}class d2 extends Ta{}class c2 extends Ta{async _call(e){return new $t(await super._call(e))}}class p2 extends Ta{async _call(e){return new Me(await super._call(e))}}class h2 extends Ta{async _call(e){return new wt(await super._call(e))}}class f2 extends Ta{async _call(e){return new At(await super._call(e))}}class Aa extends Q{}class m2 extends Aa{}class g2 extends Aa{async _call(e){return new Me(await super._call(e))}}class _2 extends Aa{async _call(e){return new wt(await super._call(e))}}class y2 extends Aa{async _call(e){return new At(await super._call(e))}}class w2 extends Aa{async _call(e){return new $t(await super._call(e))}}class Gi extends Q{}class b2 extends Gi{}class v2 extends Gi{async _call(e){return new $t(await super._call(e))}}class $2 extends Gi{async _call(e){return new Me(await super._call(e))}}class x2 extends Gi{async _call(e){return new wt(await super._call(e))}}class Hi extends Q{}class S2 extends Hi{}class k2 extends Hi{async _call(e){return new $t(await super._call(e))}}class E2 extends Hi{async _call(e){return new Me(await super._call(e))}}class C2 extends Hi{async _call(e){return new At(await super._call(e))}}class Ia extends Q{}class T2 extends Ia{}class A2 extends Ia{async _call(e){return new $t(await super._call(e))}}class I2 extends Ia{async _call(e){return new Me(await super._call(e))}}class M2 extends Ia{async _call(e){return new wt(await super._call(e))}}class O2 extends Ia{async _call(e){return new At(await super._call(e))}}class ji extends Q{}class z2 extends ji{}class P2 extends ji{async _call(e){return new $t(await super._call(e))}}class R2 extends ji{async _call(e){return new Me(await super._call(e))}}class B2 extends ji{async _call(e){return new At(await super._call(e))}}class qi extends Q{}class D2 extends qi{}class N2 extends qi{async _call(e){return new Me(await super._call(e))}}class F2 extends qi{async _call(e){return new At(await super._call(e))}}class L2 extends qi{async _call(e){return new $t(await super._call(e))}}class tg extends Q{constructor(r,n,a){super(r,n);B(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]);this.generation_config=a}}class U2 extends tg{}class W2 extends tg{}class rg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class V2 extends rg{}class G2 extends rg{}class ng extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class H2 extends ng{}class j2 extends ng{}class rl extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class q2 extends rl{}class K2 extends rl{}class Y2 extends rl{async _call(e){return new Me(await super._call(e))}}class Ki extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class X2 extends Ki{}class Q2 extends Ki{}class Z2 extends Ki{async _call(e){return new Me(await super._call(e))}}class J2 extends Ki{}class ag extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class e$ extends ag{}class t$ extends ag{}class ig extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class r$ extends ig{}class n$ extends ig{}class Ma extends Q{}class a$ extends Ma{}class i$ extends Ma{async _call(e){return new $t(await super._call(e))}}class s$ extends Ma{async _call(e){return new Me(await super._call(e))}}class o$ extends Ma{async _call(e){return new wt(await super._call(e))}}class l$ extends Ma{async _call(e){return new At(await super._call(e))}}class Oa extends Q{}class u$ extends Oa{}class d$ extends Oa{async _call(e){return new $t(await super._call(e))}}class c$ extends Oa{async _call(e){return new Me(await super._call(e))}}class p$ extends Oa{async _call(e){return new wt(await super._call(e))}}class h$ extends Oa{async _call(e){return new At(await super._call(e))}}class za extends Q{}class f$ extends za{}class m$ extends za{async _call(e){return new $t(await super._call(e))}}class g$ extends za{async _call(e){return new Me(await super._call(e))}}class _$ extends za{async _call(e){return new wt(await super._call(e))}}class y$ extends za{async _call(e){return new At(await super._call(e))}}class sg extends Q{}class w$ extends sg{}class b$ extends sg{}class og extends Q{constructor(r,n,a){super(r,n);B(this,"requires_attention_mask",!1);B(this,"main_input_name","input_features");B(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]);this.generation_config=a}}class v$ extends og{}class $$ extends og{_prepare_generation_config(e,r){return super._prepare_generation_config(e,r,E1)}_retrieve_init_tokens(e){const r=[e.decoder_start_token_id];let n=e.language;const a=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const i=`<|${Mm(n)}|>`;r.push(e.lang_to_id[i]),r.push(e.task_to_id[a??"transcribe"])}else if(n||a)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&r.at(-1)!==e.no_timestamps_token_id?r.push(e.no_timestamps_token_id):e.return_timestamps&&r.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),r.pop()),r.filter(s=>s!=null)}async generate({inputs:e=null,generation_config:r=null,logits_processor:n=null,stopping_criteria:a=null,...s}){r=this._prepare_generation_config(r,s);const i=s.decoder_input_ids??this._retrieve_init_tokens(r);if(r.return_timestamps&&(n??(n=new Li),n.push(new c1(r,i))),r.begin_suppress_tokens&&(n??(n=new Li),n.push(new qm(r.begin_suppress_tokens,i.length))),r.return_token_timestamps){if(!r.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");r.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),r.output_attentions=!0,r.return_dict_in_generate=!0}const o=await super.generate({inputs:e,generation_config:r,logits_processor:n,decoder_input_ids:i,...s});return r.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,r.alignment_heads,r.num_frames)),o}_extract_token_timestamps(e,r,n=null,a=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");n==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let s=this.config.median_filter_width;s===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),s=7);const i=e.cross_attentions,o=Array.from({length:this.config.decoder_layers},(w,v)=>Ut(i.map(S=>S[v]),2)),l=fa(r.map(([w,v])=>{if(w>=o.length)throw new Error(`Layer index ${w} is out of bounds for cross attentions (length ${o.length}).`);return n?o[w].slice(null,v,null,[0,n]):o[w].slice(null,v)})).transpose(1,0,2,3),[u,d]=Hw(l,-2,0,!0),h=l.clone();for(let w=0;w<h.dims[0];++w){const v=h[w];for(let S=0;S<v.dims[0];++S){const $=v[S],E=u[w][S][0].data,T=d[w][S][0].data;for(let A=0;A<$.dims[0];++A){let z=$[A].data;for(let R=0;R<z.length;++R)z[R]=(z[R]-T[R])/E[R];z.set(ay(z,s))}}}const f=[Go(h,1)],g=e.sequences.dims,p=new pe("float32",new Float32Array(g[0]*g[1]),g);for(let w=0;w<g[0];++w){const v=f[w].neg().squeeze_(0),[S,$]=sy(v.tolist()),E=Array.from({length:S.length-1},(z,R)=>S[R+1]-S[R]),T=gt([1],E).map(z=>!!z),A=[];for(let z=0;z<T.length;++z)T[z]&&A.push($[z]*a);p[w].data.set(A,1)}return p}}class lg extends Q{constructor(r,n,a){super(r,n);B(this,"main_input_name","pixel_values");B(this,"forward_params",["pixel_values","input_ids","encoder_hidden_states","past_key_values"]);this.generation_config=a}}class x$ extends Q{constructor(r,n,a){super(r,n);B(this,"forward_params",["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]);this.generation_config=a}}class ug extends x${_merge_input_ids_with_image_features({inputs_embeds:e,image_features:r,input_ids:n,attention_mask:a}){const s=this.config.image_token_index,o=n.tolist().map(f=>f.findIndex(g=>g==s)),l=o.every(f=>f===-1),u=o.every(f=>f!==-1);if(!l&&!u)throw new Error("Every input should contain either 0 or 1 image token.");if(l)return{inputs_embeds:e,attention_mask:a};const d=[],h=[];for(let f=0;f<o.length;++f){const g=o[f],p=e[f],w=r[f],v=a[f];d.push(Ut([p.slice([0,g]),w,p.slice([g+1,p.dims[0]])],0)),h.push(Ut([v.slice([0,g]),In([w.dims[0]]),v.slice([g+1,v.dims[0]])],0))}return{inputs_embeds:fa(d,0),attention_mask:fa(h,0)}}}class S$ extends ug{}class k$ extends Q{constructor(r,n,a){super(r,n);B(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);B(this,"main_input_name","inputs_embeds");this.generation_config=a}}class E$ extends k${_merge_input_ids_with_image_features({inputs_embeds:e,image_features:r,input_ids:n,attention_mask:a}){return{inputs_embeds:Ut([r,e],1),attention_mask:Ut([In(r.dims.slice(0,2)),a],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:r,inputs_embeds:n,attention_mask:a}){if(!e&&!r)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let s,i;return e&&(s=await this.encode_text({input_ids:e})),r&&(i=await this.encode_image({pixel_values:r})),s&&i?{inputs_embeds:n,attention_mask:a}=this._merge_input_ids_with_image_features({inputs_embeds:s,image_features:i,input_ids:e,attention_mask:a}):n=s||i,{inputs_embeds:n,attention_mask:a}}async forward({input_ids:e,pixel_values:r,attention_mask:n,decoder_input_ids:a,decoder_attention_mask:s,encoder_outputs:i,past_key_values:o,inputs_embeds:l,decoder_inputs_embeds:u}){if(l||({inputs_embeds:l,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:r,inputs_embeds:l,attention_mask:n})),!i){let{last_hidden_state:f}=await Rn(this,{inputs_embeds:l,attention_mask:n});i=f}if(!u){if(!a)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");u=await this.encode_text({input_ids:a})}return await Vi(this,{inputs_embeds:u,attention_mask:s,encoder_attention_mask:n,encoder_hidden_states:i,past_key_values:o},!0)}}class Yi extends Q{}class C$ extends Yi{}class T$ extends Yi{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="text_model"),super.from_pretrained(e,r)}}class A$ extends Yi{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="vision_model"),super.from_pretrained(e,r)}}class dg extends Q{}class I$ extends dg{}class M$ extends dg{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="text_model"),super.from_pretrained(e,r)}}class O$ extends Yi{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="vision_model"),super.from_pretrained(e,r)}}class z$ extends Q{}class P$ extends z${}class cg extends Q{}class R$ extends cg{}class B$ extends cg{}class pg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class D$ extends pg{}class N$ extends pg{}class hg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class F$ extends hg{}class L$ extends hg{}class fg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class U$ extends fg{}class W$ extends fg{}class mg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class V$ extends mg{}class G$ extends mg{}class gg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class H$ extends gg{}class j$ extends gg{}class _g extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class q$ extends _g{}class K$ extends _g{}class yg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class Y$ extends yg{}class X$ extends yg{}class wg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class Q$ extends wg{}class Z$ extends wg{}class bg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class J$ extends bg{}class ex extends bg{}class vg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class tx extends vg{}class rx extends vg{}class $g extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class nx extends $g{}class ax extends $g{}class xg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class ix extends xg{}class sx extends xg{}class Sg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class ox extends Sg{}class lx extends Sg{}class kg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class ux extends kg{}class dx extends kg{}class Eg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class cx extends Eg{}class px extends Eg{}class Cg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class hx extends Cg{}class fx extends Cg{}class Tg extends Q{}class mx extends Tg{}class gx extends Tg{async _call(e){return new Me(await super._call(e))}}class Ag extends Q{}class _x extends Ag{}class yx extends Ag{async _call(e){return new Me(await super._call(e))}}class wx extends Q{}class bx extends wx{async _call(e){return new Mk(await super._call(e))}}class Ig extends Q{}class vx extends Ig{}class $x extends Ig{async _call(e){return new Me(await super._call(e))}}class Mg extends Q{}class xx extends Mg{}class Sx extends Mg{async _call(e){return new Me(await super._call(e))}}class Og extends Q{}class kx extends Og{}class Ex extends Og{}class zg extends Q{}class Cx extends zg{}class Tx extends zg{}class Pg extends Q{}class Ax extends Pg{}class Ix extends Pg{async _call(e){return new Me(await super._call(e))}}class nl extends Q{}class Mx extends nl{}class Ox extends nl{async _call(e){return new Rg(await super._call(e))}}class zx extends nl{async _call(e){return new Px(await super._call(e))}}class Rg extends Gt{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class Px extends Gt{constructor({logits:e,pred_boxes:r,pred_masks:n}){super(),this.logits=e,this.pred_boxes=r,this.pred_masks=n}}class Bg extends Q{}class Rx extends Bg{}class Bx extends Bg{async _call(e){return new Dx(await super._call(e))}}class Dx extends Gt{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class Dg extends Q{}class Nx extends Dg{}class Fx extends Dg{async _call(e){return new Lx(await super._call(e))}}class Lx extends Rg{}class Ng extends Q{}class Ux extends Ng{}class Wx extends Ng{async _call(e){return new Me(await super._call(e))}}class Fg extends Q{}class Vx extends Fg{}class Gx extends Fg{async _call(e){return new Me(await super._call(e))}}class Lg extends Q{}class Hx extends Lg{}class jx extends Lg{async _call(e){return new Me(await super._call(e))}}class Ug extends Q{}class qx extends Ug{}class Kx extends Ug{}class Wg extends Q{}class Yx extends Wg{}class Xx extends Wg{}class Qx extends Q{}class Zx extends Qx{}class Vg extends Q{}class Jx extends Vg{}class eS extends Vg{}class tS extends Q{}class rS extends tS{}class Gg extends Q{}class nS extends Gg{}class aS extends Gg{async _call(e){return new Me(await super._call(e))}}class Hg extends Q{}class iS extends Hg{}class sS extends Hg{async _call(e){return new Me(await super._call(e))}}class jg extends Q{}class oS extends jg{}class lS extends jg{async _call(e){return new Me(await super._call(e))}}class qg extends Q{}class uS extends qg{}class dS extends qg{async _call(e){return new cS(await super._call(e))}}class cS extends Gt{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class pS extends Q{}class hS extends pS{async get_image_embeddings({pixel_values:e}){return await Rn(this,{pixel_values:e})}async forward(e){if((!e.image_embeddings||!e.image_positional_embeddings)&&(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const n=e.input_points.dims.slice(0,-1),a=n.reduce((s,i)=>s*i,1);e.input_labels=new pe("int64",new BigInt64Array(a).fill(1n),n)}const r={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(r.input_points=e.input_points),e.input_labels&&(r.input_labels=e.input_labels),e.input_boxes&&(r.input_boxes=e.input_boxes),await Lr(this.sessions.prompt_encoder_mask_decoder,r)}async _call(e){return new fS(await super._call(e))}}class fS extends Gt{constructor({iou_scores:e,pred_masks:r}){super(),this.iou_scores=e,this.pred_masks=r}}class Kg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class mS extends Kg{}class gS extends Kg{}class Yg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class _S extends Yg{}class yS extends Yg{}class ln extends Q{}class wS extends ln{}class bS extends ln{async _call(e){return new Bn(await super._call(e))}}class vS extends ln{async _call(e){return new Me(await super._call(e))}}class $S extends ln{async _call(e){return new wt(await super._call(e))}}class Xg extends Q{}class xS extends Xg{}class SS extends Xg{async _call(e){return new wt(await super._call(e))}}class kS extends Q{}class ES extends kS{}class al extends Q{}class CS extends al{}class TS extends al{async _call(e){return new Bn(await super._call(e))}}class AS extends al{async _call(e){return new Me(await super._call(e))}}class Xi extends Q{}class IS extends Xi{}class MS extends Xi{async _call(e){return new Bn(await super._call(e))}}class OS extends Xi{async _call(e){return new Me(await super._call(e))}}class zS extends Xi{async _call(e){return new wt(await super._call(e))}}class il extends Q{}class PS extends il{}class RS extends il{async _call(e){return new Bn(await super._call(e))}}class BS extends il{async _call(e){return new Me(await super._call(e))}}class DS extends ln{}class NS extends ln{async _call(e){return new Bn(await super._call(e))}}class FS extends ln{async _call(e){return new Me(await super._call(e))}}class Pa extends Q{}class LS extends Pa{}class US extends Pa{async _call(e){return new Bn(await super._call(e))}}class WS extends Pa{async _call(e){return new Me(await super._call(e))}}class VS extends Pa{async _call(e){return new Ik(await super._call(e))}}class GS extends Pa{async _call(e){return new wt(await super._call(e))}}class Qg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class HS extends Qg{}class jS extends Qg{async generate_speech(e,r,{threshold:n=.5,minlenratio:a=0,maxlenratio:s=20,vocoder:i=null}={}){const o={input_ids:e},{encoder_outputs:l,encoder_attention_mask:u}=await Rn(this,o),d=l.dims[1]/this.config.reduction_factor,h=Math.floor(d*s),f=Math.floor(d*a),g=this.config.num_mel_bins;let p=[],w=null,v=null,S=0;for(;;){++S;const T=Qm(!!v);let A;v?A=v.output_sequence_out:A=new pe("float32",new Float32Array(g),[1,1,g]);let z={use_cache_branch:T,output_sequence:A,encoder_attention_mask:u,speaker_embeddings:r,encoder_hidden_states:l};this.addPastKeyValues(z,w),v=await Lr(this.sessions.decoder_model_merged,z),w=this.getPastKeyValues(v,w);const{prob:R,spectrum:G}=v;if(p.push(G),S>=f&&(Array.from(R.data).filter(j=>j>=n).length>0||S>=h))break}const $=Ut(p),{waveform:E}=await Lr(i.sessions.model,{spectrogram:$});return{spectrogram:$,waveform:E}}}class qS extends Q{constructor(){super(...arguments);B(this,"main_input_name","spectrogram")}}class KS extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class YS extends KS{}class Zg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class XS extends Zg{}class QS extends Zg{}class Jg extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class ZS extends Jg{}class JS extends Jg{}class e_ extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class ek extends e_{}class tk extends e_{}class sl extends Q{}class rk extends sl{}class nk extends sl{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="text_model"),super.from_pretrained(e,r)}}class ak extends sl{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="audio_model"),super.from_pretrained(e,r)}}class ik extends Q{}class t_ extends ik{async _call(e){return new Ok(await super._call(e))}}class r_ extends Q{}class sk extends r_{}class ok extends r_{}class n_ extends Q{constructor(e,r,n){super(e,r),this.generation_config=n}}class lk extends n_{}class uk extends n_{}class a_ extends Q{}class dk extends a_{}class ck extends a_{async _call(e){return new Me(await super._call(e))}}class i_ extends Q{constructor(r,n,a){super(r,n);B(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]);this.generation_config=a}_apply_and_filter_by_delay_pattern_mask(r){const[n,a]=r.dims,s=this.config.decoder.num_codebooks,i=a-s;let o=0;for(let d=0;d<r.size;++d){if(r.data[d]===this.config.decoder.pad_token_id)continue;const h=d%a,f=Math.floor(d/a)%s,g=h-f;g>0&&g<=i&&(r.data[o++]=r.data[d])}const l=Math.floor(n/s),u=o/(l*s);return new pe(r.type,r.data.slice(0,o),[l,s,u])}prepare_inputs_for_generation(r,n,a){let s=structuredClone(r);for(let o=0;o<s.length;++o)for(let l=0;l<s[o].length;++l)o%this.config.decoder.num_codebooks>=l&&(s[o][l]=BigInt(this.config.decoder.pad_token_id));return a.guidance_scale!==null&&a.guidance_scale>1&&(s=s.concat(s)),super.prepare_inputs_for_generation(s,n,a)}async generate(r){const n=await super.generate(r),a=this._apply_and_filter_by_delay_pattern_mask(n).unsqueeze_(0),{audio_values:s}=await Lr(this.sessions.encodec_decode,{audio_codes:a});return s}}class s_ extends Q{}class pk extends s_{}class hk extends s_{async _call(e){return new Me(await super._call(e))}}class o_ extends Q{}class fk extends o_{}class mk extends o_{async _call(e){return new Me(await super._call(e))}}class l_ extends Q{}class gk extends l_{}class _k extends l_{async _call(e){return new Me(await super._call(e))}}class u_ extends Q{}class yk extends u_{}class wk extends u_{async _call(e){return new Me(await super._call(e))}}class Qe{static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:h=null,session_options:f={}}={}){let g={progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:h,session_options:f};if(g.config=await Hm.from_pretrained(e,g),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let p of this.MODEL_CLASS_MAPPINGS){const w=p.get(g.config.model_type);if(w)return await w[1].from_pretrained(e,g)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${g.config.model_type}", attempting to construct from base class.`),await Q.from_pretrained(e,g);throw Error(`Unsupported model type: ${g.config.model_type}`)}}B(Qe,"MODEL_CLASS_MAPPINGS",null),B(Qe,"BASE_IF_FAIL",!1);const bk=new Map([["bert",["BertModel",O1]],["nomic_bert",["NomicBertModel",N1]],["roformer",["RoFormerModel",F1]],["electra",["ElectraModel",Y1]],["esm",["EsmModel",b2]],["convbert",["ConvBertModel",G1]],["camembert",["CamembertModel",e2]],["deberta",["DebertaModel",i2]],["deberta-v2",["DebertaV2Model",d2]],["mpnet",["MPNetModel",T2]],["albert",["AlbertModel",D2]],["distilbert",["DistilBertModel",m2]],["roberta",["RobertaModel",a$]],["xlm",["XLMModel",u$]],["xlm-roberta",["XLMRobertaModel",f$]],["clap",["ClapModel",rk]],["clip",["CLIPModel",C$]],["clipseg",["CLIPSegModel",R$]],["chinese_clip",["ChineseCLIPModel",P$]],["siglip",["SiglipModel",I$]],["mobilebert",["MobileBertModel",S2]],["squeezebert",["SqueezeBertModel",z2]],["wav2vec2",["Wav2Vec2Model",wS]],["wav2vec2-bert",["Wav2Vec2BertModel",PS]],["unispeech",["UniSpeechModel",CS]],["unispeech-sat",["UniSpeechSatModel",IS]],["hubert",["HubertModel",DS]],["wavlm",["WavLMModel",LS]],["audio-spectrogram-transformer",["ASTModel",w$]],["vits",["VitsModel",t_]],["pyannote",["PyAnnoteModel",xS]],["wespeaker-resnet",["WeSpeakerResNetModel",ES]],["detr",["DetrModel",Mx]],["rt_detr",["RTDetrModel",Rx]],["table-transformer",["TableTransformerModel",Nx]],["vit",["ViTModel",mx]],["fastvit",["FastViTModel",_x]],["mobilevit",["MobileViTModel",vx]],["mobilevitv2",["MobileViTV2Model",xx]],["owlvit",["OwlViTModel",kx]],["owlv2",["Owlv2Model",Cx]],["beit",["BeitModel",Ax]],["deit",["DeiTModel",Ux]],["convnext",["ConvNextModel",nS]],["convnextv2",["ConvNextV2Model",iS]],["dinov2",["Dinov2Model",oS]],["resnet",["ResNetModel",Vx]],["swin",["SwinModel",Hx]],["swin2sr",["Swin2SRModel",qx]],["donut-swin",["DonutSwinModel",rS]],["yolos",["YolosModel",uS]],["dpt",["DPTModel",Yx]],["glpn",["GLPNModel",Jx]],["hifigan",["SpeechT5HifiGan",qS]],["efficientnet",["EfficientNetModel",dk]],["mobilenet_v1",["MobileNetV1Model",pk]],["mobilenet_v2",["MobileNetV2Model",fk]],["mobilenet_v3",["MobileNetV3Model",gk]],["mobilenet_v4",["MobileNetV4Model",yk]]]),vk=new Map([["t5",["T5Model",U2]],["longt5",["LongT5Model",V2]],["mt5",["MT5Model",H2]],["bart",["BartModel",q2]],["mbart",["MBartModel",X2]],["marian",["MarianModel",mS]],["whisper",["WhisperModel",v$]],["m2m_100",["M2M100Model",_S]],["blenderbot",["BlenderbotModel",e$]],["blenderbot-small",["BlenderbotSmallModel",r$]]]),$k=new Map([["bloom",["BloomModel",ux]],["gpt2",["GPT2Model",D$]],["gptj",["GPTJModel",V$]],["gpt_bigcode",["GPTBigCodeModel",H$]],["gpt_neo",["GPTNeoModel",F$]],["gpt_neox",["GPTNeoXModel",U$]],["codegen",["CodeGenModel",q$]],["llama",["LlamaModel",Y$]],["cohere",["CohereModel",Q$]],["gemma",["GemmaModel",J$]],["openelm",["OpenELMModel",tx]],["qwen2",["Qwen2Model",nx]],["phi",["PhiModel",ix]],["phi3",["Phi3Model",ox]],["mpt",["MptModel",cx]],["opt",["OPTModel",hx]],["mistral",["MistralModel",XS]],["starcoder2",["Starcoder2Model",ZS]],["falcon",["FalconModel",ek]],["stablelm",["StableLmModel",lk]]]),ol=new Map([["speecht5",["SpeechT5ForSpeechToText",HS]],["whisper",["WhisperForConditionalGeneration",$$]]]),d_=new Map([["speecht5",["SpeechT5ForTextToSpeech",jS]]]),c_=new Map([["vits",["VitsModel",t_]],["musicgen",["MusicgenForConditionalGeneration",i_]]]),p_=new Map([["bert",["BertForSequenceClassification",P1]],["roformer",["RoFormerForSequenceClassification",U1]],["electra",["ElectraForSequenceClassification",Q1]],["esm",["EsmForSequenceClassification",$2]],["convbert",["ConvBertForSequenceClassification",j1]],["camembert",["CamembertForSequenceClassification",r2]],["deberta",["DebertaForSequenceClassification",o2]],["deberta-v2",["DebertaV2ForSequenceClassification",p2]],["mpnet",["MPNetForSequenceClassification",I2]],["albert",["AlbertForSequenceClassification",N2]],["distilbert",["DistilBertForSequenceClassification",g2]],["roberta",["RobertaForSequenceClassification",s$]],["xlm",["XLMForSequenceClassification",c$]],["xlm-roberta",["XLMRobertaForSequenceClassification",g$]],["bart",["BartForSequenceClassification",Y2]],["mbart",["MBartForSequenceClassification",Z2]],["mobilebert",["MobileBertForSequenceClassification",E2]],["squeezebert",["SqueezeBertForSequenceClassification",R2]]]),h_=new Map([["bert",["BertForTokenClassification",R1]],["roformer",["RoFormerForTokenClassification",W1]],["electra",["ElectraForTokenClassification",Z1]],["esm",["EsmForTokenClassification",x2]],["convbert",["ConvBertForTokenClassification",q1]],["camembert",["CamembertForTokenClassification",n2]],["deberta",["DebertaForTokenClassification",l2]],["deberta-v2",["DebertaV2ForTokenClassification",h2]],["mpnet",["MPNetForTokenClassification",M2]],["distilbert",["DistilBertForTokenClassification",_2]],["roberta",["RobertaForTokenClassification",o$]],["xlm",["XLMForTokenClassification",p$]],["xlm-roberta",["XLMRobertaForTokenClassification",_$]]]),ll=new Map([["t5",["T5ForConditionalGeneration",W2]],["longt5",["LongT5ForConditionalGeneration",G2]],["mt5",["MT5ForConditionalGeneration",j2]],["bart",["BartForConditionalGeneration",K2]],["mbart",["MBartForConditionalGeneration",Q2]],["marian",["MarianMTModel",gS]],["m2m_100",["M2M100ForConditionalGeneration",yS]],["blenderbot",["BlenderbotForConditionalGeneration",t$]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",n$]]]),ul=new Map([["bloom",["BloomForCausalLM",dx]],["gpt2",["GPT2LMHeadModel",N$]],["gptj",["GPTJForCausalLM",G$]],["gpt_bigcode",["GPTBigCodeForCausalLM",j$]],["gpt_neo",["GPTNeoForCausalLM",L$]],["gpt_neox",["GPTNeoXForCausalLM",W$]],["codegen",["CodeGenForCausalLM",K$]],["llama",["LlamaForCausalLM",X$]],["cohere",["CohereForCausalLM",Z$]],["gemma",["GemmaForCausalLM",ex]],["openelm",["OpenELMForCausalLM",rx]],["qwen2",["Qwen2ForCausalLM",ax]],["phi",["PhiForCausalLM",sx]],["phi3",["Phi3ForCausalLM",lx]],["mpt",["MptForCausalLM",px]],["opt",["OPTForCausalLM",fx]],["mbart",["MBartForCausalLM",J2]],["mistral",["MistralForCausalLM",QS]],["starcoder2",["Starcoder2ForCausalLM",JS]],["falcon",["FalconForCausalLM",tk]],["trocr",["TrOCRForCausalLM",YS]],["stablelm",["StableLmForCausalLM",uk]]]),f_=new Map([["bert",["BertForMaskedLM",z1]],["roformer",["RoFormerForMaskedLM",L1]],["electra",["ElectraForMaskedLM",X1]],["esm",["EsmForMaskedLM",v2]],["convbert",["ConvBertForMaskedLM",H1]],["camembert",["CamembertForMaskedLM",t2]],["deberta",["DebertaForMaskedLM",s2]],["deberta-v2",["DebertaV2ForMaskedLM",c2]],["mpnet",["MPNetForMaskedLM",A2]],["albert",["AlbertForMaskedLM",L2]],["distilbert",["DistilBertForMaskedLM",w2]],["roberta",["RobertaForMaskedLM",i$]],["xlm",["XLMWithLMHeadModel",d$]],["xlm-roberta",["XLMRobertaForMaskedLM",m$]],["mobilebert",["MobileBertForMaskedLM",k2]],["squeezebert",["SqueezeBertForMaskedLM",P2]]]),m_=new Map([["bert",["BertForQuestionAnswering",B1]],["roformer",["RoFormerForQuestionAnswering",V1]],["electra",["ElectraForQuestionAnswering",J1]],["convbert",["ConvBertForQuestionAnswering",K1]],["camembert",["CamembertForQuestionAnswering",a2]],["deberta",["DebertaForQuestionAnswering",u2]],["deberta-v2",["DebertaV2ForQuestionAnswering",f2]],["mpnet",["MPNetForQuestionAnswering",O2]],["albert",["AlbertForQuestionAnswering",F2]],["distilbert",["DistilBertForQuestionAnswering",y2]],["roberta",["RobertaForQuestionAnswering",l$]],["xlm",["XLMForQuestionAnswering",h$]],["xlm-roberta",["XLMRobertaForQuestionAnswering",y$]],["mobilebert",["MobileBertForQuestionAnswering",C2]],["squeezebert",["SqueezeBertForQuestionAnswering",B2]]]),dl=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",lg]]]),xk=new Map([["llava",["LlavaForConditionalGeneration",ug]],["moondream1",["Moondream1ForConditionalGeneration",S$]],["florence2",["Florence2ForConditionalGeneration",E$]]]),Sk=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",lg]]]),g_=new Map([["vit",["ViTForImageClassification",gx]],["fastvit",["FastViTForImageClassification",yx]],["mobilevit",["MobileViTForImageClassification",$x]],["mobilevitv2",["MobileViTV2ForImageClassification",Sx]],["beit",["BeitForImageClassification",Ix]],["deit",["DeiTForImageClassification",Wx]],["convnext",["ConvNextForImageClassification",aS]],["convnextv2",["ConvNextV2ForImageClassification",sS]],["dinov2",["Dinov2ForImageClassification",lS]],["resnet",["ResNetForImageClassification",Gx]],["swin",["SwinForImageClassification",jx]],["segformer",["SegformerForImageClassification",sk]],["efficientnet",["EfficientNetForImageClassification",ck]],["mobilenet_v1",["MobileNetV1ForImageClassification",hk]],["mobilenet_v2",["MobileNetV2ForImageClassification",mk]],["mobilenet_v3",["MobileNetV3ForImageClassification",_k]],["mobilenet_v4",["MobileNetV4ForImageClassification",wk]]]),__=new Map([["detr",["DetrForObjectDetection",Ox]],["rt_detr",["RTDetrForObjectDetection",Bx]],["table-transformer",["TableTransformerForObjectDetection",Fx]],["yolos",["YolosForObjectDetection",dS]]]),y_=new Map([["owlvit",["OwlViTForObjectDetection",Ex]],["owlv2",["Owlv2ForObjectDetection",Tx]]]),w_=new Map([["detr",["DetrForSegmentation",zx]],["clipseg",["CLIPSegForImageSegmentation",B$]]]),b_=new Map([["segformer",["SegformerForSemanticSegmentation",ok]]]),kk=new Map([["sam",["SamModel",hS]]]),v_=new Map([["wav2vec2",["Wav2Vec2ForCTC",bS]],["wav2vec2-bert",["Wav2Vec2BertForCTC",RS]],["unispeech",["UniSpeechForCTC",TS]],["unispeech-sat",["UniSpeechSatForCTC",MS]],["wavlm",["WavLMForCTC",US]],["hubert",["HubertForCTC",NS]]]),$_=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",vS]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",BS]],["unispeech",["UniSpeechForSequenceClassification",AS]],["unispeech-sat",["UniSpeechSatForSequenceClassification",OS]],["wavlm",["WavLMForSequenceClassification",WS]],["hubert",["HubertForSequenceClassification",FS]],["audio-spectrogram-transformer",["ASTForAudioClassification",b$]]]),Ek=new Map([["wavlm",["WavLMForXVector",VS]]]),Ck=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",zS]],["wavlm",["WavLMForAudioFrameClassification",GS]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",$S]],["pyannote",["PyAnnoteForAudioFrameClassification",SS]]]),Tk=new Map([["vitmatte",["VitMatteForImageMatting",bx]]]),x_=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Kx]]]),S_=new Map([["dpt",["DPTForDepthEstimation",Xx]],["depth_anything",["DepthAnythingForDepthEstimation",Zx]],["glpn",["GLPNForDepthEstimation",eS]]]),k_=new Map([["clip",["CLIPVisionModelWithProjection",A$]],["siglip",["SiglipVisionModel",O$]]]),E_=[[bk,$e.EncoderOnly],[vk,$e.EncoderDecoder],[$k,$e.DecoderOnly],[p_,$e.EncoderOnly],[h_,$e.EncoderOnly],[ll,$e.Seq2Seq],[ol,$e.Seq2Seq],[ul,$e.DecoderOnly],[f_,$e.EncoderOnly],[m_,$e.EncoderOnly],[dl,$e.Vision2Seq],[xk,$e.ImageTextToText],[g_,$e.EncoderOnly],[w_,$e.EncoderOnly],[b_,$e.EncoderOnly],[Tk,$e.EncoderOnly],[x_,$e.EncoderOnly],[S_,$e.EncoderOnly],[__,$e.EncoderOnly],[y_,$e.EncoderOnly],[kk,$e.MaskGeneration],[v_,$e.EncoderOnly],[$_,$e.EncoderOnly],[d_,$e.Seq2Seq],[c_,$e.EncoderOnly],[Ek,$e.EncoderOnly],[Ck,$e.EncoderOnly],[k_,$e.EncoderOnly]];for(const[t,e]of E_)for(const[r,n]of t.values())Wi.set(r,e),va.set(n,r),Ym.set(r,n);const Ak=[["MusicgenForConditionalGeneration",i_,$e.Musicgen],["CLIPTextModelWithProjection",T$,$e.EncoderOnly],["SiglipTextModel",M$,$e.EncoderOnly],["ClapTextModelWithProjection",nk,$e.EncoderOnly],["ClapAudioModelWithProjection",ak,$e.EncoderOnly]];for(const[t,e,r]of Ak)Wi.set(t,r),va.set(e,t),Ym.set(t,e);class un extends Qe{}B(un,"MODEL_CLASS_MAPPINGS",E_.map(e=>e[0])),B(un,"BASE_IF_FAIL",!0);class cl extends Qe{}B(cl,"MODEL_CLASS_MAPPINGS",[p_]);class C_ extends Qe{}B(C_,"MODEL_CLASS_MAPPINGS",[h_]);class Qi extends Qe{}B(Qi,"MODEL_CLASS_MAPPINGS",[ll]);class T_ extends Qe{}B(T_,"MODEL_CLASS_MAPPINGS",[ol]);class A_ extends Qe{}B(A_,"MODEL_CLASS_MAPPINGS",[d_]);class I_ extends Qe{}B(I_,"MODEL_CLASS_MAPPINGS",[c_]);class M_ extends Qe{}B(M_,"MODEL_CLASS_MAPPINGS",[ul]);class O_ extends Qe{}B(O_,"MODEL_CLASS_MAPPINGS",[f_]);class z_ extends Qe{}B(z_,"MODEL_CLASS_MAPPINGS",[m_]);class P_ extends Qe{}B(P_,"MODEL_CLASS_MAPPINGS",[dl]);class R_ extends Qe{}B(R_,"MODEL_CLASS_MAPPINGS",[g_]);class B_ extends Qe{}B(B_,"MODEL_CLASS_MAPPINGS",[w_]);class D_ extends Qe{}B(D_,"MODEL_CLASS_MAPPINGS",[b_]);class N_ extends Qe{}B(N_,"MODEL_CLASS_MAPPINGS",[__]);class F_ extends Qe{}B(F_,"MODEL_CLASS_MAPPINGS",[y_]);class L_ extends Qe{}B(L_,"MODEL_CLASS_MAPPINGS",[v_]);class U_ extends Qe{}B(U_,"MODEL_CLASS_MAPPINGS",[$_]);class W_ extends Qe{}B(W_,"MODEL_CLASS_MAPPINGS",[Sk]);class V_ extends Qe{}B(V_,"MODEL_CLASS_MAPPINGS",[x_]);class G_ extends Qe{}B(G_,"MODEL_CLASS_MAPPINGS",[S_]);class H_ extends Qe{}B(H_,"MODEL_CLASS_MAPPINGS",[k_]);class Me extends Gt{constructor({logits:e}){super(),this.logits=e}}class Ik extends Gt{constructor({logits:e,embeddings:r}){super(),this.logits=e,this.embeddings=r}}class wt extends Gt{constructor({logits:e}){super(),this.logits=e}}class $t extends Gt{constructor({logits:e}){super(),this.logits=e}}class At extends Gt{constructor({start_logits:e,end_logits:r}){super(),this.start_logits=e,this.end_logits=r}}class Bn extends Gt{constructor({logits:e}){super(),this.logits=e}}class Mk extends Gt{constructor({alphas:e}){super(),this.alphas=e}}class Ok extends Gt{constructor({waveform:e,spectrogram:r}){super(),this.waveform=e,this.spectrogram=r}}const Zt=typeof self<"u",zk=Zt&&self.constructor.name==="DedicatedWorkerGlobalScope";let dn,j_,Ur;if(Zt)dn=(t,e)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(t,e)},Ur=self.createImageBitmap,j_=self.ImageData;else if(Ve)Ur=async t=>{const r=(await t.metadata()).channels,{data:n,info:a}=await t.rotate().raw().toBuffer({resolveWithObject:!0}),s=new It(new Uint8ClampedArray(n),a.width,a.height,a.channels);return r!==void 0&&r!==a.channels&&s.convert(r),s};else throw new Error("Unable to load image processing library.");const Pk={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},Rk=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class It{constructor(e,r,n,a){this.data=e,this.width=r,this.height=n,this.channels=a}get size(){return[this.width,this.height]}static async read(e){if(e instanceof It)return e;if(typeof e=="string"||e instanceof URL)return await this.fromURL(e);throw new Error(`Unsupported input type: ${typeof e}`)}static fromCanvas(e){if(!Zt)throw new Error("fromCanvas() is only supported in browser environments.");const n=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new It(n,e.width,e.height,4)}static async fromURL(e){const r=await ii(e);if(r.status!==200)throw new Error(`Unable to read image from "${e}" (${r.status} ${r.statusText})`);const n=await r.blob();return this.fromBlob(n)}static async fromBlob(e){if(Zt){const r=await Ur(e),n=dn(r.width,r.height).getContext("2d");return n.drawImage(r,0,0),new this(n.getImageData(0,0,r.width,r.height).data,r.width,r.height,4)}else{const r=Ve(await e.arrayBuffer());return await Ur(r)}}static fromTensor(e,r="CHW"){if(e.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if(r==="CHW")e=e.transpose(1,2,0);else if(r!=="HWC")throw new Error(`Unsupported channel format: ${r}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new It(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let r=0,n=0;r<this.data.length;r+=this.channels){const a=this.data[r],s=this.data[r+1],i=this.data[r+2];e[n++]=Math.round(.2989*a+.587*s+.114*i)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let r=0,n=0;r<this.data.length;++r)e[n++]=this.data[r],e[n++]=this.data[r],e[n++]=this.data[r];break;case 4:for(let r=0,n=0;r<this.data.length;r+=4)e[n++]=this.data[r],e[n++]=this.data[r+1],e[n++]=this.data[r+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let r=0,n=0;r<this.data.length;++r)e[n++]=this.data[r],e[n++]=this.data[r],e[n++]=this.data[r],e[n++]=255;break;case 3:for(let r=0,n=0;r<this.data.length;r+=3)e[n++]=this.data[r],e[n++]=this.data[r+1],e[n++]=this.data[r+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,r,{resample:n=2}={}){let a=Pk[n]??n;if(Zt){const s=this.channels,i=this.toCanvas(),o=dn(e,r).getContext("2d");return o.drawImage(i,0,0,e,r),new It(o.getImageData(0,0,e,r).data,e,r,4).convert(s)}else{let s=this.toSharp();switch(a){case"box":case"hamming":(a==="box"||a==="hamming")&&(console.warn(`Resampling method ${a} is not yet supported. Using bilinear instead.`),a="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([e/this.width,0,0,r/this.height],{interpolator:a});break;case"lanczos":s=s.resize({width:e,height:r,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${a} is not supported.`)}return await Ur(s)}}async pad([e,r,n,a]){if(e=Math.max(e,0),r=Math.max(r,0),n=Math.max(n,0),a=Math.max(a,0),e===0&&r===0&&n===0&&a===0)return this;if(Zt){const s=this.channels,i=this.toCanvas(),o=this.width+e+r,l=this.height+n+a,u=dn(o,l).getContext("2d");return u.drawImage(i,0,0,this.width,this.height,e,n,o,l),new It(u.getImageData(0,0,o,l).data,o,l,4).convert(s)}else{const s=this.toSharp().extend({left:e,right:r,top:n,bottom:a});return await Ur(s)}}async crop([e,r,n,a]){if(e=Math.max(e,0),r=Math.max(r,0),n=Math.min(n,this.width-1),a=Math.min(a,this.height-1),e===0&&r===0&&n===this.width-1&&a===this.height-1)return this;const s=n-e+1,i=a-r+1;if(Zt){const o=this.channels,l=this.toCanvas(),u=dn(s,i).getContext("2d");return u.drawImage(l,e,r,s,i,0,0,s,i),new It(u.getImageData(0,0,s,i).data,s,i,4).convert(o)}else{const o=this.toSharp().extract({left:e,top:r,width:s,height:i});return await Ur(o)}}async center_crop(e,r){if(this.width===e&&this.height===r)return this;const n=(this.width-e)/2,a=(this.height-r)/2;if(Zt){const s=this.channels,i=this.toCanvas(),o=dn(e,r).getContext("2d");let l=0,u=0,d=0,h=0;return n>=0?l=n:d=-n,a>=0?u=a:h=-a,o.drawImage(i,l,u,e,r,d,h,e,r),new It(o.getImageData(0,0,e,r).data,e,r,4).convert(s)}else{let s=this.toSharp();if(n>=0&&a>=0)s=s.extract({left:Math.floor(n),top:Math.floor(a),width:e,height:r});else if(n<=0&&a<=0){const i=Math.floor(-a),o=Math.floor(-n);s=s.extend({top:i,left:o,right:e-this.width-o,bottom:r-this.height-i})}else{let i=[0,0],o=0;a<0?(i[0]=Math.floor(-a),i[1]=r-this.height-i[0]):o=Math.floor(a);let l=[0,0],u=0;n<0?(l[0]=Math.floor(-n),l[1]=e-this.width-l[0]):u=Math.floor(n),s=s.extend({top:i[0],bottom:i[1],left:l[0],right:l[1]}).extract({left:u,top:o,width:e,height:r})}return await Ur(s)}}async toBlob(e="image/png",r=1){if(!Zt)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:e,quality:r})}toTensor(e="CHW"){let r=new pe("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(e!=="HWC")if(e==="CHW")r=r.permute(2,0,1);else throw new Error(`Unsupported channel format: ${e}`);return r}toCanvas(){if(!Zt)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),r=dn(e.width,e.height),n=new j_(e.data,e.width,e.height);return r.getContext("2d").putImageData(n,0,0),r}_update(e,r,n,a=null){return this.data=e,this.width=r,this.height=n,a!==null&&(this.channels=a),this}clone(){return new It(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(Zt){if(zk)throw new Error("Unable to save an image from a Web Worker.");const r=e.split(".").pop().toLowerCase(),n=Rk.get(r)??"image/png",a=await this.toBlob(n),s=URL.createObjectURL(a),i=document.createElement("a");i.href=s,i.download=e,i.click(),i.remove()}else{if(kt.useFS)return await this.toSharp().toFile(e);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(Zt)throw new Error("toSharp() is only supported in server-side environments.");return Ve(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}async function Bk(t,e){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const r=await(await ii(t)).arrayBuffer(),n=new AudioContext({sampleRate:e});typeof e>"u"&&console.warn(`No sampling rate provided, using default of ${n.sampleRate}Hz.`);const a=await n.decodeAudioData(r);let s;if(a.numberOfChannels===2){const i=Math.sqrt(2),o=a.getChannelData(0),l=a.getChannelData(1);s=new Float32Array(o.length);for(let u=0;u<a.length;++u)s[u]=i*(o[u]+l[u])/2}else s=a.getChannelData(0);return s}function q_(t,e){if(t<1)return new Float64Array;if(t===1)return new Float64Array([1]);const r=1-e,n=2*Math.PI/(t-1),a=new Float64Array(t);for(let s=0;s<t;++s)a[s]=e-r*Math.cos(s*n);return a}function K_(t){return q_(t,.5)}function Dk(t){return q_(t,.54)}const Nk={htk:t=>2595*Math.log10(1+t/700),kaldi:t=>1127*Math.log(1+t/700),slaney:(t,e=1e3,r=15,n=27/Math.log(6.4))=>t>=e?r+Math.log(t/e)*n:3*t/200};function pl(t,e="htk"){const r=Nk[e];if(!r)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof t=="number"?r(t):t.map(n=>r(n))}const Fk={htk:t=>700*(10**(t/2595)-1),kaldi:t=>700*(Math.exp(t/1127)-1),slaney:(t,e=1e3,r=15,n=Math.log(6.4)/27)=>t>=r?e*Math.exp(n*(t-r)):200*t/3};function Lk(t,e="htk"){const r=Fk[e];if(!r)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof t=="number"?r(t):t.map(n=>r(n))}function Uk(t,e){const r=Float64Array.from({length:e.length-1},(i,o)=>e[o+1]-e[o]),n=Array.from({length:t.length},()=>new Array(e.length));for(let i=0;i<t.length;++i){const o=n[i];for(let l=0;l<e.length;++l)o[l]=e[l]-t[i]}const a=e.length-2,s=Array.from({length:a},()=>new Array(t.length));for(let i=0;i<t.length;++i){const o=n[i];for(let l=0;l<a;++l){const u=-o[l]/r[l],d=o[l+2]/r[l+1];s[l][i]=Math.max(0,Math.min(u,d))}}return s}function Y_(t,e,r){const n=(e-t)/(r-1);return Float64Array.from({length:r},(a,s)=>t+n*s)}function Dn(t,e,r,n,a,s=null,i="htk",o=!1){if(s!==null&&s!=="slaney")throw new Error('norm must be one of null or "slaney"');const l=pl(r,i),u=pl(n,i),d=Y_(l,u,e+2);let h=Lk(d,i),f;if(o){const p=a/(t*2);f=pl(Float64Array.from({length:t},(w,v)=>v*p),i),h=d}else f=Y_(0,Math.floor(a/2),t);const g=Uk(f,h);if(s!==null&&s==="slaney")for(let p=0;p<e;++p){const w=g[p],v=2/(h[p+2]-h[p]);for(let S=0;S<t;++S)w[S]*=v}return g}function Wk(t,e,r){const n=new t.constructor(t.length+e+r),a=t.length-1;for(let s=0;s<t.length;++s)n[e+s]=t[s];for(let s=1;s<=e;++s)n[e-s]=t[ni(s,a)];for(let s=1;s<=r;++s)n[a+e+s]=t[ni(a-s,a)];return n}function X_(t,e,r,n,a){if(r<=0)throw new Error("reference must be greater than zero");if(n<=0)throw new Error("min_value must be greater than zero");r=Math.max(n,r);const s=Math.log10(r);for(let i=0;i<t.length;++i)t[i]=e*Math.log10(Math.max(n,t[i])-s);if(a!==null){if(a<=0)throw new Error("db_range must be greater than zero");const i=Lt(t)[0]-a;for(let o=0;o<t.length;++o)t[o]=Math.max(t[o],i)}return t}function Vk(t,e=1,r=1e-5,n=null){return X_(t,20,e,r,n)}function Gk(t,e=1,r=1e-10,n=null){return X_(t,10,e,r,n)}async function Ra(t,e,r,n,{fft_length:a=null,power:s=1,center:i=!0,pad_mode:o="reflect",onesided:l=!0,preemphasis:u=null,mel_filters:d=null,mel_floor:h=1e-10,log_mel:f=null,reference:g=1,min_value:p=1e-10,db_range:w=null,remove_dc_offset:v=null,min_num_frames:S=null,max_num_frames:$=null,do_pad:E=!0,transpose:T=!1}={}){const A=e.length;if(a===null&&(a=r),r>a)throw Error(`frame_length (${r}) may not be larger than fft_length (${a})`);if(A!==r)throw new Error(`Length of the window (${A}) must equal frame_length (${r})`);if(n<=0)throw new Error("hop_length must be greater than zero");if(s===null&&d!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(i){if(o!=="reflect")throw new Error(`pad_mode="${o}" not implemented yet.`);const V=Math.floor((a-1)/2)+1;t=Wk(t,V,V)}let z=Math.floor(1+Math.floor((t.length-r)/n));S!==null&&z<S&&(z=S);const R=l?Math.floor(a/2)+1:a;let G=z,j=z;$!==null&&($>z?E&&(j=$):j=G=$);const q=new ny(a),ue=new Float64Array(a),re=new Float64Array(q.outputBufferSize),ee=new Float32Array(R*j);for(let V=0;V<G;++V){const K=V*n,de=Math.min(t.length-K,r);de!==r&&ue.fill(0,0,r);for(let ae=0;ae<de;++ae)ue[ae]=t[K+ae];if(v){let ae=0;for(let ie=0;ie<de;++ie)ae+=ue[ie];const D=ae/de;for(let ie=0;ie<de;++ie)ue[ie]-=D}if(u!==null){for(let ae=de-1;ae>=1;--ae)ue[ae]-=u*ue[ae-1];ue[0]*=1-u}for(let ae=0;ae<e.length;++ae)ue[ae]*=e[ae];q.realTransform(re,ue);for(let ae=0;ae<R;++ae){const D=ae<<1;ee[ae*j+V]=re[D]**2+re[D+1]**2}}if(s!==null&&s!==2){const V=2/s;for(let K=0;K<ee.length;++K)ee[K]**=V}const le=d.length;let N=await Vw(new pe("float32",d.flat(),[le,R]),new pe("float32",ee,[R,j]));T&&(N=N.transpose(1,0));const O=N.data;for(let V=0;V<O.length;++V)O[V]=Math.max(h,O[V]);if(s!==null&&f!==null){const V=Math.min(O.length,G*le);switch(f){case"log":for(let K=0;K<V;++K)O[K]=Math.log(O[K]);break;case"log10":for(let K=0;K<V;++K)O[K]=Math.log10(O[K]);break;case"dB":if(s===1)Vk(O,g,p,w);else if(s===2)Gk(O,g,p,w);else throw new Error(`Cannot use log_mel option '${f}' with power ${s}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${f}'`)}}return N}function Ba(t,e,{periodic:r=!0,frame_length:n=null,center:a=!0}={}){const s=r?t+1:t;let i;switch(e){case"boxcar":i=new Float64Array(s).fill(1);break;case"hann":case"hann_window":i=K_(s);break;case"hamming":i=Dk(s);break;case"povey":i=K_(s).map(o=>Math.pow(o,.85));break;default:throw new Error(`Unknown window type ${e}.`)}if(r&&(i=i.subarray(0,t)),n===null)return i;if(t>n)throw new Error(`Length of the window (${t}) may not be larger than frame_length (${n})`);return i}function Hk([t,e,r,n]){return[t-r/2,e-n/2,t+r/2,e+n/2]}function Zi(t,e=.5,r=null,n=!1){const a=t.logits,s=t.pred_boxes,[i,o,l]=a.dims;if(r!==null&&r.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let d=0;d<i;++d){let h=r!==null?r[d]:null,f={boxes:[],classes:[],scores:[]},g=a[d],p=s[d];for(let w=0;w<o;++w){let v=g[w],S=[],$;if(n){$=v.sigmoid().data;for(let E=0;E<$.length;++E)$[E]>e&&S.push(E)}else{let E=Lt(v.data)[1];if(E===l-1||($=_t(v.data),$[E]<e))continue;S.push(E)}for(const E of S){let T=p[w].data;T=Hk(T),h!==null&&(T=T.map((A,z)=>A*h[(z+1)%2])),f.boxes.push(T),f.classes.push(E),f.scores.push($[E])}}u.push(f)}return u}function cn(t,e){var r;if(!(t instanceof Float32Array||t instanceof Float64Array))throw new Error(`${e} expects input to be a Float32Array or a Float64Array, but got ${((r=t==null?void 0:t.constructor)==null?void 0:r.name)??typeof t} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function Q_(t,e,r=0,n=null){const a=t/e;let s=iy(a)*e;return n!==null&&s>n&&(s=Math.floor(a)*e),s<r&&(s=Math.ceil(a)*e),s}function hl([t,e],r){return[Math.max(Math.floor(t/r),1)*r,Math.max(Math.floor(e/r),1)*r]}class Cr extends vt{constructor(e){super(),this.config=e}}class Ge extends Cr{constructor(e){super(e),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(e,r,n=2){const a=e.height,s=e.width,i=r.height,o=r.width;let l=Math.min(a,i),u=Math.min(s,o);return l===a&&u===s?e:(a>s?u=Math.floor(s*l/a):s>a&&(l=Math.floor(a*u/s)),await e.resize(u,l,{resample:n}))}async crop_margin(e,r=200){const n=e.clone().grayscale(),a=Nl(n.data)[0],i=Lt(n.data)[0]-a;if(i===0)return e;const o=r/255;let l=n.width,u=n.height,d=0,h=0;const f=n.data;for(let g=0;g<n.height;++g){const p=g*n.width;for(let w=0;w<n.width;++w)(f[p+w]-a)/i<o&&(l=Math.min(l,w),u=Math.min(u,g),d=Math.max(d,w),h=Math.max(h,g))}return e=await e.crop([l,u,d,h]),e}pad_image(e,r,n,{mode:a="constant",center:s=!1,constant_values:i=0}={}){const[o,l,u]=r;let d,h;if(typeof n=="number"?(d=n,h=n):(d=n.width,h=n.height),d!==l||h!==o){const f=new Float32Array(d*h*u);if(Array.isArray(i))for(let w=0;w<f.length;++w)f[w]=i[w%u];else i!==0&&f.fill(i);const[g,p]=s?[Math.floor((d-l)/2),Math.floor((h-o)/2)]:[0,0];for(let w=0;w<o;++w){const v=(w+p)*d,S=w*l;for(let $=0;$<l;++$){const E=(v+$+g)*u,T=(S+$)*u;for(let A=0;A<u;++A)f[E+A]=e[T+A]}}if(a==="symmetric"){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const w=o-1,v=l-1;for(let S=0;S<h;++S){const $=S*d,E=ni(S,w)*l;for(let T=0;T<d;++T){if(S<o&&T<l)continue;const A=($+T)*u,z=(E+ni(T,v))*u;for(let R=0;R<u;++R)f[A+R]=e[z+R]}}}e=f,r=[h,d,u]}return[e,r]}rescale(e){for(let r=0;r<e.length;++r)e[r]=this.rescale_factor*e[r]}get_resize_output_image_size(e,r){const[n,a]=e.size;let s,i;if(this.do_thumbnail){const{height:o,width:l}=r;s=Math.min(o,l)}else Number.isInteger(r)?(s=r,i=this.config.max_size??s):r!==void 0&&(s=r.shortest_edge,i=r.longest_edge);if(s!==void 0||i!==void 0){const o=s===void 0?1:Math.max(s/n,s/a),l=n*o,u=a*o,d=i===void 0?1:Math.min(i/l,i/u);let h=Math.floor(Number((l*d).toFixed(2))),f=Math.floor(Number((u*d).toFixed(2)));return this.size_divisibility!==void 0&&([h,f]=hl([h,f],this.size_divisibility)),[h,f]}else if(r!==void 0&&r.width!==void 0&&r.height!==void 0){let o=r.width,l=r.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let u=l/a,d=o/n;Math.abs(1-d)<Math.abs(1-u)?u=d:d=u,l=Q_(u*a,this.config.ensure_multiple_of),o=Q_(d*n,this.config.ensure_multiple_of)}return[o,l]}else{if(this.size_divisibility!==void 0)return hl([n,a],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(r)}`)}}async resize(e){const[r,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(r,n,{resample:this.resample})}async preprocess(e,{do_normalize:r=null,do_pad:n=null,do_convert_rgb:a=null,do_convert_grayscale:s=null,do_flip_channel_order:i=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[o,l]=e.size;if(a??this.do_convert_rgb?e=e.rgb():s&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let g,p;Number.isInteger(this.crop_size)?(g=this.crop_size,p=this.crop_size):(g=this.crop_size.width,p=this.crop_size.height),e=await e.center_crop(g,p)}const u=[e.height,e.width];let d=Float32Array.from(e.data),h=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(d),r??this.do_normalize){let g=this.image_mean;Array.isArray(this.image_mean)||(g=new Array(e.channels).fill(g));let p=this.image_std;if(Array.isArray(this.image_std)||(p=new Array(e.channels).fill(g)),g.length!==e.channels||p.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${g.length}) and \`image_std\` (${p.length}) must match the number of channels in the image (${e.channels}).`);for(let w=0;w<d.length;w+=e.channels)for(let v=0;v<e.channels;++v)d[w+v]=(d[w+v]-g[v])/p[v]}if(n??this.do_pad){if(this.pad_size)[d,h]=this.pad_image(d,[e.height,e.width,e.channels],this.pad_size);else if(this.size_divisibility){const[g,p]=hl([h[1],h[0]],this.size_divisibility);[d,h]=this.pad_image(d,h,{width:g,height:p})}}if(i??this.do_flip_channel_order){if(h[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let g=0;g<d.length;g+=3){const p=d[g];d[g]=d[g+2],d[g+2]=p}}const f=new pe("float32",d,h).permute(2,0,1);return{original_size:[l,o],reshaped_input_size:u,pixel_values:f}}async _call(e,...r){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map(s=>this.preprocess(s)));return{pixel_values:fa(n.map(s=>s.pixel_values),0),original_sizes:n.map(s=>s.original_size),reshaped_input_sizes:n.map(s=>s.reshaped_input_size)}}}class jk extends Ge{post_process_semantic_segmentation(e,r=null){const n=e.logits,a=n.dims[0];if(r!==null&&r.length!==a)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const s=[];for(let i=0;i<a;++i){const o=r!==null?r[i]:null;let l=n[i];o!==null&&(l=Vo(l,o,"bilinear",!1));const[u,d]=o??l.dims.slice(-2),h=new pe("int32",new Int32Array(u*d),[u,d]),f=l[0].data,g=h.data;for(let S=1;S<l.dims[0];++S){const $=l[S].data;for(let E=0;E<$.length;++E)$[E]>f[E]&&(f[E]=$[E],g[E]=S)}const p=new Array(l.dims[0]),w=h.data;for(let S=0;S<w.length;++S){const $=w[S];p[$]=$}const v=p.filter(S=>S!==void 0);s.push({segmentation:h,labels:v})}return s}}class Z_ extends Ge{}class qk extends Z_{}class Kk extends Ge{}class Yk extends Ge{}class J_ extends Ge{}class Xk extends J_{}class Qk extends Ge{}class Zk extends Ge{}class e0 extends Ge{constructor(e){super(e),this.crop_pct=this.config.crop_pct??224/256}async resize(e){var n;const r=(n=this.size)==null?void 0:n.shortest_edge;if(r===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(r<384){const a=Math.floor(r/this.crop_pct),[s,i]=this.get_resize_output_image_size(e,{shortest_edge:a});e=await e.resize(s,i,{resample:this.resample}),e=await e.center_crop(r,r)}else e=await e.resize(r,r,{resample:this.resample});return e}}class Jk extends e0{}class e3 extends Ge{}class t3 extends Ge{}class r3 extends Ge{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(r=>r*r))}}class n3 extends Ge{}class a3 extends Ge{}class i3 extends Ge{}class s3 extends Ge{}class t0 extends Ge{}class o3 extends t0{}class r0 extends Ge{post_process_object_detection(...e){return Zi(...e)}}class l3 extends r0{}class u3 extends Ge{post_process_object_detection(...e){return Zi(...e)}}class d3 extends Ge{}class c3 extends Ge{}class n0 extends Ge{pad_image(e,r,n,a={}){const[s,i,o]=r;let l=this.image_mean;Array.isArray(this.image_mean)||(l=new Array(o).fill(l));let u=this.image_std;Array.isArray(u)||(u=new Array(o).fill(l));const d=l.map((h,f)=>-h/u[f]);return super.pad_image(e,r,n,{center:!0,constant_values:d,...a})}}class p3 extends n0{}class h3 extends Ge{async _call(e){const r=await super._call(e),n=[r.pixel_values.dims[0],64,64],a=new pe("int64",new BigInt64Array(n.reduce((s,i)=>s*i)).fill(1n),n);return{...r,pixel_mask:a}}post_process_object_detection(...e){return Zi(...e)}remove_low_and_no_objects(e,r,n,a){let s=[],i=[],o=[];for(let l=0;l<e.dims[0];++l){let u=e[l],d=r[l],h=Lt(u.data)[1];if(h===a)continue;let g=_t(u.data)[h];g>n&&(s.push(d),i.push(g),o.push(h))}return[s,i,o]}check_segment_validity(e,r,n,a=.5,s=.8){let i=[],o=0,l=0;const u=r[n].data;for(let h=0;h<e.length;++h)e[h]===n&&(i.push(h),++o),u[h]>=a&&++l;let d=o>0&&l>0;return d&&(d=o/l>s),[d,i]}compute_segments(e,r,n,a,s,i=null,o=null){let[l,u]=o??e[0].dims,d=new pe("int32",new Int32Array(l*u),[l,u]),h=[];if(o!==null)for(let v=0;v<e.length;++v)e[v]=Vo(e[v],o,"bilinear",!1);let f=new Int32Array(e[0].data.length),g=new Float32Array(e[0].data.length);for(let v=0;v<e.length;++v){let S=r[v];const $=e[v].data;for(let E=0;E<$.length;++E)$[E]*=S,$[E]>g[E]&&(f[E]=v,g[E]=$[E])}let p=0;const w=d.data;for(let v=0;v<n.length;++v){let S=n[v],[$,E]=this.check_segment_validity(f,e,v,a,s);if($){++p;for(let T of E)w[T]=p;h.push({id:p,label_id:S,score:r[v]})}}return[d,h]}post_process_panoptic_segmentation(e,r=.5,n=.5,a=.8,s=null,i=null){s===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),s=new Set);const o=e.logits,u=e.pred_masks.sigmoid();let[d,h,f]=o.dims;if(f-=1,i!==null&&i.length!==d)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let g=[];for(let p=0;p<d;++p){let w=i!==null?i[p]:null,v=o[p],S=u[p],[$,E,T]=this.remove_low_and_no_objects(v,S,r,f);if(T.length===0){let[R,G]=w??S.dims.slice(-2),j=new pe("int32",new Int32Array(R*G).fill(-1),[R,G]);g.push({segmentation:j,segments_info:[]});continue}let[A,z]=this.compute_segments($,E,T,n,a,s,w);g.push({segmentation:A,segments_info:z})}return g}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class f3 extends Ge{post_process_object_detection(...e){return Zi(...e)}}class m3 extends Ge{reshape_input_points(e,r,n,a=!1){e=structuredClone(e);let s=Bl(e);if(s.length===3)a||(s=[1,...s]),e=[e];else if(s.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let i=0;i<e.length;++i){let o=r[i],l=n[i],u=[l[0]/o[0],l[1]/o[1]];for(let d=0;d<e[i].length;++d)for(let h=0;h<e[i][d].length;++h)for(let f=0;f<e[i][d][h].length;++f)e[i][d][h][f]*=u[f%2]}return new pe("float32",Float32Array.from(e.flat(1/0)),s)}add_input_labels(e,r){let n=Bl(e);if(n.length===2)n=[1,...n],e=[e];else if(n.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some((a,s)=>a!==r.dims[s]))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new pe("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:r=null,input_labels:n=null,input_boxes:a=null}={}){const s=await super._call(e);if(r&&(s.input_points=this.reshape_input_points(r,s.original_sizes,s.reshaped_input_sizes)),n){if(!s.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");s.input_labels=this.add_input_labels(n,s.input_points)}return a&&(s.input_boxes=this.reshape_input_points(a,s.original_sizes,s.reshaped_input_sizes,!0)),s}async post_process_masks(e,r,n,{mask_threshold:a=0,binarize:s=!0,pad_size:i=null}={}){const o=[];i=i??this.pad_size;const l=[i.height,i.width];for(let u=0;u<r.length;++u){const d=r[u],h=n[u];let f=await wm(e[u],{mode:"bilinear",size:l});if(f=f.slice(null,null,[0,h[0]],[0,h[1]]),f=await wm(f,{mode:"bilinear",size:d}),s){const g=f.data,p=new Uint8Array(g.length);for(let w=0;w<g.length;++w)g[w]>a&&(p[w]=1);f=new pe("bool",p,f.dims)}o.push(f)}return o}generate_crop_boxes(e,r,{crop_n_layers:n=0,overlap_ratio:a=512/1500,points_per_crop:s=32,crop_n_points_downscale_factor:i=1}={}){}}class g3 extends Ge{pad_image(e,r,n,a={}){const[s,i,o]=r;return super.pad_image(e,r,{width:i+(n-i%n)%n,height:s+(n-s%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...a})}}class _3 extends Ge{async _call(e,r){Array.isArray(e)||(e=[e]),Array.isArray(r)||(r=[r]);const n=await Promise.all(e.map(i=>this.preprocess(i))),a=await Promise.all(r.map(i=>this.preprocess(i,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:fa(n.map((i,o)=>Ut([i.pixel_values,a[o].pixel_values],0)),0),original_sizes:n.map(i=>i.original_size),reshaped_input_sizes:n.map(i=>i.reshaped_input_size)}}}class y3 extends Cr{constructor(e){var r;super(e),(r=this.config).mel_filters??(r.mel_filters=Dn(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=Ba(this.config.n_fft,"hann")}async _extract_fbank_features(e){const r=await Ra(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),n=r.data,a=Lt(n)[0];for(let s=0;s<n.length;++s)n[s]=(Math.max(n[s],a-8)+4)/4;return r}async _call(e){cn(e,"WhisperFeatureExtractor");let r;return e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),r=e.slice(0,this.config.n_samples)):(r=new Float32Array(this.config.n_samples),r.set(e)),{input_features:(await this._extract_fbank_features(r)).unsqueeze_(0)}}}class w3 extends Cr{_zero_mean_unit_var_norm(e){const n=e.reduce((s,i)=>s+i,0)/e.length,a=e.reduce((s,i)=>s+(i-n)**2,0)/e.length;return e.map(s=>(s-n)/Math.sqrt(a+1e-7))}async _call(e){cn(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let r=e;this.config.do_normalize&&(r=this._zero_mean_unit_var_norm(r));const n=[1,r.length];return{input_values:new pe("float32",r,n),attention_mask:new pe("int64",new BigInt64Array(r.length).fill(1n),n)}}}class b3 extends Cr{constructor(e){super(e);const r=this.config.sampling_rate,n=Dn(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let a=0;a<n.length;++a)n[a].push(0);this.mel_filters=n,this.window=Ba(400,"povey",{periodic:!1})}async _extract_fbank_features(e,r){return e=e.map(n=>n*32768),Ra(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(e,{padding:r=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:a=!0,return_attention_mask:s=!0}={}){cn(e,"SeamlessM4TFeatureExtractor");let i=await this._extract_fbank_features(e,this.config.max_length);if(a){const[p,w]=i.dims,v=i.data;for(let S=0;S<w;++S){let $=0;for(let z=0;z<p;++z)$+=v[z*w+S];const E=$/p;let T=0;for(let z=0;z<p;++z)T+=(v[z*w+S]-E)**2;T/=p-1;const A=Math.sqrt(T+1e-7);for(let z=0;z<p;++z){const R=z*w+S;v[R]=(v[R]-E)/A}}}let o;if(r){const[p,w]=i.dims,v=i.data,S=p%n;if(S>0){const $=new Float32Array(w*(p+S));$.set(v),$.fill(this.config.padding_value,v.length);const E=p+S;i=new pe(i.type,$,[E,w]),s&&(o=new pe("int64",new BigInt64Array(E),[1,E]),o.data.fill(1n,0,p))}}const[l,u]=i.dims,d=this.config.stride;if(l%d!==0)throw new Error(`The number of frames (${l}) must be a multiple of the stride (${d}).`);const f=i.view(1,Math.floor(l/d),u*d),g={input_features:f};if(s){const p=f.dims[1],w=new BigInt64Array(p);if(o){const v=o.data;for(let S=1,$=0;S<l;S+=d,++$)w[$]=v[S]}else w.fill(1n);g.attention_mask=new pe("int64",w,[1,p])}return g}}class v3 extends Cr{constructor(e){super(e);const r=this.config.sampling_rate,n=Dn(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let a=0;a<n.length;++a)n[a].push(0);this.mel_filters=n,this.window=Ba(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,r){return Ra(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(e){cn(e,"ASTFeatureExtractor");const r=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const n=this.std*2,a=r.data;for(let s=0;s<a.length;++s)a[s]=(a[s]-this.mean)/n}return{input_values:r.unsqueeze_(0)}}}class $3 extends Cr{constructor(e){super(e),this.mel_filters=Dn(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=Dn(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=Ba(this.config.fft_window_size,"hann")}async _get_input_mel(e,r,n,a){let s;const i=e.length-r;if(i>0)if(n==="rand_trunc"){const o=Math.floor(Math.random()*(i+1));e=e.subarray(o,o+r),s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${n}" not implemented`);else{if(i<0){let o=new Float64Array(r);if(o.set(e),a==="repeat")for(let l=e.length;l<r;l+=e.length)o.set(e.subarray(0,Math.min(e.length,r-l)),l);else if(a==="repeatpad")for(let l=e.length;l<-i;l+=e.length)o.set(e,l);e=o}if(n==="fusion")throw new Error(`Truncation strategy "${n}" not implemented`);s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return s.unsqueeze_(0)}async _extract_fbank_features(e,r,n=null){return Ra(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:r,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:r=null}={}){return cn(e,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(e,r??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class x3 extends Cr{async _call(e){cn(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const r=[1,1,e.length];return{input_values:new pe("float32",e,r)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,r){const n=r/this.samples_to_frames(r)/this.config.sampling_rate,a=[];for(const s of e.tolist()){const i=[];let o=-1;for(let l=0;l<s.length;++l){const u=_t(s[l]),[d,h]=Lt(u),[f,g]=[l,l+1];h!==o?(o=h,i.push({id:h,start:f,end:g,score:d})):(i.at(-1).end=g,i.at(-1).score+=d)}a.push(i.map(({id:l,start:u,end:d,score:h})=>({id:l,start:u*n,end:d*n,confidence:h/(d-u)})))}return a}}class S3 extends Cr{constructor(e){super(e);const r=this.config.sampling_rate,n=Dn(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let a=0;a<n.length;++a)n[a].push(0);this.mel_filters=n,this.window=Ba(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map(r=>r*32768),Ra(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){cn(e,"WeSpeakerFeatureExtractor");const r=(await this._extract_fbank_features(e)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const n=r.mean(1).data,a=r.data,[s,i,o]=r.dims;for(let l=0;l<s;++l){const u=l*i*o,d=l*o;for(let h=0;h<i;++h){const f=u+h*o;for(let g=0;g<o;++g)a[f+g]-=n[d+g]}}}return{input_features:r}}}class k3 extends Cr{}class Wr extends vt{constructor(e){super(),this.feature_extractor=e}async _call(e,...r){return await this.feature_extractor(e,...r)}}class E3 extends Wr{async _call(...e){return await this.feature_extractor(...e)}post_process_masks(...e){return this.feature_extractor.post_process_masks(...e)}reshape_input_points(...e){return this.feature_extractor.reshape_input_points(...e)}}class C3 extends Wr{async _call(e){return await this.feature_extractor(e)}}class T3 extends Wr{async _call(e){return await this.feature_extractor(e)}}class A3 extends Wr{async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}}class I3 extends Wr{async _call(e){return await this.feature_extractor(e)}}class M3 extends Wr{}class a0 extends Wr{constructor(e){super(e);const{tasks_answer_post_processing_type:r,task_prompts_without_inputs:n,task_prompts_with_input:a}=e.config;this.tasks_answer_post_processing_type=new Map(Object.entries(r??{})),this.task_prompts_without_inputs=new Map(Object.entries(n??{})),this.task_prompts_with_input=new Map(Object.entries(a??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){typeof e=="string"&&(e=[e]);const r=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))r.push(this.task_prompts_without_inputs.get(n));else{for(const[a,s]of this.task_prompts_with_input)if(n.includes(a)){r.push(s.replaceAll("{input}",n).replaceAll(a,""));break}r.length!==e.length&&r.push(n)}return r}post_process_generation(e,r,n){const a=this.tasks_answer_post_processing_type.get(r)??"pure_text";e=e.replaceAll("<s>","").replaceAll("</s>","");let s;switch(a){case"pure_text":s=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const i=a==="ocr"?"quad_boxes":"bboxes",o=e.matchAll(this.regexes[i]),l=[],u=[];for(const[d,h,...f]of o)l.push(h?h.trim():l.at(-1)??""),u.push(f.map((g,p)=>(Number(g)+.5)/this.size_per_bin*n[p%2]));s={labels:l,[i]:u};break;default:throw new Error(`Task "${r}" (of type "${a}") not yet implemented.`)}return{[r]:s}}}class xt{static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main"}={}){let o=n??await Rr(e,"preprocessor_config.json",!0,{progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i}),l=o.feature_extractor_type??o.image_processor_type,u=this.FEATURE_EXTRACTOR_CLASS_MAPPING[l];if(!u)if(o.size!==void 0)console.warn(`Feature extractor type "${l}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),u=Ge;else throw new Error(`Unknown Feature Extractor type: ${l}`);let d=this.PROCESSOR_CLASS_MAPPING[o.processor_class]??Wr,h=new u(o);return new d(h)}}B(xt,"FEATURE_EXTRACTOR_CLASS_MAPPING",{ImageFeatureExtractor:Ge,WhisperFeatureExtractor:y3,ViTFeatureExtractor:e3,MobileViTFeatureExtractor:t0,MobileViTImageProcessor:o3,MobileNetV1FeatureExtractor:n3,MobileNetV2FeatureExtractor:a3,MobileNetV3FeatureExtractor:i3,MobileNetV4FeatureExtractor:s3,OwlViTFeatureExtractor:r0,Owlv2ImageProcessor:l3,CLIPFeatureExtractor:J_,CLIPImageProcessor:Xk,Florence2Processor:a0,ChineseCLIPFeatureExtractor:Qk,SiglipImageProcessor:Zk,ConvNextFeatureExtractor:e0,ConvNextImageProcessor:Jk,SegformerFeatureExtractor:jk,BitImageProcessor:Kk,DPTImageProcessor:qk,DPTFeatureExtractor:Z_,GLPNFeatureExtractor:Yk,BeitFeatureExtractor:c3,DeiTFeatureExtractor:d3,DetrFeatureExtractor:h3,RTDetrImageProcessor:u3,YolosFeatureExtractor:f3,DonutFeatureExtractor:n0,NougatImageProcessor:p3,EfficientNetImageProcessor:r3,ViTImageProcessor:t3,VitMatteImageProcessor:_3,SamImageProcessor:m3,Swin2SRImageProcessor:g3,Wav2Vec2FeatureExtractor:w3,SeamlessM4TFeatureExtractor:b3,SpeechT5FeatureExtractor:k3,ASTFeatureExtractor:v3,ClapFeatureExtractor:$3,PyAnnoteFeatureExtractor:x3,WeSpeakerFeatureExtractor:S3}),B(xt,"PROCESSOR_CLASS_MAPPING",{WhisperProcessor:C3,Wav2Vec2ProcessorWithLM:T3,PyAnnoteProcessor:A3,SamProcessor:E3,SpeechT5Processor:I3,OwlViTProcessor:M3,Florence2Processor:a0});async function Tr(t){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(e=>It.read(e)))}async function Ji(t,e){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(r=>typeof r=="string"||r instanceof URL?Bk(r,e):r instanceof Float64Array?new Float32Array(r):r))}function i0(t,e){e&&(t=t.map(i=>i|0));const[r,n,a,s]=t;return{xmin:r,ymin:n,xmax:a,ymax:s}}class tt extends vt{constructor({task:e,model:r,tokenizer:n=null,processor:a=null}){super(),this.task=e,this.model=r,this.tokenizer=n,this.processor=a}async dispose(){await this.model.dispose()}}class O3 extends tt{constructor(e){super(e)}async _call(e,{top_k:r=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(n),s=this.model.config.problem_type==="multi_label_classification"?l=>l.sigmoid():l=>new pe("float32",_t(l.data),l.dims),i=this.model.config.id2label,o=[];for(const l of a.logits){const u=s(l),d=await An(u,r),h=d[0].tolist(),g=d[1].tolist().map((p,w)=>({label:i?i[p]:`LABEL_${p}`,score:h[w]}));r===1?o.push(...g):o.push(g)}return Array.isArray(e)||r===1?o:o[0]}}class z3 extends tt{constructor(e){super(e)}async _call(e,{ignore_labels:r=["O"]}={}){const n=Array.isArray(e),a=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),i=(await this.model(a)).logits,o=this.model.config.id2label,l=[];for(let u=0;u<i.dims[0];++u){const d=a.input_ids[u],h=i[u],f=[];for(let g=0;g<h.dims[0];++g){const p=h[g],w=Lt(p.data)[1],v=o?o[w]:`LABEL_${w}`;if(r.includes(v))continue;const S=this.tokenizer.decode([d[g].item()],{skip_special_tokens:!0});if(S==="")continue;const $=_t(p.data);f.push({entity:v,score:$[w],index:g,word:S})}l.push(f)}return n?l:l[0]}}class P3 extends tt{constructor(e){super(e)}async _call(e,r,{top_k:n=1}={}){const a=this.tokenizer(e,{text_pair:r,padding:!0,truncation:!0}),{start_logits:s,end_logits:i}=await this.model(a),o=a.input_ids.tolist(),l=a.attention_mask.tolist(),u=this.tokenizer.all_special_ids,d=[];for(let h=0;h<s.dims[0];++h){const f=o[h],g=f.findIndex(E=>E==this.tokenizer.sep_token_id);l[h].map((E,T)=>E==1&&(T===0||T>g&&u.findIndex(A=>A==f[T])===-1));const p=s[h].tolist(),w=i[h].tolist();for(let E=1;E<p.length;++E)(l[h]==0||E<=g||u.findIndex(T=>T==f[E])!==-1)&&(p[E]=-1/0,w[E]=-1/0);const v=_t(p).map((E,T)=>[E,T]),S=_t(w).map((E,T)=>[E,T]);v[0][0]=0,S[0][0]=0;const $=K0(v,S).filter(E=>E[0][1]<=E[1][1]).map(E=>[E[0][1],E[1][1],E[0][0]*E[1][0]]).sort((E,T)=>T[2]-E[2]);for(let E=0;E<Math.min($.length,n);++E){const[T,A,z]=$[E],R=f.slice(T,A+1),G=this.tokenizer.decode(R,{skip_special_tokens:!0});d.push({answer:G,score:z})}}return n===1?d[0]:d}}class R3 extends tt{constructor(e){super(e)}async _call(e,{top_k:r=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:a}=await this.model(n),s=[],i=n.input_ids.tolist();for(let o=0;o<i.length;++o){const l=i[o],u=l.findIndex(p=>p==this.tokenizer.mask_token_id);if(u===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const d=a[o][u],h=await An(new pe("float32",_t(d.data),d.dims),r),f=h[0].tolist(),g=h[1].tolist();s.push(g.map((p,w)=>{const v=l.slice();return v[u]=p,{score:f[w],token:Number(p),token_str:this.tokenizer.model.vocab[p],sequence:this.tokenizer.decode(v,{skip_special_tokens:!0})}}))}return Array.isArray(e)?s:s[0]}}class fl extends tt{constructor(r){super(r);B(this,"_key","generated_text")}async _call(r,n={}){Array.isArray(r)||(r=[r]),this.model.config.prefix&&(r=r.map(u=>this.model.config.prefix+u));const a=this.model.config.task_specific_params;a&&a[this.task]&&a[this.task].prefix&&(r=r.map(u=>a[this.task].prefix+u));const s=this.tokenizer,i={padding:!0,truncation:!0};let o;this instanceof s0&&"_build_translation_inputs"in s?o=s._build_translation_inputs(r,i,n):o=s(r,i);const l=await this.model.generate({...o,...n});return s.batch_decode(l,{skip_special_tokens:!0}).map(u=>({[this._key]:u}))}}class B3 extends fl{constructor(r){super(r);B(this,"_key","summary_text")}}class s0 extends fl{constructor(r){super(r);B(this,"_key","translation_text")}}function o0(t){return Array.isArray(t)&&t.every(e=>"role"in e&&"content"in e)}class D3 extends tt{constructor(e){super(e)}async _call(e,r={}){let n=!1,a=!1,s;if(typeof e=="string")s=e=[e];else if(Array.isArray(e)&&e.every(g=>typeof g=="string"))n=!0,s=e;else{if(o0(e))e=[e];else if(Array.isArray(e)&&e.every(o0))n=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");a=!0,s=e.map(g=>this.tokenizer.apply_chat_template(g,{tokenize:!1,add_generation_prompt:!0}))}const i=r.add_special_tokens??!1,o=a?!1:r.return_full_text??!0;this.tokenizer.padding_side="left";const l=this.tokenizer(s,{add_special_tokens:i,padding:!0,truncation:!0}),u=await this.model.generate({...l,...r}),d=this.tokenizer.batch_decode(u,{skip_special_tokens:!0});let h;!o&&l.input_ids.dims.at(-1)>0&&(h=this.tokenizer.batch_decode(l.input_ids,{skip_special_tokens:!0}).map(g=>g.length));const f=Array.from({length:e.length},g=>[]);for(let g=0;g<d.length;++g){const p=Math.floor(g/u.dims[0]*e.length);h&&(d[g]=d[g].slice(h[p])),f[p].push({generated_text:a?[...e[p],{role:"assistant",content:d[g]}]:d[g]})}return!n&&f.length===1?f[0]:f}}class N3 extends tt{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([r,n])=>[r.toLowerCase(),n])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,r,{hypothesis_template:n="This example is {}.",multi_label:a=!1}={}){const s=Array.isArray(e);s||(e=[e]),Array.isArray(r)||(r=[r]);const i=r.map(u=>n.replace("{}",u)),o=a||r.length===1,l=[];for(const u of e){const d=[];for(const g of i){const p=this.tokenizer(u,{text_pair:g,padding:!0,truncation:!0}),w=await this.model(p);o?d.push([w.logits.data[this.contradiction_id],w.logits.data[this.entailment_id]]):d.push(w.logits.data[this.entailment_id])}const f=(o?d.map(g=>_t(g)[1]):_t(d)).map((g,p)=>[g,p]).sort((g,p)=>p[0]-g[0]);l.push({sequence:u,labels:f.map(g=>r[g[1]]),scores:f.map(g=>g[0])})}return s?l:l[0]}}class F3 extends tt{constructor(e){super(e)}async _call(e,{pooling:r="none",normalize:n=!1,quantize:a=!1,precision:s="binary"}={}){const i=this.tokenizer(e,{padding:!0,truncation:!0}),o=await this.model(i);let l=o.last_hidden_state??o.logits??o.token_embeddings;if(r!=="none")if(r==="mean")l=Gw(l,i.attention_mask);else if(r==="cls")l=l.slice(null,0);else throw Error(`Pooling method '${r}' not supported.`);return n&&(l=l.normalize(2,-1)),a&&(l=Zw(l,s)),l}}class L3 extends tt{constructor(e){super(e)}async _call(e,{pool:r=null}={}){const n=await Tr(e),{pixel_values:a}=await this.processor(n),s=await this.model({pixel_values:a});let i;if(r){if(!("pooler_output"in s))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");i=s.pooler_output}else i=s.last_hidden_state??s.logits??s.image_embeds;return i}}class U3 extends tt{constructor(e){super(e)}async _call(e,{top_k:r=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,a=await Ji(e,n),s=this.model.config.id2label,i=[];for(const o of a){const l=await this.processor(o),d=(await this.model(l)).logits[0],h=await An(new pe("float32",_t(d.data),d.dims),r),f=h[0].tolist(),p=h[1].tolist().map((w,v)=>({label:s?s[w]:`LABEL_${w}`,score:f[v]}));i.push(p)}return Array.isArray(e)?i:i[0]}}class W3 extends tt{constructor(e){super(e)}async _call(e,r,{hypothesis_template:n="This is a sound of {}."}={}){const a=!Array.isArray(e);a&&(e=[e]);const s=r.map(d=>n.replace("{}",d)),i=this.tokenizer(s,{padding:!0,truncation:!0}),o=this.processor.feature_extractor.config.sampling_rate,l=await Ji(e,o),u=[];for(const d of l){const h=await this.processor(d),f=await this.model({...i,...h}),g=_t(f.logits_per_audio.data);u.push([...g].map((p,w)=>({score:p,label:r[w]})))}return a?u[0]:u}}class V3 extends tt{constructor(e){super(e)}async _call(e,r={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,r);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,r);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,r){r.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),r.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const a=this.processor.feature_extractor.config.sampling_rate,s=await Ji(e,a),i=[];for(const o of s){const l=await this.processor(o),d=(await this.model(l)).logits[0],h=[];for(const g of d)h.push(Lt(g.data)[1]);const f=this.tokenizer.decode(h);i.push({text:f})}return n?i[0]:i}async _call_whisper(e,r){const n=r.return_timestamps??!1,a=r.chunk_length_s??0,s=r.force_full_sequences??!1;let i=r.stride_length_s??null;const o={...r};n==="word"&&(o.return_token_timestamps=!0,o.return_timestamps=!1);const l=!Array.isArray(e);l&&(e=[e]);const u=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,h=this.processor.feature_extractor.config.sampling_rate,f=await Ji(e,h),g=[];for(const p of f){let w=[];if(a>0){if(i===null)i=a/6;else if(a<=i)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const $=h*a,E=h*i,T=$-2*E;let A=0;for(;;){const z=A+$,R=p.subarray(A,z),G=await this.processor(R),j=A===0,q=z>=p.length;if(w.push({stride:[R.length,j?0:E,q?0:E],input_features:G.input_features,is_last:q}),q)break;A+=T}}else w=[{stride:[p.length,0,0],input_features:(await this.processor(p)).input_features,is_last:!0}];for(const $ of w){o.num_frames=Math.floor($.stride[0]/d);const E=await this.model.generate({inputs:$.input_features,...o});n==="word"?($.tokens=E.sequences.tolist()[0],$.token_timestamps=E.token_timestamps.tolist()[0].map(T=>Qn(T,2))):$.tokens=E[0].tolist(),$.stride=$.stride.map(T=>T/h)}const[v,S]=this.tokenizer._decode_asr(w,{time_precision:u,return_timestamps:n,force_full_sequences:s});g.push({text:v,...S})}return l?g[0]:g}}class G3 extends tt{constructor(e){super(e)}async _call(e,r={}){const n=Array.isArray(e),a=await Tr(e),{pixel_values:s}=await this.processor(a),i=[];for(const o of s){o.dims=[1,...o.dims];const l=await this.model.generate({inputs:o,...r}),u=this.tokenizer.batch_decode(l,{skip_special_tokens:!0}).map(d=>({generated_text:d.trim()}));i.push(u)}return n?i:i[0]}}class H3 extends tt{constructor(e){super(e)}async _call(e,{top_k:r=5}={}){const n=await Tr(e),{pixel_values:a}=await this.processor(n),s=await this.model({pixel_values:a}),i=this.model.config.id2label,o=[];for(const l of s.logits){const u=await An(new pe("float32",_t(l.data),l.dims),r),d=u[0].tolist(),f=u[1].tolist().map((g,p)=>({label:i?i[g]:`LABEL_${g}`,score:d[p]}));o.push(f)}return Array.isArray(e)?o:o[0]}}class j3 extends tt{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:r=.5,mask_threshold:n=.5,overlap_mask_area_threshold:a=.8,label_ids_to_fuse:s=null,target_sizes:i=null,subtask:o=null}={}){if(Array.isArray(e)&&e.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const u=await Tr(e),d=u.map(S=>[S.height,S.width]),{pixel_values:h,pixel_mask:f}=await this.processor(u),g=await this.model({pixel_values:h,pixel_mask:f});let p=null;if(o!==null)p=this.subtasks_mapping[o];else for(let[S,$]of Object.entries(this.subtasks_mapping))if($ in this.processor.feature_extractor){p=this.processor.feature_extractor[$].bind(this.processor.feature_extractor),o=S;break}const w=this.model.config.id2label,v=[];if(o==="panoptic"||o==="instance"){const S=p(g,r,n,a,s,i??d)[0],$=S.segmentation;for(const E of S.segments_info){const T=new Uint8ClampedArray($.data.length);for(let z=0;z<$.data.length;++z)$.data[z]===E.id&&(T[z]=255);const A=new It(T,$.dims[1],$.dims[0],1);v.push({score:E.score,label:w[E.label_id],mask:A})}}else if(o==="semantic"){const{segmentation:S,labels:$}=p(g,i??d)[0];for(const E of $){const T=new Uint8ClampedArray(S.data.length);for(let z=0;z<S.data.length;++z)S.data[z]===E&&(T[z]=255);const A=new It(T,S.dims[1],S.dims[0],1);v.push({score:null,label:w[E],mask:A})}}else throw Error(`Subtask ${o} not supported.`);return v}}class q3 extends tt{constructor(e){super(e)}async _call(e,r,{hypothesis_template:n="This is a photo of {}"}={}){const a=Array.isArray(e),s=await Tr(e),i=r.map(f=>n.replace("{}",f)),o=this.tokenizer(i,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:l}=await this.processor(s),u=await this.model({...o,pixel_values:l}),d=this.model.config.model_type==="siglip"?f=>f.sigmoid().data:f=>_t(f.data),h=[];for(const f of u.logits_per_image){const p=[...d(f)].map((w,v)=>({score:w,label:r[v]}));p.sort((w,v)=>v.score-w.score),h.push(p)}return a?h:h[0]}}class K3 extends tt{constructor(e){super(e)}async _call(e,{threshold:r=.9,percentage:n=!1}={}){const a=Array.isArray(e);if(a&&e.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const s=await Tr(e),i=n?null:s.map(g=>[g.height,g.width]),{pixel_values:o,pixel_mask:l}=await this.processor(s),u=await this.model({pixel_values:o,pixel_mask:l}),d=this.processor.feature_extractor.post_process_object_detection(u,r,i),h=this.model.config.id2label,f=d.map(g=>g.boxes.map((p,w)=>({score:g.scores[w],label:h[g.classes[w]],box:i0(p,!n)})));return a?f:f[0]}}class Y3 extends tt{constructor(e){super(e)}async _call(e,r,{threshold:n=.1,top_k:a=null,percentage:s=!1}={}){const i=Array.isArray(e),o=await Tr(e),l=this.tokenizer(r,{padding:!0,truncation:!0}),u=await this.processor(o),d=[];for(let h=0;h<o.length;++h){const f=o[h],g=s?null:[[f.height,f.width]],p=u.pixel_values[h].unsqueeze_(0),w=await this.model({...l,pixel_values:p}),v=this.processor.feature_extractor.post_process_object_detection(w,n,g,!0)[0];let S=v.boxes.map(($,E)=>({score:v.scores[E],label:r[v.classes[E]],box:i0($,!s)})).sort(($,E)=>E.score-$.score);a!==null&&(S=S.slice(0,a)),d.push(S)}return i?d:d[0]}}class X3 extends tt{constructor(e){super(e)}async _call(e,r,n={}){throw new Error("This pipeline is not yet supported in Transformers.js v3.")}}class Q3 extends tt{constructor(r){super(r);B(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=r.vocoder??null}async _call(r,{speaker_embeddings:n=null}={}){return this.processor?this._call_text_to_spectrogram(r,{speaker_embeddings:n}):this._call_text_to_waveform(r)}async _call_text_to_waveform(r){const n=this.tokenizer(r,{padding:!0,truncation:!0}),{waveform:a}=await this.model(n),s=this.model.config.sampling_rate;return{audio:a.data,sampling_rate:s}}async _call_text_to_spectrogram(r,{speaker_embeddings:n}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await un.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof n=="string"||n instanceof URL)&&(n=new Float32Array(await(await fetch(n)).arrayBuffer())),n instanceof Float32Array)n=new pe("float32",n,[1,n.length]);else if(!(n instanceof pe))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:a}=this.tokenizer(r,{padding:!0,truncation:!0}),{waveform:s}=await this.model.generate_speech(a,n,{vocoder:this.vocoder}),i=this.processor.feature_extractor.config.sampling_rate;return{audio:s.data,sampling_rate:i}}}class Z3 extends tt{constructor(e){super(e)}async _call(e){const r=await Tr(e),n=await this.processor(r),a=await this.model(n),s=[];for(const i of a.reconstruction){const o=i.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");s.push(It.fromTensor(o))}return s.length>1?s:s[0]}}class J3 extends tt{constructor(e){super(e)}async _call(e){const r=await Tr(e),n=await this.processor(r),{predicted_depth:a}=await this.model(n),s=[];for(let i=0;i<r.length;++i){const o=Vo(a[i],r[i].size.reverse(),"bilinear",!1),l=o.mul_(255/Lt(o.data)[0]).to("uint8");s.push({predicted_depth:a[i],depth:It.fromTensor(l)})}return s.length>1?s:s[0]}}const l0=Object.freeze({"text-classification":{tokenizer:pt,pipeline:O3,model:cl,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:pt,pipeline:z3,model:C_,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:pt,pipeline:P3,model:z_,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:pt,pipeline:R3,model:O_,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:pt,pipeline:B3,model:Qi,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:pt,pipeline:s0,model:Qi,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:pt,pipeline:fl,model:Qi,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:pt,pipeline:D3,model:M_,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:pt,pipeline:N3,model:cl,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:U3,model:U_,processor:xt,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:pt,pipeline:W3,model:un,processor:xt,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:pt,pipeline:V3,model:[T_,L_],processor:xt,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:pt,pipeline:Q3,model:[I_,A_],processor:[xt,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:pt,pipeline:G3,model:P_,processor:xt,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:H3,model:R_,processor:xt,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:j3,model:[B_,D_],processor:xt,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:pt,pipeline:q3,model:un,processor:xt,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:K3,model:N_,processor:xt,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:pt,pipeline:Y3,model:F_,processor:xt,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:pt,pipeline:X3,model:W_,processor:xt,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Z3,model:V_,processor:xt,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:J3,model:G_,processor:xt,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:pt,pipeline:F3,model:un,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:xt,pipeline:L3,model:[H_,un],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),eE=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function tE(t,e=null,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main",device:o=null,dtype:l=null,model_file_name:u=null,session_options:d={}}={}){t=eE[t]??t;const h=l0[t.split("_",1)[0]];if(!h)throw Error(`Unsupported pipeline: ${t}. Must be one of [${Object.keys(l0)}]`);e||(e=h.default.model,console.log(`No model specified. Using default model: "${e}".`));const f={progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i,device:o,dtype:l,model_file_name:u,session_options:d},g=new Map([["tokenizer",h.tokenizer],["model",h.model],["processor",h.processor]]),p=await rE(g,e,f);p.task=t,bn(r,{status:"ready",task:t,model:e});const w=h.pipeline;return new w(p)}async function rE(t,e,r){const n=Object.create(null),a=[];for(let[s,i]of t.entries()){if(!i)continue;let o;Array.isArray(i)?o=new Promise(async(l,u)=>{var h,f;let d;for(let g of i){if(g===null){l(null);return}try{l(await g.from_pretrained(e,r));return}catch(p){if((h=p.message)!=null&&h.includes("Unsupported model type"))d=p;else if((f=p.message)!=null&&f.includes("Could not locate file"))d=p;else{u(p);return}}}u(d)}):o=i.from_pretrained(e,r),n[s]=o,a.push(o)}await Promise.all(a);for(let[s,i]of Object.entries(n))n[s]=await i;return n}wn.IS_PROCESS_AVAILABLE,kt.allowLocalModels=!1;class Da{constructor(e,r,n){this.tokenizer=e,this.model=r,this.quantized=n}static async getInstance(e=null){return this.instance===null&&(this.instance=tE(this.task,this.model,{quantized:this.quantized,progress_callback:e,revision:this.model.includes("/whisper-medium")?"no_attentions":"main"})),this.instance}}B(Da,"task",null),B(Da,"model",null),B(Da,"quantized",null),B(Da,"instance",null),self.addEventListener("message",async t=>{const e=t.data;let r=await nE(e.audio,e.model,e.multilingual,e.quantized,e.subtask,e.language);r!==null&&self.postMessage({status:"complete",task:"automatic-speech-recognition",data:r})});class es extends Da{}B(es,"task","automatic-speech-recognition"),B(es,"model",null),B(es,"quantized",null);const nE=async(t,e,r,n,a,s)=>{const i=e.startsWith("distil-whisper/");let o=e;!i&&!r&&(o+=".en");const l=es;(l.model!==o||l.quantized!==n)&&(l.model=o,l.quantized=n,l.instance!==null&&((await l.getInstance()).dispose(),l.instance=null));let u=await l.getInstance(w=>{self.postMessage(w)});const d=u.processor.feature_extractor.config.chunk_length/u.model.config.max_source_positions;let h=[{tokens:[],finalised:!1}];function f(w){let v=h[h.length-1];Object.assign(v,w),v.finalised=!0,w.is_last||h.push({tokens:[],finalised:!1})}function g(w){let v=h[h.length-1];v.tokens=[...w[0].output_token_ids];let S=u.tokenizer._decode_asr(h,{time_precision:d,return_timestamps:!0,force_full_sequences:!1});self.postMessage({status:"update",task:"automatic-speech-recognition",data:S})}return await u(t,{top_k:0,do_sample:!1,chunk_length_s:i?20:30,stride_length_s:i?3:5,language:s,task:a,return_timestamps:!0,force_full_sequences:!1,callback_function:g,chunk_callback:f}).catch(w=>(self.postMessage({status:"error",task:"automatic-speech-recognition",data:w}),null))}})();
